<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>并联四足机器人</title>
      <link href="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
      <url>/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="并联四足机器人位置控制"><a href="#并联四足机器人位置控制" class="headerlink" title="并联四足机器人位置控制"></a>并联四足机器人位置控制</h1><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/2.jpg" alt="2" style="zoom:70%;"><p>参考：</p><p>【【教程】成本1K！从0教你DIY无刷四足机器人~灯哥无刷四足一代实验版开源啦！！！】 <a href="https://www.bilibili.com/video/BV1kV411i76z/?share_source=copy_web&vd_source=4eaa4760820b4cda603e510d556578ac">https://www.bilibili.com/video/BV1kV411i76z/?share_source=copy_web&amp;vd_source=4eaa4760820b4cda603e510d556578ac</a></p><p>【灯哥0基础DIY四足机器人指南（8）–用Matlab画出摆线步态曲线】 <a href="https://www.bilibili.com/video/BV1KQ4y1K7aV/?share_source=copy_web&vd_source=4eaa4760820b4cda603e510d556578ac">https://www.bilibili.com/video/BV1KQ4y1K7aV/?share_source=copy_web&amp;vd_source=4eaa4760820b4cda603e510d556578ac</a></p><p>华北舵狗王带你一起做四足机器人2（Moco-8四足机器人控制算法简介） - 华北舵狗王的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/69869440">https://zhuanlan.zhihu.com/p/69869440</a></p><p>【灯哥0基础DIY四足机器人指南（9）–手把手教你写出小跑步态程序】                                                                                                                                                   <a href="https://www.bilibili.com/video/BV1YD4y1D7k6/?share_source=copy_web&vd_source=4eaa4760820b4cda603e510d556578ac">https://www.bilibili.com/video/BV1YD4y1D7k6/?share_source=copy_web&amp;vd_source=4eaa4760820b4cda603e510d556578ac</a></p><p>[灯哥开源—四足机器人]程序算法讲解与STM32移植——PA_TROT和PA_WALK讲解和trot步态，walk步态，步态规划-CSDN                                                           <a href="https://blog.csdn.net/weixin_41659552/article/details/113738017?fromshare=blogdetail&sharetype=blogdetail&sharerId=113738017&sharerefer=PC&sharesource=qq_52769953&sharefrom=from_link">https://blog.csdn.net/weixin_41659552/article/details/113738017?fromshare=blogdetail&amp;sharetype=blogdetail&amp;sharerId=113738017&amp;sharerefer=PC&amp;sharesource=qq_52769953&amp;sharefrom=from_link</a></p><p>【干货|开源MIT Min cheetah机械狗设计(五)】|机械狗步态规划（重点） - 陈不陈的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/639128926">https://zhuanlan.zhihu.com/p/639128926</a></p><p>MIT Cheetah 完整开源代码与论文简介 - 廖洽源的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/79391139?utm_psn=1874912895365672960">https://zhuanlan.zhihu.com/p/79391139?utm_psn=1874912895365672960</a></p><p>四足机器人优化方法初探：快速移植MIT Cheetha MPC控制代码 - 华北舵狗王的文章 - 知乎                                                                                                               <a href="https://zhuanlan.zhihu.com/p/450008168?utm_psn=1874923719606009856">https://zhuanlan.zhihu.com/p/450008168?utm_psn=1874923719606009856</a></p><h2 id="摆线足端轨迹和运动学逆解"><a href="#摆线足端轨迹和运动学逆解" class="headerlink" title="摆线足端轨迹和运动学逆解"></a>摆线足端轨迹和运动学逆解</h2><p>关于摆动腿足端的轨迹，有以下期望：</p><p>1)在足端刚开始离地和将要触地时，希望足端的速度很小，并且在xy平面没有滑动趋势。</p><p>2)足端在轨迹的中段时运动迅速。</p><p>3)足端轨迹足够平滑，不存在波动。</p><p>​常用的足端估计有多项式曲线，分段直线和摆线。其中多项式曲线可以画出光滑且复杂的轨迹，但其中各个参数的计算比较复杂。分段直线轨迹虽然设计比较简单，但是轨迹不够光顺平滑。摆线轨迹虽然不能灵活的修改轨迹的形状，但是表达式简单且参数具有明显的几何意义，比较容易推导。</p><p>​摆线(Cycloid)，又称旋轮线、圆滚线，在数学中，摆线被定义为，一个圆沿一条直线运动时，圆边界上一定点所形成的轨迹。对于四足机器人，让四条腿以一定的相位差跑出这条曲线，四足机器人就有了前进的能力。</p><h3 id="用Matlab画出摆线步态曲线"><a href="#用Matlab画出摆线步态曲线" class="headerlink" title="用Matlab画出摆线步态曲线"></a>用Matlab画出摆线步态曲线</h3><h4 id="摆线方程"><a href="#摆线方程" class="headerlink" title="摆线方程"></a>摆线方程</h4><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/85ff4051c97592072b46432c89e1ea28.png" alt="85ff4051c97592072b46432c89e1ea28"></p><p>原始方程</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/7d86ae714c34334350057032c9d9e3de.png" alt="7d86ae714c34334350057032c9d9e3de"></p><p>推导</p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250216095006059.png" alt="image-20250216095006059" style="zoom:67%;"><p>对原始方程处理</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250215233919049.png" alt="image-20250215233919049"></p><p>Xs:水平方向足端当前起点位置 Xf:水平方向足端期望落足点位置   (xf-xs)&#x2F;2pi&#x3D;a </p><p>Zs:竖直方向足端当前起点位置 Zf:水平方向足端期望落足点位置</p><p>Ts:步态周期，λ：支撑相占空比, h:摆线高度 h&#x3D;2a&#x3D;(xf-xs)&#x2F;pi</p><p>t:离散时刻点，每个点对应摆线轨迹上的一个坐标</p><p>θ&#x3D;2pi*(t&#x2F;λTs) </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">Ts=<span class="number">1</span>;    <span class="comment">%周期</span></span><br><span class="line">fai=<span class="number">0.5</span>; <span class="comment">%支撑相占空比</span></span><br><span class="line">xs=<span class="number">-20</span>;  <span class="comment">%起点x位置</span></span><br><span class="line">xf=<span class="number">20</span>;   <span class="comment">%终点x位置</span></span><br><span class="line">zs=<span class="number">0</span>;    <span class="comment">%z起点位置</span></span><br><span class="line">h=<span class="number">30</span>;    <span class="comment">%抬腿高度 h=2a=(xf-xs)/pi</span></span><br><span class="line"></span><br><span class="line">x=[];    <span class="comment">%设定数组用于保存x坐标值</span></span><br><span class="line">z=[];    <span class="comment">%设定数组用于保存z坐标值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t=<span class="number">0</span>:<span class="number">0.01</span>:Ts*(<span class="number">1</span>-fai)         <span class="comment">%for循环，从0开始到0.5,间隔0.01循环赋值给t,制造出时刻数值</span></span><br><span class="line">    sigma=<span class="number">2</span>*<span class="built_in">pi</span>*t/((<span class="number">1</span>-fai)*Ts);  <span class="comment">%计算sigma值</span></span><br><span class="line">    xep=(xf-xs)*((sigma-<span class="built_in">sin</span>(sigma))/(<span class="number">2</span>*<span class="built_in">pi</span>))+xs; <span class="comment">%根据时刻计算x轴离散点</span></span><br><span class="line">    zep=h*(<span class="number">1</span>-<span class="built_in">cos</span>(sigma))/<span class="number">2</span>+zs;                  <span class="comment">%根据时刻计算z轴离散点</span></span><br><span class="line">    x=[x,xep];                                  <span class="comment">%放在x数组里，准备画图</span></span><br><span class="line">    z=[z,zep];                                  <span class="comment">%放在z数组里，准备画图</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">plot</span>(x,z)                                       <span class="comment">%指定两个数组，分别画图</span></span><br><span class="line">axis equal                                      <span class="comment">%x,y轴刻度等比例</span></span><br></pre></td></tr></table></figure><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250216104415504.png" alt="image-20250216104415504"></p><p>在Webots实现<strong>单条腿</strong>按摆线足端轨迹运动，占空比取0.5:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过足端轨迹得到足端离散的x_1,y_1坐标点，然后将它们运动学逆解即可得到关节电机相对应转的角度</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">trot</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (t &lt; T_s * fai)<span class="comment">//支撑相</span></span><br><span class="line">    &#123;</span><br><span class="line">        sigma = <span class="number">2</span> * pi * t / (fai * T_s);</span><br><span class="line">        zep = h * (<span class="number">1</span> - <span class="built_in">cos</span>(sigma)) / <span class="number">2</span>;                             <span class="comment">// t时刻足端在摆线坐标系里的高度</span></span><br><span class="line">        xep_b = (xf - xs) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xs; <span class="comment">// 摆动相x坐标</span></span><br><span class="line">        xep_z = (xs - xf) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xf; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出x</span></span><br><span class="line">        x_1 = xep_z; </span><br><span class="line">        <span class="comment">// 输出y</span></span><br><span class="line">        y_1 =<span class="number">0</span>+height;<span class="comment">//height为支撑相时期望的关节电机的离地高度（关节电机为坐标系原点），+0是因为此时足端在支撑相，触地。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((t &gt; T_s * fai) &amp;&amp; (t &lt;= T_s))<span class="comment">//摆动相</span></span><br><span class="line">    &#123;</span><br><span class="line">        sigma = <span class="number">2</span> * pi * (t-fai*T_s) / (fai * T_s);</span><br><span class="line">        zep = h * (<span class="number">1</span> - <span class="built_in">cos</span>(sigma)) / <span class="number">2</span>; </span><br><span class="line">        xep_b = (xf - xs) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xs; <span class="comment">// 摆动相x坐标</span></span><br><span class="line">        xep_z = (xs - xf) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xf; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">// 输出x</span></span><br><span class="line">        x_1 = xep_b; </span><br><span class="line">        <span class="comment">// 输出y</span></span><br><span class="line">        y_1 = zep+height; <span class="comment">//+zep是在摆动相足端抬起后该时刻足端距离关节电机的距离</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不同height的作用效果如下，可见height就是关节的离地高度，height的绝度值越大，关节离地越远</p><p>​                               <img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217102307359.png" alt="image-20250217102307359" style="zoom:70%;"><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217102406286.png" alt="image-20250217102406286" style="zoom:66%;"><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217102532540.png" alt="image-20250217102532540" style="zoom:57%;"></p><h3 id="运动学逆解"><a href="#运动学逆解" class="headerlink" title="运动学逆解"></a>运动学逆解</h3><p>通过足端轨迹生成足端的x,y坐标，然后运动学逆解得到两个关节电机对应旋转的角度即可控制足端实现预定轨迹。</p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250215223609895.png" alt="image-20250215223609895" style="zoom:80%;"><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250215223832155.png" alt="image-20250215223832155" style="zoom:72%;"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入足端坐标x_1,y_1，输出关节电机角度thet_rad1,thet_rad2</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">nijie</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//asin acos返回角度为弧度制</span></span><br><span class="line">    l = <span class="built_in">sqrt</span>(x_1 * x_1 + y_1 * y_1);</span><br><span class="line">    psi = <span class="built_in">asin</span>(x_1 / l);</span><br><span class="line">    phi = <span class="built_in">acos</span>((l * l + l_1 * l_1 - l_2 * l_2) / (<span class="number">2</span> * l * l_1));</span><br><span class="line">    thet_rad1 = phi - psi;</span><br><span class="line">    thet_rad2 = phi + psi;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单腿摆线足端轨迹代码实现"><a href="#单腿摆线足端轨迹代码实现" class="headerlink" title="单腿摆线足端轨迹代码实现"></a>单腿摆线足端轨迹代码实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;webots/robot.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;webots/motor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIME_STEP 64</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi 3.14</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> timestep;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> T_s = <span class="number">1</span>;<span class="comment">//周期</span></span><br><span class="line"><span class="type">float</span> fai = <span class="number">0.5</span>;<span class="comment">//支撑相占空比</span></span><br><span class="line"><span class="type">float</span> t=<span class="number">0.0</span>;<span class="comment">//离散时刻 每个t对应一个足端坐标点 通过调节每个循环中加的speed的大小可以改变步频</span></span><br><span class="line"><span class="type">float</span> speed=<span class="number">0.01</span>;<span class="comment">//步频调节</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*摆线足端轨迹参数*/</span></span><br><span class="line"><span class="type">float</span> xs=<span class="number">-40</span>;<span class="comment">//摆动相起点坐标</span></span><br><span class="line"><span class="type">float</span> xf=<span class="number">40</span>;<span class="comment">//摆动相终点坐标</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> height=<span class="number">-75</span>;<span class="comment">//支撑相关节电机期望离地高度 关节电机为坐标原点，故为负</span></span><br><span class="line"><span class="type">float</span> h=<span class="number">30</span>;<span class="comment">//摆线顶点高度，需满足h=2a=(xf-xs)/pi，不是任意赋值，否则不是摆线</span></span><br><span class="line"><span class="type">float</span> zep = <span class="number">0.0</span>;   <span class="comment">// 摆线顶部高度h</span></span><br><span class="line"><span class="type">float</span> xep_b = <span class="number">0.0</span>; <span class="comment">// 摆动相x坐标</span></span><br><span class="line"><span class="type">float</span> xep_z = <span class="number">0.0</span>; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//足端输出坐标，用于运动学逆解</span></span><br><span class="line"><span class="type">float</span> x_1, x_2, x_3, x_4; </span><br><span class="line"><span class="type">float</span> y_1, y_2, y_3, y_4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*运动学逆解参数*/</span></span><br><span class="line"><span class="type">float</span> sigma=<span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> psi = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> phi = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> thet_rad1 = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> thet_rad2 = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> l = <span class="number">0.0</span>;    <span class="comment">// 虚拟腿长</span></span><br><span class="line"><span class="type">float</span> l_1 = <span class="number">40.0</span>; <span class="comment">// 大腿长</span></span><br><span class="line"><span class="type">float</span> l_2 = <span class="number">80.0</span>; <span class="comment">// 小腿长</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">trot</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (t &lt; T_s * fai)<span class="comment">//支撑相</span></span><br><span class="line">    &#123;</span><br><span class="line">        sigma = <span class="number">2</span> * pi * t / (fai * T_s);</span><br><span class="line">        zep = h * (<span class="number">1</span> - <span class="built_in">cos</span>(sigma)) / <span class="number">2</span>;                             <span class="comment">// t时刻足端在摆线坐标系里的高度</span></span><br><span class="line">        xep_b = (xf - xs) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xs; <span class="comment">// 摆动相x坐标</span></span><br><span class="line">        xep_z = (xs - xf) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xf; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出x</span></span><br><span class="line">        x_1 = xep_z; </span><br><span class="line">        <span class="comment">// 输出y</span></span><br><span class="line">        y_1 =<span class="number">0</span>+height;<span class="comment">//height为支撑相时期望的关节电机的离地高度（关节电机为坐标系原点），+0是因为此时足端在支撑相，触地。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((t &gt; T_s * fai) &amp;&amp; (t &lt;= T_s))<span class="comment">//摆动相</span></span><br><span class="line">    &#123;</span><br><span class="line">        sigma = <span class="number">2</span> * pi * (t-fai*T_s) / (fai * T_s);</span><br><span class="line">        zep = h * (<span class="number">1</span> - <span class="built_in">cos</span>(sigma)) / <span class="number">2</span>; </span><br><span class="line">        xep_b = (xf - xs) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xs; <span class="comment">// 摆动相x坐标</span></span><br><span class="line">        xep_z = (xs - xf) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xf; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">// 输出x</span></span><br><span class="line">        x_1 = xep_b; </span><br><span class="line">        <span class="comment">// 输出y</span></span><br><span class="line">        y_1 = zep+height; <span class="comment">//+zep是在摆动相足端抬起后该时刻足端距离关节电机的距离</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">nijie</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//asin acos返回角度为弧度制</span></span><br><span class="line">    l = <span class="built_in">sqrt</span>(x_1 * x_1 + y_1 * y_1);</span><br><span class="line">    psi = <span class="built_in">asin</span>(x_1 / l);</span><br><span class="line">    phi = <span class="built_in">acos</span>((l * l + l_1 * l_1 - l_2 * l_2) / (<span class="number">2</span> * l * l_1));</span><br><span class="line">    thet_rad1 = phi - psi;</span><br><span class="line">    thet_rad2 = phi + psi;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    wb_robot_init();</span><br><span class="line"></span><br><span class="line">    WbDeviceTag Motor1 = wb_robot_get_device(<span class="string">&quot;motor1&quot;</span>);</span><br><span class="line">    WbDeviceTag Motor2 = wb_robot_get_device(<span class="string">&quot;motor2&quot;</span>);</span><br><span class="line"></span><br><span class="line">    timestep=wb_robot_get_basic_time_step();</span><br><span class="line">    <span class="keyword">while</span> (wb_robot_step(timestep) != <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (t &lt;= <span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            trot();<span class="comment">//摆线足端轨迹规划 输出足端坐标</span></span><br><span class="line">            nijie();<span class="comment">//运动学逆解 输入足端坐标 输出电机转动角度</span></span><br><span class="line">            wb_motor_set_position(Motor1, <span class="number">1.57</span>-thet_rad1); <span class="comment">//控制关节电机1旋转 1.57是两大腿平行时motor1的初始位置 90°</span></span><br><span class="line">            wb_motor_set_position(Motor2, <span class="number">-1.57</span>+thet_rad2);<span class="comment">//控制关节电机2旋转 -1.57是两大腿平行时motor2的初始位置 -90°</span></span><br><span class="line">            wb_robot_step(<span class="number">15</span>);</span><br><span class="line">            t += speed;<span class="comment">//控制步频</span></span><br><span class="line">        &#125; </span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    wb_robot_cleanup();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="webots仿真步长"><a href="#webots仿真步长" class="headerlink" title="webots仿真步长"></a>webots仿真步长</h2><p>在 <strong>Webots</strong> 中，**<code>basicTimeStep</code>** 和 <strong><code>wb_robot_step(time_step)</code></strong> 中的 <strong><code>time_step</code></strong> 是两个密切相关的重要概念。它们共同决定了仿真的时间步长和运行方式。</p><hr><ol><li><strong><code>basicTimeStep</code></strong> 的作用</li></ol><ul><li><strong><code>basicTimeStep</code></strong> 是在 Webots 世界文件（<code>.wbt</code>）中定义的一个全局参数。</li><li>它表示仿真的<strong>基本时间步长</strong>，单位为<strong>毫秒（ms）</strong>。</li><li>这个参数决定了仿真引擎更新物理世界和传感器数据的频率。</li><li>Webots 中的传感器（如摄像头、距离传感器、IMU 等）数据更新频率与 <code>basicTimeStep</code> 直接相关。</li></ul><p>示例：</p><p>在 <code>.wbt</code> 文件中，你可能会看到如下定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WorldInfo &#123;</span><br><span class="line">  basicTimeStep 16</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这里的 <code>basicTimeStep</code> 设置为 <strong>16 毫秒</strong>，意味着仿真引擎每 <strong>16 毫秒</strong> 更新一次物理世界和传感器数据。</li></ul><hr><ol start="2"><li><strong><code>wb_robot_step(time_step)</code></strong> 的作用</li></ol><ul><li><strong><code>wb_robot_step(time_step)</code></strong> 是 Webots 控制器程序中的一个函数调用。</li><li>它的作用是<strong>推进仿真时间</strong>，并更新仿真状态（例如传感器数据、物理引擎等）。</li><li>参数 <strong><code>time_step</code></strong> 表示控制器希望仿真推进的时间步长，单位也是<strong>毫秒（ms）</strong>。</li></ul><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wb_robot_step(32);</span><br></pre></td></tr></table></figure><ul><li>这行代码会让仿真时间向前推进 <strong>32 毫秒</strong>。</li></ul><hr><ol start="3"><li><strong><code>basicTimeStep</code> 和 <code>time_step</code> 的关系</strong></li></ol><ul><li><strong><code>basicTimeStep</code></strong> 是仿真引擎的最小时间单位，而 <strong><code>time_step</code></strong> 是控制器调用 <code>wb_robot_step</code> 时指定的时间步长。</li><li><strong><code>time_step</code></strong> 必须是 <strong><code>basicTimeStep</code></strong> 的整数倍。也就是说，<code>time_step = n * basicTimeStep</code>，其中 <code>n</code> 是一个正整数。<ul><li>如果 <code>time_step</code> 不是 <code>basicTimeStep</code> 的整数倍，Webots 会自动将其调整为最接近的整数倍值。</li></ul></li><li>每次调用 <code>wb_robot_step(time_step)</code>，仿真引擎会执行 <code>n</code> 次内部更新（每次更新 <code>basicTimeStep</code> 毫秒）。</li></ul><p>示例：</p><ul><li>如果 <code>basicTimeStep = 16</code>，而 <code>time_step = 32</code>：<ul><li>Webots 会执行 <strong>2 次</strong>内部更新（因为 32&#x3D;2×1632&#x3D;2×16）。</li></ul></li><li>如果 <code>basicTimeStep = 16</code>，而 <code>time_step = 50</code>：<ul><li>Webots 会将 <code>time_step</code> 调整为 <strong>48</strong>（因为 48&#x3D;3×1648&#x3D;3×16），并执行 <strong>3 次</strong>内部更新。</li></ul></li></ul><hr><ol start="4"><li><strong>为什么需要 <code>basicTimeStep</code> 和 <code>time_step</code> 的配合？</strong></li></ol><ul><li><strong><code>basicTimeStep</code></strong> 决定了仿真的精度和性能：<ul><li>较小的 <code>basicTimeStep</code> 会提高仿真精度，但会增加计算量，降低仿真速度。</li><li>较大的 <code>basicTimeStep</code> 会加快仿真速度，但可能会降低仿真精度。</li></ul></li><li><strong><code>time_step</code></strong> 决定了控制器的更新频率：<ul><li>较小的 <code>time_step</code> 会让控制器更频繁地更新，适合需要高实时性的场景。</li><li>较大的 <code>time_step</code> 会减少控制器的更新频率，适合计算量较大的控制器。</li></ul></li></ul><hr><ol start="5"><li><strong>实际应用中的建议</strong></li></ol><ul><li>在 Webots 中，通常会将 <code>time_step</code> 设置为与 <code>basicTimeStep</code> 相同的值，以确保仿真和控制器的同步。</li><li>例如：<ul><li>如果 <code>basicTimeStep = 16</code>，则通常设置 <code>time_step = 16</code>。</li><li>这样可以确保每次调用 <code>wb_robot_step</code> 时，仿真引擎只执行一次内部更新。</li></ul></li></ul><hr><p>总结</p><ul><li><strong><code>basicTimeStep</code></strong> 是仿真引擎的最小时间单位，定义在 <code>.wbt</code> 文件中。</li><li><strong><code>time_step</code></strong> 是控制器调用 <code>wb_robot_step</code> 时指定的时间步长，必须是 <code>basicTimeStep</code> 的整数倍。</li><li>两者共同决定了仿真的精度、性能和控制器更新频率。通常建议将 <code>time_step</code> 设置为与 <code>basicTimeStep</code> 相同的值。</li></ul><h2 id="步态规划"><a href="#步态规划" class="headerlink" title="步态规划"></a>步态规划</h2><p>​步态就是描述动物走路特点的一种<strong>周期性</strong>现象。</p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217193908989.png" alt="image-20250217193908989" style="zoom:50%;"><h3 id="占空比和相位"><a href="#占空比和相位" class="headerlink" title="占空比和相位"></a>占空比和相位</h3><p>​占空比即每条腿在一个周期内支撑相和摆动相所占的比例，进而用来确定每个时刻，应该有几条腿着地，几条腿悬空；相位用来确定这四条腿运动的先后顺序，也就是时序，只有按照这个先后顺序，机械狗才能做出正确的步态，不然就会非常的混乱。</p><h3 id="trot步态"><a href="#trot步态" class="headerlink" title="trot步态"></a>trot步态</h3><p>​摆动相和支撑相各占一半时间，任意时刻下都有两条腿触地，并且这两条腿分布在机身的对角线方向。</p><p>​                                   <img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217230254398.png" alt="image-20250217230254398" style="zoom:60%;"><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217230308193.png" alt="image-20250217230308193" style="zoom:45%;"></p><p>第一步 方程转化为代码</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217195253545.png" alt="image-20250217195253545"></p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217195314021.png" alt="  "></p><p>第二步 做出状态切换</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217200255318.png" alt="image-20250217200255318"></p><p>第三步 向电机输出对应的两种步态状态</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217203356862.png" alt="image-20250217203356862"></p><p>第四步 得到完整的TROT步态程序</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217204739449.png" alt="image-20250217204739449"></p><p>webots仿真：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;webots/robot.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;webots/motor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;webots/keyboard.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;webots/inertial_unit.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gaitz.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pid.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;hardware.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIME_STEP 32</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi 3.14</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> --</span></span><br><span class="line"><span class="comment"> 21</span></span><br><span class="line"><span class="comment"> 34</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;START&quot;</span>);</span><br><span class="line">    wb_robot_init();</span><br><span class="line">    <span class="comment">//Dog_Init();</span></span><br><span class="line">    hardwareInit();</span><br><span class="line">    pid_Init();</span><br><span class="line">    posInit();</span><br><span class="line">    <span class="keyword">while</span> (wb_robot_step(<span class="number">16</span>) != <span class="number">-1</span>)<span class="comment">//1</span></span><br><span class="line">    &#123;</span><br><span class="line">      t = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span> (t &lt;= <span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        values=wb_inertial_unit_get_roll_pitch_yaw(imu);</span><br><span class="line">        trot();</span><br><span class="line">        nijie();</span><br><span class="line">        execute();</span><br><span class="line">        wb_robot_step(<span class="number">20</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;angle:%f Yaw:%f\r\n&quot;</span>,angle,values[<span class="number">2</span>]);</span><br><span class="line">        t += <span class="number">0.01</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    wb_robot_cleanup();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> GAITZ_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GAITZ_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;webots/robot.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;hardware.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi 3.14</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIME_STEP 32</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> flag1=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> T_s = <span class="number">1</span>;</span><br><span class="line"><span class="type">float</span> fai = <span class="number">0.5</span>;</span><br><span class="line"><span class="type">int</span> timestep;</span><br><span class="line"><span class="type">float</span> t = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> sigma = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> psi_rf = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> phi_rf = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> psi_lf = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> phi_lf = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> psi_rb = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> phi_rb = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> psi_lb = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> phi_lb = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> thet_rad1_rf = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> thet_rad2_rf = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> thet_rad1_rb = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> thet_rad2_rb = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> thet_rad1_lf = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> thet_rad2_lf = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> thet_rad1_lb = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> thet_rad2_lb = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> x_rf, x_lf, x_rb, x_lb; <span class="comment">// 最终坐标</span></span><br><span class="line"><span class="type">float</span> y_rf, y_lf, y_rb, y_lb;</span><br><span class="line"><span class="comment">//****************************</span></span><br><span class="line"><span class="type">float</span> height = <span class="number">-19</span>;<span class="comment">//22</span></span><br><span class="line"><span class="type">float</span> h =<span class="number">9</span>;<span class="comment">//11</span></span><br><span class="line"><span class="type">float</span> zep = <span class="number">0.0</span>;   <span class="comment">// 摆线顶部高度h</span></span><br><span class="line"><span class="type">float</span> xep_b = <span class="number">0.0</span>; <span class="comment">// 摆动相x坐标</span></span><br><span class="line"><span class="type">float</span> xep_z = <span class="number">0.0</span>; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> l_rf = <span class="number">0.0</span>; <span class="comment">// 虚拟腿长</span></span><br><span class="line"><span class="type">float</span> l_lf = <span class="number">0.0</span>; <span class="comment">// 虚拟腿长</span></span><br><span class="line"><span class="type">float</span> l_rb = <span class="number">0.0</span>; <span class="comment">// 虚拟腿长</span></span><br><span class="line"><span class="type">float</span> l_lb = <span class="number">0.0</span>; <span class="comment">// 虚拟腿长</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> l_1 = <span class="number">10.0</span>; <span class="comment">// 大腿长</span></span><br><span class="line"><span class="type">float</span> l_2 = <span class="number">20.0</span>; <span class="comment">// 小腿长</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> xs = <span class="number">-10</span>;<span class="comment">//-6</span></span><br><span class="line"><span class="type">float</span> xf = <span class="number">10</span>;<span class="comment">//6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*控制trot状态</span></span><br><span class="line"><span class="comment">前进 r1=1 r2=1 r3=1 r4=1</span></span><br><span class="line"><span class="comment">后退 r1=-1 r2=-1 r3=-1 r4=-1</span></span><br><span class="line"><span class="comment">逆时针转向 r1=1 r2=-1 r3=-1 r4=1</span></span><br><span class="line"><span class="comment">顺时针转向 r1=-1 r2=1 r3=1 r4=-1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> r1=<span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> r2=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> r3=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> r4=<span class="number">-1</span>;</span><br><span class="line"><span class="comment">//****************************</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">trot</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (t &lt; T_s * fai)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//摆线足端轨迹规划</span></span><br><span class="line">        sigma = <span class="number">2</span> * pi * t / (fai * T_s);</span><br><span class="line">        zep = h * (<span class="number">1</span> - <span class="built_in">cos</span>(sigma)) / <span class="number">2</span>;                             <span class="comment">// y方向坐标</span></span><br><span class="line">        xep_b = (xf - xs) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xs; <span class="comment">// 摆动相x坐标</span></span><br><span class="line">        xep_z = (xs - xf) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xf; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出x</span></span><br><span class="line">        x_rf = xep_z*r1; </span><br><span class="line">        x_lf = xep_b*r2;</span><br><span class="line">        x_lb = xep_z*r3;</span><br><span class="line">        x_rb = xep_b*r4;</span><br><span class="line">        <span class="comment">// 输出y</span></span><br><span class="line">        y_rf = <span class="number">0</span> + height;</span><br><span class="line">        y_lf = zep + height;</span><br><span class="line">        y_lb = <span class="number">0</span> + height;</span><br><span class="line">        y_rb = zep + height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((t &gt; T_s * fai) &amp;&amp; (t &lt;= T_s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//摆线足端轨迹规划</span></span><br><span class="line">        sigma = <span class="number">2</span> * pi * (t - fai * T_s) / (fai * T_s);</span><br><span class="line">        zep = h * (<span class="number">1</span> - <span class="built_in">cos</span>(sigma)) / <span class="number">2</span>;</span><br><span class="line">        xep_b = (xf - xs) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xs; <span class="comment">// 摆动相x坐标</span></span><br><span class="line">        xep_z = (xs - xf) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xf; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出x</span></span><br><span class="line">        x_rf = xep_z*r1; </span><br><span class="line">        x_lf = xep_b*r2;</span><br><span class="line">        x_lb = xep_z*r3;</span><br><span class="line">        x_rb = xep_b*r4;</span><br><span class="line">        <span class="comment">// 输出y</span></span><br><span class="line">        y_rf = zep + height; <span class="comment">// 摆动</span></span><br><span class="line">        y_lf = <span class="number">0</span> + height;</span><br><span class="line">        y_lb = zep + height;</span><br><span class="line">        y_rb = <span class="number">0</span> + height;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="pace步态"><a href="#pace步态" class="headerlink" title="pace步态"></a>pace步态</h3><p>​                                        <img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217222552574.png" alt="image-20250217222552574" style="zoom:64%;"><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250217222801646.png" alt="image-20250217222801646"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">pace</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (t &lt; T_s * fai)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//摆线足端轨迹规划</span></span><br><span class="line">        sigma = <span class="number">2</span> * pi * t / (fai * T_s);</span><br><span class="line">        zep = h * (<span class="number">1</span> - <span class="built_in">cos</span>(sigma)) / <span class="number">2</span>;                             <span class="comment">// y方向坐标</span></span><br><span class="line">        xep_b = (xf - xs) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xs; <span class="comment">// 摆动相x坐标</span></span><br><span class="line">        xep_z = (xs - xf) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xf; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出x</span></span><br><span class="line">        x_rf = xep_z; </span><br><span class="line">        x_lf = xep_b;</span><br><span class="line">        x_lb = xep_b;</span><br><span class="line">        x_rb = xep_z;</span><br><span class="line">        <span class="comment">// 输出y</span></span><br><span class="line">        y_rf = <span class="number">0</span> + height;</span><br><span class="line">        y_lf = zep + height;</span><br><span class="line">        y_lb = zep + height;</span><br><span class="line">        y_rb = <span class="number">0</span> + height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((t &gt; T_s * fai) &amp;&amp; (t &lt;= T_s))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//摆线足端轨迹规划</span></span><br><span class="line">        sigma = <span class="number">2</span> * pi * (t - fai * T_s) / (fai * T_s);</span><br><span class="line">        zep = h * (<span class="number">1</span> - <span class="built_in">cos</span>(sigma)) / <span class="number">2</span>;</span><br><span class="line">        xep_b = (xf - xs) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xs; <span class="comment">// 摆动相x坐标</span></span><br><span class="line">        xep_z = (xs - xf) * ((sigma - <span class="built_in">sin</span>(sigma)) / (<span class="number">2</span> * pi)) + xf; <span class="comment">// 支撑相x坐标</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出x</span></span><br><span class="line">        x_rf = xep_b;</span><br><span class="line">        x_lf = xep_z;</span><br><span class="line">        x_lb = xep_z;</span><br><span class="line">        x_rb = xep_b;</span><br><span class="line">        <span class="comment">// 输出y</span></span><br><span class="line">        y_rf = zep + height; </span><br><span class="line">        y_lf = <span class="number">0</span> + height;</span><br><span class="line">        y_lb = <span class="number">0</span> + height;</span><br><span class="line">        y_rb = zep + height;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="walk步态"><a href="#walk步态" class="headerlink" title="walk步态"></a>walk步态</h3><p>​Walk步态是一种静态步态，即在运动过程中始终有三条腿处于支撑相，至多只有一条腿处于摆动相</p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250218160542915.png" alt="image-20250218160542915" style="zoom:67%;"><p>待开发,涉及到相位偏差,后面等把webots程序改成FSM模式后再补……可以先看程序框架里的部分内容有举例。</p><h3 id="转向步态"><a href="#转向步态" class="headerlink" title="转向步态"></a>转向步态</h3><p>​利用<strong>差速</strong>原理，本质还是trot步态，即一对对角腿在支撑相时另一对对角腿在摆动相，只不过腿运动方向相反。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*控制trot状态</span></span><br><span class="line"><span class="comment">前进 r1=1 r2=1 r3=1 r4=1</span></span><br><span class="line"><span class="comment">后退 r1=-1 r2=-1 r3=-1 r4=-1</span></span><br><span class="line"><span class="comment">逆时针转向 r1=1 r2=-1 r3=-1 r4=1</span></span><br><span class="line"><span class="comment">顺时针转向 r1=-1 r2=1 r3=1 r4=-1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">x_rf = xep_z*r1; </span><br><span class="line">x_lf = xep_b*r2;</span><br><span class="line">x_lb = xep_z*r3;</span><br><span class="line">x_rb = xep_b*r4;</span><br></pre></td></tr></table></figure><h2 id="程序框架"><a href="#程序框架" class="headerlink" title="程序框架"></a>程序框架</h2><p>参考MIT_CHEETAH开源框架，使用FSM状态机。</p><p>首先是main.c文件，while循环只在干一件事情，就是循环执行Dog_Run函数</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250218105920338.png" alt="image-20250218105920338"></p><p>Dog_Run函数如下所示</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250218105942567.png" alt="image-20250218105942567"></p><p>以下所有程序在Dog_Run函数中循环运行</p><p>进入FSM_Run后，切换步态，以trot步态为例，首先进入enter函数，通过Dog_SetPeriod函数设置周期(dog.period)和支撑相摆动相在周期所占的比例(dog.stRatio,dog.swRatio)，设置global.isWalking为1表示机器人正在行走，开始进行步态规划，计算摆线足端轨迹。</p><p>global.bias代表各个腿运动的时序关系</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250218110020203.png" alt="image-20250218110020203"></p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250218110234356.png" alt="image-20250218110234356"></p><p>首先进行相位计算，用for循环依次计算每条腿的相位，如果normalT&lt;dog.stRatio,说明在支撑相，global.contact[i]&#x3D;1,反之在摆动相</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250218110059359.png" alt="image-20250218110059359"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//确保结果始终在 [0, dog.period) 范围内，即使 global.runTime 很大。</span></span><br><span class="line"><span class="comment">////normalT 是归一化的时间，表示当前时间在步态周期中的位置</span></span><br><span class="line"><span class="type">float</span> normalT = <span class="built_in">fmod</span>(global.runTime + dog.period * global.bias[i], dog.period) / dog.period;</span><br><span class="line">以walk步态为例:</span><br><span class="line">global.runtime=<span class="number">0</span> </span><br><span class="line">第一条腿：normalT=(<span class="number">0</span>+<span class="number">0.0</span>)%<span class="number">1</span>/<span class="number">1</span>=<span class="number">0</span>      下一时刻<span class="number">0.01</span>&lt;dog.stRatio     支撑相 相位 <span class="number">0.01</span>/dog.stRatio</span><br><span class="line">第二条腿：normalT=(<span class="number">0</span>+<span class="number">0.25</span>)%<span class="number">1</span>/<span class="number">1</span>=<span class="number">0.25</span>  下一时刻<span class="number">0.26</span>&lt;dog.stRatio     支撑相 相位 <span class="number">0.26</span>/dog.stRatio</span><br><span class="line">第三条腿：normalT=(<span class="number">0</span>+<span class="number">0.50</span>)%<span class="number">1</span>/<span class="number">1</span>=<span class="number">0.5</span>   下一时刻<span class="number">0.51</span>&lt;dog.stRatio     支撑相 相位 <span class="number">0.51</span>/dog.stRatio</span><br><span class="line">第四条腿：normalT=(<span class="number">0</span>+<span class="number">0.75</span>)%<span class="number">1</span>/<span class="number">1</span>=<span class="number">0.75</span>  下一时刻<span class="number">0.76</span>&gt;dog.stRatio     摆动相 相位 (<span class="number">0.76</span>-dog.stRatio)/dog.swRatio</span><br><span class="line"></span><br><span class="line"><span class="comment">//x和y是要计算模的两个浮点数，函数返回值为x除以y的余数（double）。</span></span><br><span class="line"><span class="type">double</span> <span class="built_in">fmod</span>(<span class="type">double</span> x, <span class="type">double</span> y);</span><br></pre></td></tr></table></figure><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250218194553507.png" alt="image-20250218194553507" style="zoom:50%;"><p>根据当前相位计算摆线轨迹，p即前面我们方程里的sigma</p><p>sigma &#x3D; 2 * pi * t &#x2F; (fai * T_s);</p><p>sigma &#x3D; 2 * pi * (t - fai * T_s) &#x2F; (fai * T_s);</p><p><img src="/2025/02/15/%E5%B9%B6%E8%81%94%E5%9B%9B%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20250218110133037.png" alt="image-20250218110133037"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 四足机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电机控制</title>
      <link href="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/"/>
      <url>/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="概念扫盲"><a href="#概念扫盲" class="headerlink" title="概念扫盲"></a>概念扫盲</h1><p>BLDC（Brushless DC Motor，无刷直流电机）、PMSM（Permanent Magnet Synchronous Motor，永磁同步电机）和FOC（Field-Oriented Control，磁场定向控制。BLDC和PMSM是两种不同的电机，它们的相同点都是无刷的，不同点在于反电动势电压的形状，BLDC通常用方波电流驱动，PMSM通常采用正弦波电流驱动，FOC作为一种控制方法，可用于驱动BLDC和PMSM。</p><table><thead><tr><th>特性</th><th>BLDC</th><th>PMSM</th><th>FOC（控制策略）</th></tr></thead><tbody><tr><td><strong>电机类型</strong></td><td>无刷直流电机</td><td>永磁同步电机</td><td>控制策略（适用于BLDC和PMSM）</td></tr><tr><td><strong>驱动方式</strong></td><td>方波驱动</td><td>正弦波驱动</td><td>磁场定向控制</td></tr><tr><td><strong>控制精度</strong></td><td>较低</td><td>较高</td><td>高</td></tr><tr><td><strong>转矩波动</strong></td><td>较大</td><td>较小</td><td>极小</td></tr><tr><td><strong>应用场景</strong></td><td>低成本、高速应用</td><td>高性能、高精度应用</td><td>高性能、高精度控制</td></tr></tbody></table><h1 id="BLDC"><a href="#BLDC" class="headerlink" title="BLDC"></a>BLDC</h1><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124121336052.png" alt="image-20250124121336052" style="zoom:50%;"><h2 id="有刷VS无刷"><a href="#有刷VS无刷" class="headerlink" title="有刷VS无刷"></a>有刷VS无刷</h2><p>对于有刷电机的驱动方式，通过使直流电通过线圈绕组，得到一个具有磁极的电磁铁，磁极随后与永磁体的磁极相互作用，使转子旋转</p><p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124003923690.png" alt="image-20250124003923690"></p><p>在转子每旋转半圈后</p><p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124004101659.png" alt="image-20250124004101659"></p><p>要使转子一直旋转，我们需要翻转电磁铁的磁极，通过切换线圈绕组中电流的极性实现，这种相位转换成为换向</p><p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124004019961.png" alt="image-20250124004019961"></p><p>在有刷电机中，换向发生在电机旋转时电刷与转子换向器接触的机械位置，由于这种接触，电刷会随着时间的推移而发生磨损，进而影响电机的性能</p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124004757347.png" alt="image-20250124004757347" style="zoom:70%;"><p>BLDC通过用<strong>电子换向代替机械换向</strong>克服有刷电机的缺点</p><p>​                               <img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124005503307.png" alt="image-20250124005503307"></p><p>可以把BLDC看作是倒装的有刷电机，因为永磁体变为转子，线圈绕组变为了定子</p><p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124094906195.png" alt="image-20250124094906195"></p><p>对于BLDC和PMSM，其不同在于<strong>反电动势</strong>电压的形状，电机被旋转时起到发电机的作用，意味着在定子中感应到反电动势电压，该电压与电机的驱动电压相反，反电动势是电机的一个重要特征，通过观察其形状我们知道电机的类型，决定我们使用什么类型的控制算法来控制电机（可以将一相接到电压表，然后用手旋转转子，相当于发电机，电压表波形即该电机的反电动势）</p><p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124094850055.png" alt="image-20250124094850055"></p><h2 id="内部工作原理"><a href="#内部工作原理" class="headerlink" title="内部工作原理"></a>内部工作原理</h2><p>在A和C相之间施加电压，沿着虚线产生一个组合磁场</p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124101354503.png" alt="image-20250124101354503" style="zoom:50%;"><p>转子的角度是相对水平轴测量的，有六种不同的转子对齐方式，每种方式彼此间隔60°，如果我们能够每隔60°对相位进行正确的换向，就可以使电机旋转起来，这称为<strong>六步换向&#x2F;梯形控制</strong></p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124103000461.png" alt="image-20250124103000461" style="zoom:80%;"><p>随着极对的增加换向会更频繁的发生，为了适时以正确的相位进行正确的换向，我们需要知道转子的位置，通常使用<strong>霍尔传感器</strong>来测量转子位置</p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124103731170.png" alt="image-20250124103731170" style="zoom:50%;"><p>​                                                                       <img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124104036546.png" alt="image-20250124104036546" style="zoom:31%;"><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124104053450.png" alt="image-20250124104053450" style="zoom:30%;"></p><p>完成60°旋转后，就会发生下一步换向</p><p>​                                                                    <img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124104532717.png" alt="image-20250124104532717" style="zoom:33%;"><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124104556021.png" alt="image-20250124104556021" style="zoom:33%;"></p><p>换向的发生方式是：<strong>转子永远不与定子磁场对齐，而是始终追逐它</strong>。 因为当转子和定子磁场完全对准时时，电机产生零扭矩，因此我们永远不会让它们对准，其次当磁场互成90°角时，会产生最大扭矩，在BLDC中，<strong>六步换向从未到达90°</strong>，且角度在一定范围内波动，造成这种情况的原因是梯形控制本身的特性，磁场定向控制等更先进的技术通常用于控制PMSM，可通过在定子磁场和转子磁场之间达到90°来产生更大的扭矩</p><p>为了控制六步换向的相位，使用<strong>三相逆变器</strong>将直流电源转换为三相电流，三相逆变器会转换恒定电压，以使电机保持恒定速度，要以不同的速度控制电机，必须调节施加的电压，一种方法是<strong>PWM</strong></p><p><img src="/2025/01/24/%E7%94%B5%E6%9C%BA%E6%8E%A7%E5%88%B6/image-20250124105751476.png" alt="image-20250124105751476"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 电机控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCB设计_51</title>
      <link href="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/"/>
      <url>/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/</url>
      
        <content type="html"><![CDATA[<h1 id="电路分析基础"><a href="#电路分析基础" class="headerlink" title="电路分析基础"></a>电路分析基础</h1><h2 id="电阻"><a href="#电阻" class="headerlink" title="电阻"></a>电阻</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119124627693.png" alt="image-20250119124627693"></p><p>插接电阻：</p><p>四条杠：前2条为电阻的大小数值 ，若第三条不为1，还要乘以相应的乘数才是实际的大小 23x1&#x3D;23Ω5%</p><p>五条杠：前3条为电阻的大小数值 470x0.1&#x3D;47Ω%1</p><p>贴片电阻：</p><p>三位：前2位为有效数字 第三位是10的n次幂 104&#x3D;10x10^4&#x3D;100k5%</p><p>四位： 前3位为有效数字，第4位表示10的n次幂 5112&#x3D;511x10^2&#x3D;51.1k1%</p><p>R010: 0.01Ω  R003: 0.003Ω</p><h2 id="电容"><a href="#电容" class="headerlink" title="电容"></a>电容</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119140110670.png" alt="image-20250119140110670"></p><p>不耗电能，主要作用是储能和滤波。通交流，隔直流。</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119140149174.png" alt="image-20250119140149174"></p><p>MLCC适合中高段滤波，钽电容和铝电解电容适合中低段滤波</p><p>有的电容有极性</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119140434543.png" alt="image-20250119140434543"></p><p>电容封装上一般标有三条关键信息：容的容值，正负极性，耐压</p><h2 id="电感"><a href="#电感" class="headerlink" title="电感"></a>电感</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119190029851.png" alt="image-20250119190029851"></p><p>不耗电能，而是将电能转化为磁能储存起来。通直流，隔交流。</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119190343944.png" alt="image-20250119190343944"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119190506110.png" alt="image-20250119190506110"></p><h2 id="二极管"><a href="#二极管" class="headerlink" title="二极管"></a>二极管</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119190604087.png" alt="image-20250119190604087"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119191350580.png" alt="image-20250119191350580"></p><p>二极管在导通时电压是有一定损耗的，即存在一个导通压降。当在电源接二极管防反接时要注意使用的二极管的导通压降越小越好，如肖特基二极管。</p><p>若正向电压低于死区电压，二极管处于截止状态，当在反向电压下，二极管有一个比较低的静态反向电流，若超过反向击穿电压，则二极管被击穿，反向电流猛然增大，同时反向击穿电流会遏制反向击穿电压的继续增大，有一个稳压的特性，稳压二极管就是工作在这个反向击穿区。</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119192643366.png" alt="image-20250119192643366"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119193152441.png" alt="image-20250119193152441"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119193221200.png" alt="image-20250119193221200"></p><p>丝印对应的竖线位置都是二极管负极</p><h2 id="三极管"><a href="#三极管" class="headerlink" title="三极管"></a>三极管</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119193328606.png" alt="image-20250119193328606"></p><p>作用是将微弱信号放大成幅值较大的信号，可放大电流，同时也可作为一种电子开关</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119193628188.png" alt="image-20250119193628188"></p><p>区分PNP和NPN的小技巧：箭头指向是P指向N</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119194712130.png" alt="image-20250119194712130"></p><p>集电极c与基极b间构成了一个PN结，叫集电结；发射极e与基极b间构成了一个PN结，叫发射结。</p><p>其余部分看模电书，看郑易慧老师的课</p><h3 id="输出特性曲线"><a href="#输出特性曲线" class="headerlink" title="输出特性曲线"></a>输出特性曲线</h3><p>分为截止区，放大区，饱和区</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119195147944.png" alt="image-20250119195147944"></p><p>可参考水阀模型，ib越大，阀门开的越大，电流越大</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119195346685.png" alt="image-20250119195346685"></p><p>当ib&#x3D;0，三极管处于截止状态，发射结和集电结反偏</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119195826214.png" alt="image-20250119195826214"></p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119200737777.png" alt="image-20250119200737777"></p><h2 id="元件数据手册"><a href="#元件数据手册" class="headerlink" title="元件数据手册"></a>元件数据手册</h2><p>找数据手册的方法：</p><p>1.直接上立创商城搜然后下载 2.<a href="https://www.semiee.com/">https://www.semiee.com/</a></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119211814256.png" alt="image-20250119211814256"></p><p>引脚配置和功能这节是非常重要的一部分</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119205737504.png" alt="image-20250119205737504"></p><p>对于电气特性也要注意，注意我们设计的电路有没有突破电气特性表格的限制，若突破则要考虑换芯片&#x2F;电路设计</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119210337702.png" alt="image-20250119210337702"></p><p>对于应用和实现这一部分的内容是非常关键的，主要是厂家给的一些示例电路</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119211451565.png" alt="image-20250119211451565"></p><h2 id="电路原理"><a href="#电路原理" class="headerlink" title="电路原理"></a>电路原理</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119213208974.png" alt="image-20250119213208974"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119213606047.png" alt="image-20250119213606047"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119213817010.png" alt="image-20250119213817010"><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119213919507.png" alt="image-20250119213919507"></p><h3 id="基尔霍夫定律"><a href="#基尔霍夫定律" class="headerlink" title="基尔霍夫定律"></a>基尔霍夫定律</h3><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119214036768.png" alt="image-20250119214036768"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119214215429.png" alt="image-20250119214215429"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119214415024.png" alt="image-20250119214415024"></p><h4 id="基尔霍夫电流定律（KCL）"><a href="#基尔霍夫电流定律（KCL）" class="headerlink" title="基尔霍夫电流定律（KCL）"></a>基尔霍夫电流定律（KCL）</h4><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119214532600.png" alt="image-20250119214532600"></p><p>推广：基尔霍夫定律不仅适用于单一节点，也适用于电路中保卫多个节点的任一闭合面 </p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119220419459.png" alt="image-20250119220419459"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119221227406.png" alt="image-20250119221227406"></p><p>列方程时我们是不知道电流实际方向的，需要自己先设参考反向，解出来是正的则与电流实际方向相同，反之相反。</p><h4 id="基尔霍夫电压定律（KVL）"><a href="#基尔霍夫电压定律（KVL）" class="headerlink" title="基尔霍夫电压定律（KVL）"></a>基尔霍夫电压定律（KVL）</h4><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119222900104.png" alt="image-20250119222900104"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119223101873.png" alt="image-20250119223101873"></p><h1 id><a href="#" class="headerlink" title></a><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119223242602.png" alt="image-20250119223242602"></h1><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119223324917.png" alt="image-20250119223324917"></p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250119223433118.png" alt="image-20250119223433118" style="zoom:50%;"><h2 id="读懂原理图"><a href="#读懂原理图" class="headerlink" title="读懂原理图"></a>读懂原理图</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095303886.png" alt="image-20250120095303886"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095333327.png" alt="image-20250120095333327"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095349490.png" alt="image-20250120095349490"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095413063.png" alt="image-20250120095413063"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095427299.png" alt="image-20250120095427299"></p><h1 id="PCB设计基础"><a href="#PCB设计基础" class="headerlink" title="PCB设计基础"></a>PCB设计基础</h1><h2 id="PCB结构与组成"><a href="#PCB结构与组成" class="headerlink" title="PCB结构与组成"></a>PCB结构与组成</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095629066.png" alt="image-20250120095629066"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095650871.png" alt="image-20250120095650871"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095805629.png" alt="image-20250120095805629"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095845207.png" alt="image-20250120095845207"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120095956691.png" alt="image-20250120095956691"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120100037352.png" alt="image-20250120100037352"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120100134601.png" alt="image-20250120100134601"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120100151328.png" alt="image-20250120100151328"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120100302008.png" alt="image-20250120100302008"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120100353531.png" alt="image-20250120100353531"></p><h2 id="PCB叠层结构"><a href="#PCB叠层结构" class="headerlink" title="PCB叠层结构"></a>PCB叠层结构</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120100851144.png" alt="image-20250120100851144"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120100910420.png" alt="image-20250120100910420"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120101026343.png" alt="image-20250120101026343"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120101115960.png" alt="image-20250120101115960"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120101148747.png" alt="image-20250120101148747"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120101235640.png" alt="image-20250120101235640"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120101627487.png" alt="image-20250120101627487"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120101716738.png" alt="image-20250120101716738"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120101749572.png" alt="image-20250120101749572"></p><h2 id="PCB设计流程"><a href="#PCB设计流程" class="headerlink" title="PCB设计流程"></a>PCB设计流程</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120102935363.png" alt="image-20250120102935363"></p><h1 id="立创EDA软件使用"><a href="#立创EDA软件使用" class="headerlink" title="立创EDA软件使用"></a>立创EDA软件使用</h1><h2 id="元件符号绘制"><a href="#元件符号绘制" class="headerlink" title="元件符号绘制"></a>元件符号绘制</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120122747276.png" alt="image-20250120122747276"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120122920739.png" alt="image-20250120122920739"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120123955664.png" alt="image-20250120123955664"></p><h2 id="元件封装绘制"><a href="#元件封装绘制" class="headerlink" title="元件封装绘制"></a>元件封装绘制</h2><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120124109774.png" alt="image-20250120124109774"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120190422088.png" alt="image-20250120190422088"></p><p>放置的焊盘中间是默认有过孔的，但L2358N是个表贴封装，所以要改一下焊盘属性，把它的图层改为顶层</p><p><a href="https://www.bilibili.com/video/BV1At421h7Ui?spm_id_from=333.788.player.switch&vd_source=a9d487fcf1a579639c6348eb5a9321db&p=17">https://www.bilibili.com/video/BV1At421h7Ui?spm_id_from=333.788.player.switch&amp;vd_source=a9d487fcf1a579639c6348eb5a9321db&amp;p=17</a></p><h1 id="51单片机最小系统板设计"><a href="#51单片机最小系统板设计" class="headerlink" title="51单片机最小系统板设计"></a>51单片机最小系统板设计</h1><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120193921848.png" alt="image-20250120193921848"></p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120195957673.png" alt="image-20250120195957673"></p><p>​                       <img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120200802973.png" alt="image-20250120200802973">   </p><p>​            <img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120201234889.png" alt="image-20250120201234889"></p><p> Typec</p><p><img src="/2025/01/18/PCB%E8%AE%BE%E8%AE%A1-51/image-20250120203722960.png" alt="image-20250120203722960"></p>]]></content>
      
      
      
        <tags>
            
            <tag> PCB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>51单片机学习笔记</title>
      <link href="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/"/>
      <url>/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="51单片机学习笔记"><a href="#51单片机学习笔记" class="headerlink" title="51单片机学习笔记"></a><strong>51单片机学习笔记</strong></h1><h1 id="KEIL使用"><a href="#KEIL使用" class="headerlink" title="KEIL使用"></a>KEIL使用</h1><p>KEIL安装包及相关资源，视频教程见b站江科大视频</p><p><a href="https://pan.baidu.com/s/1Fao9VfrM67TIFeIsusnSIw?pwd=7rx1#list/path=%2F">https://pan.baidu.com/s/1Fao9VfrM67TIFeIsusnSIw?pwd=7rx1#list/path=%2F</a></p><h2 id="烧录代码（生成hex文件）"><a href="#烧录代码（生成hex文件）" class="headerlink" title="烧录代码（生成hex文件）"></a>烧录代码（生成hex文件）</h2><p>魔术棒-&gt;output-&gt;勾选create hex file（每次新建工程都要配置）</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/wps1.jpg" alt="wps1"></p><p>-&gt;编译，在object文件夹找到生成的hex文件(每次新建工程后要换成当前工程的文件夹，不然默认烧的是上个工程的hex文件)</p><p>-&gt;选择单片机型号为STC89C52RC 若选成STC89C52无法下载（用的普中的这个单片机丝印上写的有RC）</p><p>-&gt;单片机关机，点击下载程序，显示正在检测目标单片机后开机即可下载</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/wps2.jpg" alt="wps2"></p><p>当勾选左下角“当目标文件变化……”，我们在keil中编译后STC-ISP软件会自动发送下载指令，我们只需要对单片机断电，再次开机即可。</p><h2 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h2><p>​我们在使用Keil的时候编译器默认是使用ANSI进行编码的，在ANSI中对于英文是使用一个字节来表示，但是对于中文，在GB2312的编码中是利用两个字节来表示的，所以如果我们按一次backspace键在ANSI下只会删掉一个字节，所以出现乱码，因为中文还有一个字节没有删掉。</p><p>按此设置后输入中文不会出现乱码</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110163500423.png" alt="image-20250110163500423"></p><h2 id="创建多文件"><a href="#创建多文件" class="headerlink" title="创建多文件"></a>创建多文件</h2><p><a href="https://www.bilibili.com/video/BV1RB4y1i71i?spm_id_from=333.788.videopod.episodes&vd_source=a9d487fcf1a579639c6348eb5a9321db&p=157">https://www.bilibili.com/video/BV1RB4y1i71i?spm_id_from=333.788.videopod.episodes&amp;vd_source=a9d487fcf1a579639c6348eb5a9321db&amp;p=157</a></p><h2 id="keil主题配置"><a href="#keil主题配置" class="headerlink" title="keil主题配置"></a>keil主题配置</h2><p>非常nice的一个主题配色</p><p><a href="https://blog.csdn.net/wsstony579/article/details/53128206">https://blog.csdn.net/wsstony579/article/details/53128206</a></p><h2 id="模块化编程"><a href="#模块化编程" class="headerlink" title="模块化编程"></a>模块化编程</h2><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111180622650.png" alt="image-20250111180622650" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111180601816.png" alt="image-20250111180601816" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111181343717.png" alt="image-20250111181343717" style="zoom:67%;"><p>1.新建文件夹</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111185458919.png" alt="image-20250111185458919"></p><p>2.在文件夹内新建.c .h文件</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111185543920.png" alt="image-20250111185543920"></p><p>3.添加.c文件</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111185623718.png" alt="image-20250111185623718"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111185646516.png" alt="image-20250111185646516"></p><p>4.将.h文件路径包含进去，否则编译器找不到</p><p>魔术棒-&gt;c51-&gt;Include Paths 添加.h存放位置</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111181210122.png" alt="image-20250111181210122"></p><p>5.在.c文件中包含对应.h，在.h里写如下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250112202028899.png" alt="image-20250112202028899" style="zoom:80%;"><p>可以把一些固定的代码当作模板，后面需要用的时候直接双击即可，不用重复自己敲代码，提升效率。</p><h1 id="C51语言基础"><a href="#C51语言基础" class="headerlink" title="C51语言基础"></a>C51语言基础</h1><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110203426972.png" alt="image-20250110203426972" style="zoom:50%;"><h3 id="sfr-特殊功能寄存器"><a href="#sfr-特殊功能寄存器" class="headerlink" title="sfr(特殊功能寄存器)"></a>sfr(特殊功能寄存器)</h3><p>8051单片机的特殊功能寄存器分布在内部数据存储区的地址单元80H~FFH中。sfr数据类型占用一个内存单元（一个字节）。<strong>利用它可以访问单片机内部的所有特殊功能寄存器</strong>。eg”sfr P1&#x3D;0x90”定义了P1口在内部的寄存器中，在程序后续的语句中可以用”P1&#x3D;0xff”语句，使P1口的所有引脚输出为高电平，来操作特殊功能寄存器</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111124834310.png" alt="image-20250111124834310"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sfr P2 = <span class="number">0xA0</span>;</span><br><span class="line"><span class="comment">//将符号P2与地址0xA0关联起来,P2被定义为SFR,编译器会将其视为一个8位寄存器。然后当你在程序中写P2 = 0xfe;时，编译器会将这个操作翻译为：将值0xfe写入地址为0xA0的寄存器。</span></span><br></pre></td></tr></table></figure><p><strong>为什么<code>P2 = 0xfe;</code>能直接赋值</strong></p><ul><li>在C语言中，<code>P2</code>被定义为SFR，编译器会<strong>将其视为一个8位寄存器</strong>。</li><li>当你对<code>P2</code>赋值时，编译器会生成对应的机器指令，<strong>将值写入<code>0xA0</code>地址的寄存器</strong>。</li><li>硬件会根据写入的值，直接控制P2端口的状态。</li></ul><p><strong>赋值过程</strong></p><p>当你执行<code>P2 = 0xfe;</code>时，实际发生了以下过程：</p><ol><li>编译器处理：<ul><li>编译器知道<code>P2</code>对应地址<code>0xA0</code>，因此将<code>P2 = 0xfe;</code>翻译为：**将值<code>0xfe</code>写入地址<code>0xA0</code>**。</li></ul></li><li>硬件执行：<ul><li>单片机的硬件会将值<code>0xfe</code>（二进制<code>1111 1110</code>）写入P2端口的输出寄存器。</li><li>P2端口的每个引脚（P2.0到P2.7）会根据这个值设置电平状态：<ul><li><code>0</code>表示低电平。</li><li><code>1</code>表示高电平。</li></ul></li><li>因此，P2.0输出低电平，P2.1到P2.7输出高电平。</li></ul></li></ol><h3 id="sbit-特殊功能位"><a href="#sbit-特殊功能位" class="headerlink" title="sbit(特殊功能位)"></a>sbit(特殊功能位)</h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110203141038.png" alt="image-20250110203141038"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111124847597.png" alt="image-20250111124847597"></p><p>在8051系列单片机（如STC89C52）中：</p><ul><li><strong>SFR的地址</strong>是8位的，范围是<code>0x80</code>到<code>0xFF</code>。</li><li>每个SFR占用一个字节（8位），例如<code>P2</code>的地址是<code>0xA0</code>。</li><li><strong>位地址</strong>是对SFR的每一位单独寻址的地址。8051单片机支持位寻址，因此每个SFR的每一位都有一个独立的位地址</li><li><strong>SFR地址</strong>（如<code>0xA0</code>）是对整个8位寄存器的操作地址。</li><li><strong>位地址</strong>（如<code>0xA0</code>到<code>0xA7</code>）是对SFR中某一位的操作地址。</li></ul><p>eg:</p><p>字节操作（字节地址<code>0xA0</code>）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P2 = <span class="number">0xfe</span>;  <span class="comment">// 将P2端口的8位设置为1111 1110</span></span><br></pre></td></tr></table></figure><ul><li>操作的是字节地址<code>0xA0</code>，影响整个<code>P2</code>端口。</li></ul><p>位操作（位地址<code>0xA0</code>）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sbit P2_0 = P2^<span class="number">0</span>;  <span class="comment">// 定义P2.0的位地址</span></span><br><span class="line">P2_0 = <span class="number">0</span>;          <span class="comment">// 将P2.0设置为0</span></span><br></pre></td></tr></table></figure><ul><li>操作的是位地址<code>0xA0</code>，只影响<code>P2.0</code>这一位。</li><li>**字节地址<code>0xA0</code>**：用于操作整个<code>P2</code>端口的8位。</li><li>**位地址<code>0xA0</code>**：用于操作<code>P2</code>端口的第0位（P2.0）。</li><li>虽然它们的地址值相同，但它们的用途和操作对象完全不同。</li></ul><h3 id="位寻址"><a href="#位寻址" class="headerlink" title="位寻址"></a>位寻址</h3><p>可位寻址的寄存器可以对它的每一位单独赋值，不可位寻址的寄存器只能整体赋值</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115193711698.png" alt="image-20250115193711698"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115193733687.png" alt="image-20250115193733687"></p><h2 id="数据运算"><a href="#数据运算" class="headerlink" title="数据运算"></a>数据运算</h2><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110205733185.png" alt="image-20250110205733185" style="zoom:50%;"><p>123÷10&#x3D;12</p><p>123%10&#x3D;3     %取余可以用来判断一个数是否可被另一个数整除。</p><p>0011 1100&lt;&lt;1  -&gt;   0111 1000</p><p>0011 1100&gt;&gt;2  -&gt;   0000 1111</p><p>0001 1000&amp;0010 1010  -&gt;  0000 1000</p><p>0001 1000|0010 1010  -&gt;  0011 1010</p><p>0001 1000^0010 1010  -&gt;  0011 0010 相同取0 不同取1</p><p>~0001 1000 -&gt;  1110 0111</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIM0_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD&amp;=<span class="number">0xF0</span>;<span class="comment">//1111 0000 高4位为T1，保持不变，低4位为T0，清0</span></span><br><span class="line">    TMOD|=<span class="number">0x01</span>;<span class="comment">//0000 0001 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位</span></span><br><span class="line">    </span><br><span class="line">    TH0=<span class="number">0xFC</span>;<span class="comment">//给定时器赋初值，定时1ms</span></span><br><span class="line">    TL0=<span class="number">0x18</span>;</span><br><span class="line">    </span><br><span class="line">    ET0=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR0=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="移位"><a href="#移位" class="headerlink" title="移位"></a>移位</h3><p>在c语言中，尤其是单片机的<a href="https://so.csdn.net/so/search?q=C51&spm=1001.2101.3001.7020">C51</a>中，移位运算操作很常见。实现移位操作的方法有两种：一是利用<strong>移位运算符</strong>，二是利用<strong>移位函数</strong>。</p><p>区别：</p><p>1.移位运算符，是系统内置的运算操作，编译编译不用包含相关头文件；而移位函数编译要包含<strong>intrins.h</strong>头文件。</p><p>2.&lt;&lt;和&gt;&gt;的移位规则数据从一端移动到另外一端，数据尾部移走后会补0，数据头部移到最前端后会<strong>溢出</strong>，溢出的数据就<strong>被抹掉</strong>了。<br> _crol_等函数是是循环移位，<strong>首位相接</strong>，数据前端移动到尾部后，会从尾部再次进入队列，数据<strong>不会溢出</strong>。运算符是<strong>线性队列</strong>，循环移位函数是<strong>环形队列</strong>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> _crol_ (</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> c,        <span class="comment">/* 要被进行 位左移 的形式参数 */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> b);       <span class="comment">/* 要进行的 位移数 */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="基本语句"><a href="#基本语句" class="headerlink" title="基本语句"></a>基本语句</h2><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110213906743.png" alt="image-20250110213906743"></p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111110451884.png" alt="image-20250111110451884"></p><h2 id="子函数"><a href="#子函数" class="headerlink" title="子函数"></a>子函数</h2><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111110533229.png" alt="image-20250111110533229"></p><h2 id="预编译"><a href="#预编译" class="headerlink" title="预编译"></a>预编译</h2><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111181442588.png" alt="image-20250111181442588" style="zoom:67%;"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG52.H&gt;</span><span class="comment">//在安装目录搜索头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span><span class="comment">//在程序目录搜索头文件</span></span></span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="LED"><a href="#LED" class="headerlink" title="LED"></a>LED</h2><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110195012155.png" alt="image-20250110195012155" style="zoom:65%;"><p>8个led对应P2寄存器的八个I&#x2F;O口，置低电平则可使LED导通发光。</p><h3 id="2-1-点亮第一个LED"><a href="#2-1-点亮第一个LED" class="headerlink" title="2-1 点亮第一个LED"></a>2-1 点亮第一个LED</h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110201354031.png" alt="image-20250110201354031"></p><p>在REGX52.H中已经定义了P2寄存器，可以直接对其赋值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">P2=<span class="number">0xfe</span>; <span class="comment">//1111 1110 让P2.0为低电平 从而使LED1亮; 将值0xfe写入地址为0xA0的寄存器</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>P2各位在头文件已经被定义，故也可单独对P2的某一位进行赋值操作：</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110201939191.png" alt="image-20250110201939191"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">P2_0=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-LED闪烁"><a href="#2-2-LED闪烁" class="headerlink" title="2-2 LED闪烁"></a>2-2 LED闪烁</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;INTRINS.H&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay500ms</span><span class="params">()</span><span class="comment">//@12.000MHz  延时500ms，该函数由STC-ISP软件生成</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j, k;</span><br><span class="line"></span><br><span class="line">_nop_();<span class="comment">//空语句，定义在INTRINS.H中，使用该函数时需包含INTRINS.H</span></span><br><span class="line">i = <span class="number">4</span>;</span><br><span class="line">j = <span class="number">205</span>;</span><br><span class="line">k = <span class="number">187</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--k);</span><br><span class="line">&#125; <span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">P2=<span class="number">0xfe</span>; <span class="comment">//1111 1110 </span></span><br><span class="line">Delay500ms();</span><br><span class="line">P2=<span class="number">0xff</span>; <span class="comment">//1111 1110 </span></span><br><span class="line">Delay500ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>延时函数由STC-ISP软件生成</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110163702305.png" alt="image-20250110163702305"></p><h3 id="2-3-LED流水灯"><a href="#2-3-LED流水灯" class="headerlink" title="2-3 LED流水灯"></a>2-3 LED流水灯</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;INTRINS.H&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay500ms</span><span class="params">()</span><span class="comment">//@12.000MHz  延时500ms，该函数由STC-ISP软件生成</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j, k;</span><br><span class="line"></span><br><span class="line">_nop_();<span class="comment">//空语句，定义在INTRINS.H中，使用该函数时需包含INTRINS.H</span></span><br><span class="line">i = <span class="number">4</span>;</span><br><span class="line">j = <span class="number">205</span>;</span><br><span class="line">k = <span class="number">187</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--k);</span><br><span class="line">&#125; <span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">P2=<span class="number">0xfe</span>; <span class="comment">//1111 1110 </span></span><br><span class="line">Delay500ms();</span><br><span class="line">P2=<span class="number">0xfd</span>; <span class="comment">//1111 1101</span></span><br><span class="line">Delay500ms();</span><br><span class="line">P2=<span class="number">0xfb</span>; <span class="comment">//1111 1011 </span></span><br><span class="line">Delay500ms();</span><br><span class="line">P2=<span class="number">0xf7</span>; <span class="comment">//1111 0111 </span></span><br><span class="line">Delay500ms();</span><br><span class="line">P2=<span class="number">0xef</span>; <span class="comment">//1110 1111 </span></span><br><span class="line">Delay500ms();</span><br><span class="line">P2=<span class="number">0xdf</span>; <span class="comment">//1101 1111 </span></span><br><span class="line">Delay500ms();</span><br><span class="line">P2=<span class="number">0xbf</span>; <span class="comment">//1011 1111 </span></span><br><span class="line">Delay500ms();</span><br><span class="line">P2=<span class="number">0x7f</span>; <span class="comment">//0111 1111 </span></span><br><span class="line">Delay500ms();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="延迟函数"><a href="#延迟函数" class="headerlink" title="延迟函数"></a>延迟函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span><span class="comment">//@12.000MHz 参数ms为需要延迟几毫秒</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(ms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">ms--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="独立按键"><a href="#独立按键" class="headerlink" title="独立按键"></a>独立按键</h2><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110200504735.png" alt="image-20250110200504735" style="zoom:67%;"><p>单片机上电后默认为高电平，按下按键后，I&#x2F;O口接地，变为低电平。检测I&#x2F;O口高低电平状态即可知道按键是否被按下。</p><h3 id="3-1独立按键控制LED亮灭"><a href="#3-1独立按键控制LED亮灭" class="headerlink" title="3-1独立按键控制LED亮灭"></a>3-1独立按键控制LED亮灭</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实验现象：按下按键1，LED亮，松开后LED灭</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(P3_1==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">P2_0=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">P2_0=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2独立按键控制LED状态"><a href="#3-2独立按键控制LED状态" class="headerlink" title="3-2独立按键控制LED状态"></a>3-2独立按键控制LED状态</h3><h4 id="软件消抖"><a href="#软件消抖" class="headerlink" title="软件消抖"></a>软件消抖</h4><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250110215436695.png" alt="image-20250110215436695" style="zoom:67%;"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实验现象：每按一次LED状态变一次</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;INTRINS.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(ms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">ms--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(P3_1==<span class="number">0</span>)<span class="comment">//按键被按下</span></span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">20</span>);<span class="comment">//软件消抖 以免按键还没松开 但由于抖动 单片机误以为按键松开进行相应的操作</span></span><br><span class="line"><span class="keyword">while</span>(P3_1==<span class="number">0</span>);<span class="comment">//手松开前一直停在这里</span></span><br><span class="line">Delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">P2_0=~P2_0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2独立按键控制LED显示二进制"><a href="#3-2独立按键控制LED显示二进制" class="headerlink" title="3-2独立按键控制LED显示二进制"></a>3-2独立按键控制LED显示二进制</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;INTRINS.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(ms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">ms--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> LEDNum=<span class="number">0</span>;<span class="comment">//char刚好8位 与寄存器位数相同</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(P3_1==<span class="number">0</span>)<span class="comment">//按键被按下</span></span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">20</span>);<span class="comment">//软件消抖 以免按键还没松开 但由于抖动 单片机误以为按键松开进行相应的操作</span></span><br><span class="line"><span class="keyword">while</span>(P3_1==<span class="number">0</span>);<span class="comment">//手松开前一直停在这里</span></span><br><span class="line">Delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">LEDNum++;</span><br><span class="line">P2=~LEDNum;<span class="comment">//LED是低电平亮，取反</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3独立按键控制LED移位-有思维"><a href="#3-3独立按键控制LED移位-有思维" class="headerlink" title="3-3独立按键控制LED移位(有思维)"></a>3-3独立按键控制LED移位(有思维)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实验现象：按键1LED左移，按键2LED右移</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;INTRINS.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> LEDNum=<span class="number">0</span>;<span class="comment">//char刚好8位 与寄存器位数相同</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(ms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">ms--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">P2=~<span class="number">0x01</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(P3_0==<span class="number">0</span>)<span class="comment">//按键被按下</span></span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">20</span>);<span class="comment">//软件消抖 以免按键还没松开 但由于抖动 单片机误以为按键松开进行相应的操作</span></span><br><span class="line"><span class="keyword">while</span>(P3_0==<span class="number">0</span>);<span class="comment">//手松开前一直停在这里</span></span><br><span class="line">Delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">LEDNum++;</span><br><span class="line"><span class="keyword">if</span>(LEDNum&gt;=<span class="number">8</span>)</span><br><span class="line">LEDNum=<span class="number">0</span>;</span><br><span class="line">P2=~(<span class="number">0x01</span>&lt;&lt;LEDNum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(P3_1==<span class="number">0</span>)<span class="comment">//按键被按下</span></span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">20</span>);<span class="comment">//软件消抖 以免按键还没松开 但由于抖动 单片机误以为按键松开进行相应的操作</span></span><br><span class="line"><span class="keyword">while</span>(P3_1==<span class="number">0</span>);<span class="comment">//手松开前一直停在这里</span></span><br><span class="line">Delay_ms(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(LEDNum==<span class="number">0</span>)</span><br><span class="line">LEDNum=<span class="number">7</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">LEDNum--;</span><br><span class="line"></span><br><span class="line">P2=~(<span class="number">0x01</span>&lt;&lt;LEDNum);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数码管"><a href="#数码管" class="headerlink" title="数码管"></a>数码管</h2><p>数码管是由多个发光二极管封装在一起组成的“8”字型的器件。</p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111101223027.png" alt="image-20250111101223027" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111101711029.png" alt="image-20250111101711029" style="zoom:53%;"><p><strong>对于四位一体数码管，eg:共阴，让第三个数码管亮其余灭,则位选1101,第三个数码管显示数字1，让7，4端口高电平，即给整个数码管01100000，若位选时为0000，则四个数码管都显示1，共阴极这种设计是四个数码管的A,B,C….分别在同一条线上，可以节省单片机I&#x2F;O资源</strong></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111100427053.png" alt="image-20250111100427053"></p><p>该单片机数码管为公阴极。74HC245是一个信号缓冲器，由于单片机引脚的驱动能力较弱，通过该缓冲器后，输出的电流更大（利用它自己接的VCC输出）</p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111103017979.png" alt="image-20250111103017979" style="zoom:50%;"><p>LED1-8接到<strong>138译码器</strong>的输出端</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111103147929.png" alt="image-20250111103147929"></p><p>138译码器输入端为A,B,C(P22,P23,P24)，输出端为Y0-Y7(LED1-8)，由三个输入端控制8个输出端。 G1,G2A,G2B为使能端（此电路设计时已经接好，单片机上电就可以用该译码器）。</p><p>给CBA（C为高位）写二进制，转换成的十进制即要让输出端哪一位亮。eg:给CBA 101,101转换成十进制即5，即让Y5为0</p><p><strong>总结：驱动方式：用138译码器选中哪个数码管亮，再用245缓冲器给段码数据使数码管显示对应数字</strong></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111161002712.png" alt="image-20250111161002712"></p><h3 id="4-1静态数码管显示"><a href="#4-1静态数码管显示" class="headerlink" title="4-1静态数码管显示"></a>4-1静态数码管显示</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> NixieTable[]=&#123;<span class="number">0x3F</span>,<span class="number">0x06</span>,<span class="number">0x5B</span>,<span class="number">0x4F</span>,<span class="number">0x66</span>,<span class="number">0X6D</span>,<span class="number">0X7D</span>,<span class="number">0X07</span>,<span class="number">0x7F</span>,<span class="number">0X6F</span>&#125;;<span class="comment">//数码管段码表，对应数字0-9</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">NixieTube</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Location,Number)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//从右往左</span></span><br><span class="line"><span class="keyword">switch</span>(Location)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">P0=NixieTable[Number];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">NixieTube(<span class="number">7</span>,<span class="number">3</span>);<span class="comment">//从右往左数第七个数码管显示数字3</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2动态数码管显示"><a href="#4-2动态数码管显示" class="headerlink" title="4-2动态数码管显示"></a>4-2动态数码管显示</h3><p>利用人眼视觉暂留和数码管显示的余晖（先让第一个数码管显示1，第二关显示2，第三个显示3，不断地扫描，由于视觉暂留可以看到123）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;INTRINS.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> NixieTable[]=&#123;<span class="number">0x3F</span>,<span class="number">0x06</span>,<span class="number">0x5B</span>,<span class="number">0x4F</span>,<span class="number">0x66</span>,<span class="number">0X6D</span>,<span class="number">0X7D</span>,<span class="number">0X07</span>,<span class="number">0x7F</span>,<span class="number">0X6F</span>&#125;;<span class="comment">//数码管段码表，对应数字0-9</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(ms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">ms--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">NixieTube</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Location,Number)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//从右往左</span></span><br><span class="line"><span class="keyword">switch</span>(Location)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:P2_4=<span class="number">0</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">0</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:P2_4=<span class="number">1</span>;P2_3=<span class="number">1</span>;P2_2=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">P0=NixieTable[Number];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">NixieTube(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">Delay_ms(<span class="number">1</span>);</span><br><span class="line">NixieTube(<span class="number">2</span>,<span class="number">5</span>);</span><br><span class="line">Delay_ms(<span class="number">1</span>);</span><br><span class="line">NixieTube(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line">Delay_ms(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111165931402.png" alt="image-20250111165931402"></p><h2 id="LCD1602显示屏"><a href="#LCD1602显示屏" class="headerlink" title="LCD1602显示屏"></a>LCD1602显示屏</h2><p>普中、51单片机LCD引脚与数码管和D3,D4,D5冲突，与其它引脚不冲突</p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111202800133.png" alt="image-20250111202800133" style="zoom:80%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111203012292.png" alt="image-20250111203012292" style="zoom:50%;"> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowChar</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Line,<span class="type">unsigned</span> <span class="type">char</span> Column,<span class="type">char</span> Char)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowString</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Line,<span class="type">unsigned</span> <span class="type">char</span> Column,<span class="type">char</span> *String)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowNum</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Line,<span class="type">unsigned</span> <span class="type">char</span> Column,<span class="type">unsigned</span> <span class="type">int</span> Number,<span class="type">unsigned</span> <span class="type">char</span> Length)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowSignedNum</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Line,<span class="type">unsigned</span> <span class="type">char</span> Column,<span class="type">int</span> Number,<span class="type">unsigned</span> <span class="type">char</span> Length)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowHexNum</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Line,<span class="type">unsigned</span> <span class="type">char</span> Column,<span class="type">unsigned</span> <span class="type">int</span> Number,<span class="type">unsigned</span> <span class="type">char</span> Length)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_ShowBinNum</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Line,<span class="type">unsigned</span> <span class="type">char</span> Column,<span class="type">unsigned</span> <span class="type">int</span> Number,<span class="type">unsigned</span> <span class="type">char</span> Length)</span>;</span><br><span class="line"></span><br><span class="line">LCD_Init();</span><br><span class="line">LCD_ShowChar(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">1</span>,<span class="number">3</span>,<span class="string">&quot;Hello word&quot;</span>);</span><br><span class="line">LCD_ShowNum(<span class="number">1</span>,<span class="number">9</span>,<span class="number">123</span>,<span class="number">3</span>);</span><br><span class="line">LCD_ShowSignedNum(<span class="number">1</span>,<span class="number">13</span>,<span class="number">-66</span>,<span class="number">2</span>);</span><br><span class="line">LCD_ShowHexNum(<span class="number">2</span>,<span class="number">1</span>,<span class="number">0xA8</span>,<span class="number">2</span>);</span><br><span class="line">LCD_ShowBinNum(<span class="number">2</span>,<span class="number">4</span>,<span class="number">0xAA</span>,<span class="number">8</span>);</span><br></pre></td></tr></table></figure><h3 id="5-1-LCD"><a href="#5-1-LCD" class="headerlink" title="5-1 LCD"></a>5-1 LCD</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LCD1602.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> result=<span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_Init();</span><br><span class="line"></span><br><span class="line">LCD_ShowBinNum(<span class="number">2</span>,<span class="number">4</span>,<span class="number">0xAA</span>,<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">result++;</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">LCD_ShowNum(<span class="number">1</span>,<span class="number">1</span>,result,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="矩阵键盘"><a href="#矩阵键盘" class="headerlink" title="矩阵键盘"></a>矩阵键盘</h2><p>按键以矩阵的形式连接在I&#x2F;O上。</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111222000568.png" alt="image-20250111222000568"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250111225558421.png" alt="image-20250111225558421" style="zoom:67%;"><h3 id="检测方法"><a href="#检测方法" class="headerlink" title="检测方法"></a><strong>检测方法</strong></h3><p>1.行列式扫描法（将矩阵按键拆分为独立按键） 2.线翻转法</p><p>行列式扫描法一行一行扫描，检测的次数不定，线翻转法只用检测两次，一次定行一次定列。</p><p><strong>行列式扫描法</strong>（编程最简单最无脑，但相比线翻转法效率低）</p><p>原理：P17,P16,P15,P14为矩阵的4行，P13,P12,P11,P10为矩阵的4列，给行赋1011，则是单独看第二行，此时它们一端接地，只用检测P13,P12,P11,P10的电平状态即可知道该行有没有被按下的……以此类推，可以逐行&#x2F;列扫描，由于此开发板引脚冲突，蜂鸣器会一直响，所以在此用逐列扫描。</p><p>普通按键是直接给它一端接地，矩阵键盘两端连的是两个I&#x2F;O，行列式扫描法是通过令一个I&#x2F;O为低电平达到和普通键盘一样的效果。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">MatrixKey</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> KeyNumber=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">P1=<span class="number">0xFF</span>;</span><br><span class="line">P1_3=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(P1_7==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_7==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_6==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_6==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">5</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_5==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_5==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">9</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_4==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_4==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">13</span>;&#125;</span><br><span class="line"></span><br><span class="line">P1=<span class="number">0xFF</span>;</span><br><span class="line">P1_2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(P1_7==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_7==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">2</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_6==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_6==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">6</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_5==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_5==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">10</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_4==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_4==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">14</span>;&#125;</span><br><span class="line"></span><br><span class="line">P1=<span class="number">0xFF</span>;</span><br><span class="line">P1_1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(P1_7==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_7==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">3</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_6==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_6==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">7</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_5==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_5==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">11</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_4==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_4==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">15</span>;&#125;</span><br><span class="line"></span><br><span class="line">P1=<span class="number">0xFF</span>;</span><br><span class="line">P1_0=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(P1_7==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_7==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">4</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_6==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_6==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">8</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_5==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_5==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">12</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(P1_4==<span class="number">0</span>)&#123;Delay_ms(<span class="number">20</span>);<span class="keyword">while</span>(P1_4==<span class="number">0</span>);Delay_ms(<span class="number">20</span>);KeyNumber=<span class="number">16</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> KeyNumber;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>线翻转法</p><p>先让四行为0，检测哪一列被按下（该列上任何一个按键被按下都会导致该列代表的I&#x2F;O为低电平）</p><p>再让四列为0，检测哪一行被按下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">MatrixKey_flip_scan</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> KeyNumber=<span class="number">0</span>;</span><br><span class="line">P1=<span class="number">0x0f</span>;<span class="comment">//00001111 先让四行为0         </span></span><br><span class="line"><span class="keyword">if</span>(P1!=<span class="number">0x0f</span>)<span class="comment">//读取按键是否按下,若不为0x0f说明检测到某列上有按键被按下</span></span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">if</span>(P1!=<span class="number">0x0f</span>)<span class="comment">//再次检测键盘是否按下</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//测试列</span></span><br><span class="line">P1=<span class="number">0x0f</span>;</span><br><span class="line"><span class="keyword">switch</span>(P1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span>(<span class="number">0X07</span>):KeyNumber=<span class="number">1</span>;<span class="keyword">break</span>;<span class="comment">//0x07 0000 0111</span></span><br><span class="line"><span class="keyword">case</span>(<span class="number">0X0b</span>):KeyNumber=<span class="number">2</span>;<span class="keyword">break</span>;<span class="comment">//0x0b 0000 1011</span></span><br><span class="line"><span class="keyword">case</span>(<span class="number">0X0d</span>): KeyNumber=<span class="number">3</span>;<span class="keyword">break</span>;<span class="comment">//0x0d 0000 1101</span></span><br><span class="line"><span class="keyword">case</span>(<span class="number">0X0e</span>):KeyNumber=<span class="number">4</span>;<span class="keyword">break</span>;<span class="comment">//0x0e 0000 1110</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试行</span></span><br><span class="line">P1=<span class="number">0Xf0</span>;</span><br><span class="line"><span class="keyword">switch</span>(P1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span>(<span class="number">0X70</span>):KeyNumber=KeyNumber;<span class="keyword">break</span>;<span class="comment">//0x70 0111 0000 </span></span><br><span class="line"><span class="keyword">case</span>(<span class="number">0Xb0</span>):KeyNumber=KeyNumber+<span class="number">4</span>;<span class="keyword">break</span>;<span class="comment">//0xb0 1011 0000</span></span><br><span class="line"><span class="keyword">case</span>(<span class="number">0Xd0</span>): KeyNumber=KeyNumber+<span class="number">8</span>;<span class="keyword">break</span>;<span class="comment">//0xd0 1101 0000</span></span><br><span class="line"><span class="keyword">case</span>(<span class="number">0Xe0</span>):KeyNumber=KeyNumber+<span class="number">12</span>;<span class="keyword">break</span>;<span class="comment">//0xe0 1110 0000</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(P1!=<span class="number">0xf0</span>);<span class="comment">//有按键按下</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">KeyNumber=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> KeyNumber;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-1-矩阵键盘读取并显示在LCD"><a href="#6-1-矩阵键盘读取并显示在LCD" class="headerlink" title="6-1 矩阵键盘读取并显示在LCD"></a>6-1 矩阵键盘读取并显示在LCD</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LCD1602.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MatrixKey.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> KeyNum=<span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_Init();</span><br><span class="line">LCD_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;zzxnb666&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//KeyNum=MatrixKey();</span></span><br><span class="line">KeyNum=MatrixKey_flip_scan();</span><br><span class="line"><span class="keyword">if</span>(KeyNum)</span><br><span class="line">&#123;</span><br><span class="line">LCD_ShowNum(<span class="number">2</span>,<span class="number">1</span>,KeyNum,<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-矩阵键盘密码锁"><a href="#6-2-矩阵键盘密码锁" class="headerlink" title="6-2 矩阵键盘密码锁"></a>6-2 矩阵键盘密码锁</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LCD1602.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MatrixKey.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> KeyNum,Count=<span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> PassWord=<span class="number">0</span>;<span class="comment">//int最大为65535 五位数 若给它赋值六位数及以上就会出错</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_Init();</span><br><span class="line">LCD_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Password:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//KeyNum=MatrixKey();</span></span><br><span class="line">KeyNum=MatrixKey_flip_scan();<span class="comment">//获取键值</span></span><br><span class="line"><span class="keyword">if</span>(KeyNum)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(KeyNum&lt;=<span class="number">10</span>)<span class="comment">//如果S1-S10按键按下，输入密码</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Count&lt;<span class="number">4</span>)<span class="comment">//最多输入4位数</span></span><br><span class="line">&#123;</span><br><span class="line">PassWord*=<span class="number">10</span>;<span class="comment">//密码左移一位</span></span><br><span class="line">PassWord+=KeyNum%<span class="number">10</span>;<span class="comment">//1-9对10取余为1-9,10对10取余为0</span></span><br><span class="line">&#125;</span><br><span class="line">Count++;</span><br><span class="line">LCD_ShowNum(<span class="number">2</span>,<span class="number">1</span>,PassWord,<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KeyNum==<span class="number">11</span>)<span class="comment">//若S11按下，确认</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(PassWord==<span class="number">2345</span>)<span class="comment">//正确密码</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_ShowString(<span class="number">1</span>,<span class="number">14</span>,<span class="string">&quot;OK &quot;</span>);</span><br><span class="line">PassWord=<span class="number">0</span>;<span class="comment">//密码清0</span></span><br><span class="line">Count=<span class="number">0</span>;<span class="comment">//计次清0，可再次输入</span></span><br><span class="line">LCD_ShowNum(<span class="number">2</span>,<span class="number">1</span>,PassWord,<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">LCD_ShowString(<span class="number">1</span>,<span class="number">14</span>,<span class="string">&quot;ERR&quot;</span>);</span><br><span class="line">PassWord=<span class="number">0</span>;</span><br><span class="line">Count=<span class="number">0</span>;</span><br><span class="line">LCD_ShowNum(<span class="number">2</span>,<span class="number">1</span>,PassWord,<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KeyNum==<span class="number">12</span>)<span class="comment">//取消</span></span><br><span class="line">&#123;</span><br><span class="line">PassWord=<span class="number">0</span>;</span><br><span class="line">Count=<span class="number">0</span>;</span><br><span class="line">LCD_ShowNum(<span class="number">2</span>,<span class="number">1</span>,PassWord,<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="中断系统-重要"><a href="#中断系统-重要" class="headerlink" title="中断系统(重要)"></a>中断系统(重要)</h2><h3 id="中断概念"><a href="#中断概念" class="headerlink" title="中断概念"></a>中断概念</h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114214017637.png" alt="image-20250114214017637"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113121039615.png" alt="image-20250113121039615" style="zoom:60%;"><p>中断源：引起中断的源头</p><p>中断优先级：中断允许多个中断源（外部中断，串口中断，定时器中断……）存在，当多个中断源同时出现时，谁的中断优先级高就先相应谁，先执行高的再执行低的，然后再返回主程序。若两个中断优先级相同，通过查询次序来决定谁先（有一个固定的顺序）。</p><p>中断嵌套：当执行一个中断时，若此时出现了一个比它优先级更高的中断，则要转向执行高优先级的，然后再返回优先级低的那个继续执行，然后再返回主程序。对于51来说比较少，对于STM32,DSP等中断更复杂，则更容易出现中断嵌套。</p><p>中断的开启关闭，使用哪一个中断等等 都是有特殊功能寄存器来设置的</p><h3 id="中断结构"><a href="#中断结构" class="headerlink" title="中断结构"></a>中断结构</h3><p>8个中断请求源：<strong>INT0,INT1</strong>,INT2,INT3,<strong>TIM0,TIM1</strong>,TIM2,<strong>UART</strong>   加粗部分对于所有51内核的单片机都有</p><p>所有中断都有4个中断优先级</p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113135129899.png" alt="image-20250113135129899" style="zoom:67%;"><p>INT0的IT0决定的是下降沿触发还是低电平触发，IE0是中断标志位（当中断源到来时由单片机自动置1），EA为全局总中断，IP是用来设置中断优先级</p><p>TCON（中断请求标志）,IE（中断允许控制）,IP都是寄存器   </p><h3 id="中断寄存器"><a href="#中断寄存器" class="headerlink" title="中断寄存器"></a>中断寄存器</h3><p><strong>TCON（中断请求标志）</strong></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113171843543.png" alt="image-20250113171843543"></p><p><strong>IE（中断允许控制）</strong></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113171807611.png" alt="image-20250113171807611"></p><p><strong>中断响应条件</strong></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113172317209.png" alt="image-20250113172317209"></p><h3 id="中断优先级"><a href="#中断优先级" class="headerlink" title="中断优先级"></a><strong>中断优先级</strong></h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113171949116.png" alt="image-20250113171949116"></p><h3 id="中断号"><a href="#中断号" class="headerlink" title="中断号"></a><strong>中断号</strong></h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113172031193.png" alt="image-20250113172031193"></p><h3 id="外部中断"><a href="#外部中断" class="headerlink" title="外部中断"></a>外部中断</h3><p>51内核的单片机都有INT0,INT1；STC89C5X提供了4个外部中断，INT0,INT1,INT2,INT3</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113174721897.png" alt="image-20250113174721897"></p><p>INT0的IT0决定的是下降沿触发还是低电平触发，IE0是中断标志位（当中断源到来时由单片机自动置1），EA为全局总中断，IP是用来设置中断优先级</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">EA=<span class="number">1</span>;<span class="comment">//打开总中断开关</span></span><br><span class="line">EX0=<span class="number">1</span>;<span class="comment">//开外部中断0</span></span><br><span class="line">IT0=<span class="number">0</span>/<span class="number">1</span>;<span class="comment">//设置外部中断触发方式</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">int0</span><span class="params">()</span> interrupt 0<span class="comment">//0为中断号 interrupt为中断关键字 int0为中断函数名，可自己定义</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//编写用户所需的功能代码,尽量不要写一些特别复杂，占用大量时间的代码，保证中断快进快出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于STC89C52单片机，INT0,INT1对应P3.2,P3.3      这里我们使用按键模拟外部中断触发                </p><p>​                              <img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113180023559.png" alt="image-20250113180023559"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113180037658.png" alt="image-20250113180037658"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113195037070.png" alt="image-20250113195037070" style="zoom:50%;"></p><h4 id="外部中断实验"><a href="#外部中断实验" class="headerlink" title="外部中断实验"></a>外部中断实验</h4><p>通过独立按键K3,K4控制LED1,LED2亮灭。 </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY3 P3_2 <span class="comment">//与INT0相连</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY4 P3_3 <span class="comment">//与INT1相连</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1 P2_0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2 P2_1 </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">exti0_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">EA=<span class="number">1</span>;</span><br><span class="line">EX0=<span class="number">1</span>;</span><br><span class="line">IT0=<span class="number">1</span>;<span class="comment">//下降沿触发</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">exti1_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">EA=<span class="number">1</span>;</span><br><span class="line">EX1=<span class="number">1</span>;</span><br><span class="line">IT1=<span class="number">1</span>;<span class="comment">//下降沿触发</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">exti0_init();</span><br><span class="line">exti1_init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">exti0</span><span class="params">()</span> interrupt 0</span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">20</span>);<span class="comment">//先消抖</span></span><br><span class="line"><span class="keyword">if</span>(KEY3==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED1=!LED1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">exti1</span><span class="params">()</span> interrupt 2</span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">20</span>);<span class="comment">//先消抖</span></span><br><span class="line"><span class="keyword">if</span>(KEY4==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED2=!LED2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对其模块化封装：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Header: exti.c</span></span><br><span class="line"><span class="comment">// File Name: STC89C51外部中断模块 </span></span><br><span class="line"><span class="comment">// Author: 张志雄</span></span><br><span class="line"><span class="comment">// Date: 2025/1/14</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;exti.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  exti0初始化 下降沿触发</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">exti0_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">EA=<span class="number">1</span>;</span><br><span class="line">EX0=<span class="number">1</span>;</span><br><span class="line">IT0=<span class="number">1</span>;<span class="comment">//下降沿触发</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  exti1初始化 下降沿触发</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">exti1_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">EA=<span class="number">1</span>;</span><br><span class="line">EX1=<span class="number">1</span>;</span><br><span class="line">IT1=<span class="number">1</span>;<span class="comment">//下降沿触发</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  exti0中断服务函数</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">exti0</span><span class="params">()</span> interrupt 0</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//用户代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  exti1中断服务函数</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">exti1</span><span class="params">()</span> interrupt 2</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//用户代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __EXTI_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __EXTI_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">exti0_init</span><span class="params">()</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">exti1_init</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="定时器（重要）"><a href="#定时器（重要）" class="headerlink" title="定时器（重要）"></a>定时器（重要）</h2><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114214141840.png" alt="image-20250114214141840"></p><p>定时器作用： </p><p>1.可用于计时系统，实现软件计时，或者使程序每隔一固定时间完成一项操作</p><p>2.替代长时间delay,提高CPU的运行效率和处理速度</p><p>51内核的定时器都有T0,T1,对于STCC9852单片机，还有T3</p><p>51单片机有两组定时计数器，既可以定时又可以计数；</p><p>定时器计数器与单片机CPU相互独立，工作过程自动完成，不需要CPU参与；</p><p>定时计数器是根据机器内部的时钟（使用定时功能）或外部的脉冲信号（使用计数功能）来对寄存器进行加1； </p><h3 id="CPU时序周期相关知识"><a href="#CPU时序周期相关知识" class="headerlink" title="CPU时序周期相关知识"></a>CPU时序周期相关知识</h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113223443880.png" alt="image-20250113223443880"></p><p>时钟周期（振荡周期）：单片机控制信号的基本时间单位。若时钟晶体震荡频率为fosc,则时钟周期Tosc&#x3D;1&#x2F;fosc.</p><p>机器周期：CPU完成一个基本操作所需要的时间为机器周期。单片机通常把执行一条指令的过程分为几个机器周期，AT89S51单片机每12个时钟周期为一个机器周期。Tcy&#x3D;12Tosc&#x3D;12&#x2F;fosc。eg:fosc&#x3D;12MHZ,Tcy&#x3D;12&#x2F;12&#x3D;1us.</p><p>指令周期：执行一条指令所需要的时间。</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113224916285.png" alt="image-20250113224916285"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250113224941611.png" alt="image-20250113224941611"></p><h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><p>详细的每一位介绍可以看参考手册。</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115192122419.png" alt="image-20250115192122419"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114093636787.png" alt="image-20250114093636787" style="zoom:50%;"><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115193933757.png" alt="image-20250115193933757"></p><p>不可位寻址 只能对寄存器整体赋值</p><p>一般用方式1，方式2（串口波特率生成）。<strong>TMOD高四位控制T1，低四位控制T0</strong></p><p>GATE:门控位 1:（只需TR0&#x2F;TR1为1来决定定时计数器工作）0:（除了TR0&#x2F;TR1还需INT0&#x2F;INT1为1来决定定时计数器工作）</p><p>C&#x2F;T: 1（计数模式）0（定时模式）</p><p>M1，M0：工作方式</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114094733511.png" alt="image-20250114094733511"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115193910592.png" alt="image-20250115193910592"></p><p>可位寻址 可对寄存器中的每一位单独赋值</p><p>TF1：T1溢出标志位，溢出时自动置1，向CPU发出中断请求</p><p>TR1: T1定时计数器运行控制位 1:开始工作 0:停止工作</p><h3 id="工作方式（原理）"><a href="#工作方式（原理）" class="headerlink" title="工作方式（原理）"></a>工作方式（原理）</h3><p><strong>方式0：</strong></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114095146635.png" alt="image-20250114095146635" style="zoom:50%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114211051491.png" alt="image-20250114211051491" style="zoom:67%;"><p>C&#x2F;T 若为1 计数器模式 将开关打到1 ，若为0 定时器模式 将开关打到0</p><p><strong>方式1（常用）：</strong> </p><p>不会自动装载初值 每次溢出进入中断后需要我们手动装载</p><p><strong>每来一个脉冲，16位(最大为65535)的计数器（TH,TL）里面的值就会自动加1，当计数达到最大值65535后，再+1就会溢出，TF0置1，向中断系统申请中断</strong></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114101303771.png" alt="image-20250114101303771" style="zoom:50%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114215237257.png" alt="image-20250114215237257" style="zoom:80%;"><p><strong>方式2：</strong></p><p><strong>自动重装载（初值），用于串口波特率</strong></p><p><strong>将TL1,TH1赋为相同的初值，当TL1溢出后自动将TH1的值赋值给TL1</strong></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117162729154.png" alt="image-20250117162729154"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114101345916.png" alt="image-20250114101345916" style="zoom:50%;"><p>  方式3：</p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114101647745.png" alt="image-20250114101647745" style="zoom:50%;"><h3 id="定时器配置-重要"><a href="#定时器配置-重要" class="headerlink" title="定时器配置(重要)"></a>定时器配置(重要)</h3><p>其实就是根据工作方式的图把相应的寄存器配一下</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114101849411.png" alt="image-20250114101849411"></p><p><strong>外部晶振12MHZ,则机器周期&#x3D;1us，若想让定时器定时1ms</strong></p><p><strong>1ms&#x2F;1us&#x3D;1000次  初值&#x3D;65536-1000&#x3D;64536 将其转换为16进制为0xFC18，高八位写入TH，低八位写入TL</strong></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114113551152.png" alt="image-20250114113551152" style="zoom:80%;"><p> <strong>当要计时的时间比较大，次数超过65536的话，如500ms,我们可以设置定时器1ms，然后在定时器中断里设置一个变量cnt，每次进入中断时加一，当cnt&#x3D;500时即为500ms.</strong></p><p><strong>也可以这样算：</strong></p><p><strong>2^16&#x3D;65536 2^8&#x3D;256</strong> </p><p><strong>高八位&#x3D;65535&#x2F;(2^8),低八位&#x3D;65535%(2^8))         类比十进制:1880 取高2位和低2位，高二位&#x3D;1880&#x2F;(10^2)&#x3D;18,低二位&#x3D;1880%(10^2)&#x3D;80)</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TH=<span class="number">65536</span>/<span class="number">256</span>;</span><br><span class="line">TL=<span class="number">65536</span>%<span class="number">256</span>;</span><br></pre></td></tr></table></figure><p>此外，在掌握了计算方法后，也可以使用定时器计算工具提高效率：</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114114324053.png" alt="image-20250114114324053"></p><p>STC-ISP</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115205758206.png" alt="image-20250115205758206"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIM0_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD&amp;=<span class="number">0xF0</span>;<span class="comment">//1111 0000 高4位为T1，保持不变，低4位为T0，清0</span></span><br><span class="line">    TMOD|=<span class="number">0x01</span>;<span class="comment">//0000 0001 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位 </span></span><br><span class="line">    </span><br><span class="line">    TH0=<span class="number">0xFC</span>;<span class="comment">//给定时器赋初值，定时1ms</span></span><br><span class="line">    TL0=<span class="number">0x18</span>;</span><br><span class="line">    </span><br><span class="line">    ET0=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR0=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114215302207.png" alt="image-20250114215302207" style="zoom:80%;"><p>可位寻址的寄存器可以对它的每一位单独赋值，不可位寻址的寄存器只能整体赋值</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115193711698.png" alt="image-20250115193711698"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115193733687.png" alt="image-20250115193733687"></p><h3 id="定时器实验"><a href="#定时器实验" class="headerlink" title="定时器实验"></a>定时器实验</h3><p>1.通过定时器0中断控制D1指示灯间隔1s闪烁，定时器1中断控制D2指示灯间隔0.5s闪烁。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1 P2_0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2 P2_1</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> u8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> u16;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM0_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD&amp;=<span class="number">0xF0</span>;<span class="comment">//1111 0000 高4位为T1，保持不变，低4位为T0，清0</span></span><br><span class="line">    TMOD|=<span class="number">0x01</span>;<span class="comment">//0000 0001 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位</span></span><br><span class="line">    </span><br><span class="line">    TH0=<span class="number">0xFC</span>;<span class="comment">//给定时器赋初值，定时1ms</span></span><br><span class="line">    TL0=<span class="number">0x18</span>;</span><br><span class="line">    </span><br><span class="line">    ET0=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR0=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD&amp;=<span class="number">0x0F</span>;<span class="comment">//0000 1111 高4位为T1，清0，低4位为T0，保持不变</span></span><br><span class="line">    TMOD|=<span class="number">0x10</span>;<span class="comment">//0001 0000 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位</span></span><br><span class="line">    </span><br><span class="line">    TH1=<span class="number">0xFC</span>;<span class="comment">//给定时器赋初值，定时1ms</span></span><br><span class="line">    TL1=<span class="number">0x18</span>;</span><br><span class="line">    </span><br><span class="line">    ET1=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR1=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    TIM0_Init();</span><br><span class="line">TIM1_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM0</span><span class="params">()</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> u16 cnt=<span class="number">0</span>;<span class="comment">//若不定义为static 下次重新调用后cnt又被初始化变成0了</span></span><br><span class="line"></span><br><span class="line">TH0=<span class="number">0xFC</span>;<span class="comment">//TIM0不会自动重装载 当溢出进入中断后需要我们手动装载 </span></span><br><span class="line">    TL0=<span class="number">0x18</span>;</span><br><span class="line"></span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">1000</span>)<span class="comment">//1s</span></span><br><span class="line">&#123;</span><br><span class="line">LED1=!LED1;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1</span><span class="params">()</span> interrupt 3</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> u16 cnt=<span class="number">0</span>;<span class="comment">//若不定义为static 下次重新调用后cnt又被初始化变成0了</span></span><br><span class="line"></span><br><span class="line">TH1=<span class="number">0xFC</span>;<span class="comment">//TIM0不会自动重装载 当溢出进入中断后需要我们手动装载 </span></span><br><span class="line">    TL1=<span class="number">0x18</span>;</span><br><span class="line"></span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">500</span>)<span class="comment">//0.5s</span></span><br><span class="line">&#123;</span><br><span class="line">LED2=!LED2;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对定时器文件进行模块化封装：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Header: tim.c</span></span><br><span class="line"><span class="comment">// File Name: STC89C51单片机定时器模块</span></span><br><span class="line"><span class="comment">// Author: 张志雄</span></span><br><span class="line"><span class="comment">// Date: 2025/1/14</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tim.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1 P2_0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2 P2_1</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM0初始化 工作方式1</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM0_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD&amp;=<span class="number">0xF0</span>;<span class="comment">//1111 0000 高4位为T1，保持不变，低4位为T0，清0</span></span><br><span class="line">    TMOD|=<span class="number">0x01</span>;<span class="comment">//0000 0001 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位</span></span><br><span class="line">    </span><br><span class="line">    TH0=<span class="number">0xFC</span>;<span class="comment">//给定时器赋初值，定时1ms</span></span><br><span class="line">    TL0=<span class="number">0x18</span>;</span><br><span class="line">    </span><br><span class="line">    ET0=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR0=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM1初始化 工作方式1</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD&amp;=<span class="number">0x0F</span>;<span class="comment">//0000 1111 高4位为T1，清0，低4位为T0，保持不变</span></span><br><span class="line">    TMOD|=<span class="number">0x10</span>;<span class="comment">//0001 0000 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位</span></span><br><span class="line">    </span><br><span class="line">    TH1=<span class="number">0xFC</span>;<span class="comment">//给定时器赋初值，定时1ms</span></span><br><span class="line">    TL1=<span class="number">0x18</span>;</span><br><span class="line">    </span><br><span class="line">    ET1=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR1=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM0中断服务函数</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM0</span><span class="params">()</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//用户代码</span></span><br><span class="line"><span class="comment">//若为工作方式1 每次进入中断需要重装载初值</span></span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">int</span> cnt=<span class="number">0</span>;<span class="comment">//若不定义为static 下次重新调用后cnt又被初始化变成0了</span></span><br><span class="line"></span><br><span class="line">TH0=<span class="number">0xFC</span>;<span class="comment">//TIM0不会自动重装载 当溢出进入中断后需要我们手动装载 </span></span><br><span class="line">    TL0=<span class="number">0x18</span>;</span><br><span class="line"></span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">1000</span>)<span class="comment">//1s</span></span><br><span class="line">&#123;</span><br><span class="line">LED1=!LED1;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM1中断服务函数</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1</span><span class="params">()</span> interrupt 3</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//用户代码</span></span><br><span class="line"><span class="comment">//若为工作方式1 每次进入中断需要重装载初值</span></span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">int</span> cnt=<span class="number">0</span>;<span class="comment">//若不定义为static 下次重新调用后cnt又被初始化变成0了</span></span><br><span class="line"></span><br><span class="line">TH1=<span class="number">0xFC</span>;<span class="comment">//方式1不会自动重装载 当溢出进入中断后需要我们手动装载 </span></span><br><span class="line">    TL1=<span class="number">0x18</span>;</span><br><span class="line"></span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">500</span>)<span class="comment">//0.5s</span></span><br><span class="line">&#123;</span><br><span class="line">LED2=!LED2;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tim.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM0_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>2.定时器时钟</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tim.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LCD1602.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">char</span> Sec;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">char</span> Min;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">char</span> Hour;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    TIM0_Init();</span><br><span class="line">LCD_Init();</span><br><span class="line"></span><br><span class="line">LCD_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Clock:&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;  :  :&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="comment">//LCD会占用相对较长时间 不适合放在中断函数中</span></span><br><span class="line">LCD_ShowNum(<span class="number">2</span>,<span class="number">1</span>,Hour,<span class="number">2</span>);</span><br><span class="line">LCD_ShowNum(<span class="number">2</span>,<span class="number">4</span>,Min,<span class="number">2</span>);</span><br><span class="line">LCD_ShowNum(<span class="number">2</span>,<span class="number">7</span>,Sec,<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tim.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tim.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;INTRINS.H&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1 P2_0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2 P2_1</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Sec=<span class="number">55</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Min=<span class="number">59</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Hour=<span class="number">23</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM0初始化 工作方式1</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM0_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD&amp;=<span class="number">0xF0</span>;<span class="comment">//1111 0000 高4位为T1，保持不变，低4位为T0，清0</span></span><br><span class="line">    TMOD|=<span class="number">0x01</span>;<span class="comment">//0000 0001 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//给定时器赋初值，定时1ms</span></span><br><span class="line">    TH0=<span class="number">0xFC</span>;<span class="comment">//65536/256</span></span><br><span class="line">    TL0=<span class="number">0x18</span>;<span class="comment">//65536%256</span></span><br><span class="line">    </span><br><span class="line">    ET0=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR0=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM1初始化 工作方式1</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD&amp;=<span class="number">0x0F</span>;<span class="comment">//0000 1111 高4位为T1，清0，低4位为T0，保持不变</span></span><br><span class="line">    TMOD|=<span class="number">0x10</span>;<span class="comment">//0001 0000 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位</span></span><br><span class="line">    </span><br><span class="line">    TH1=<span class="number">0xFC</span>;<span class="comment">//给定时器赋初值，定时1ms</span></span><br><span class="line">    TL1=<span class="number">0x18</span>;</span><br><span class="line">    </span><br><span class="line">    ET1=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR1=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM0中断服务函数</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM0</span><span class="params">()</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//用户代码</span></span><br><span class="line"><span class="comment">//若为工作方式1 每次进入中断需要重装载初值</span></span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">int</span> cnt=<span class="number">0</span>;<span class="comment">//若不定义为static 下次重新调用后cnt又被初始化变成0了</span></span><br><span class="line"></span><br><span class="line">TH0=<span class="number">0xFC</span>;<span class="comment">//TIM0不会自动重装载 当溢出进入中断后需要我们手动装载 </span></span><br><span class="line">    TL0=<span class="number">0x18</span>;</span><br><span class="line"></span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">1000</span>)<span class="comment">//500ms</span></span><br><span class="line">&#123;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">Sec++;</span><br><span class="line"><span class="keyword">if</span>(Sec&gt;=<span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">Sec=<span class="number">0</span>;</span><br><span class="line">Min++;</span><br><span class="line"><span class="keyword">if</span>(Min&gt;=<span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">Min=<span class="number">0</span>;</span><br><span class="line">Hour++;</span><br><span class="line"><span class="keyword">if</span>(Hour&gt;=<span class="number">24</span>)</span><br><span class="line">&#123;</span><br><span class="line">Hour=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM1中断服务函数</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1</span><span class="params">()</span> interrupt 3</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//用户代码</span></span><br><span class="line"><span class="comment">//若为工作方式1 每次进入中断需要重装载初值</span></span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">int</span> cnt=<span class="number">0</span>;<span class="comment">//若不定义为static 下次重新调用后cnt又被初始化变成0了</span></span><br><span class="line"></span><br><span class="line">TH1=<span class="number">0xFC</span>;<span class="comment">//方式1不会自动重装载 当溢出进入中断后需要我们手动装载 </span></span><br><span class="line">    TL1=<span class="number">0x18</span>;</span><br><span class="line"></span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">500</span>)<span class="comment">//0.5s</span></span><br><span class="line">&#123;</span><br><span class="line">LED2=!LED2;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="PWM"><a href="#PWM" class="headerlink" title="PWM"></a>PWM</h2><h3 id="直流电机"><a href="#直流电机" class="headerlink" title="直流电机"></a>直流电机</h3><p>​                                                          <img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115232126933-1737001575563-4.png" alt="image-20250115232126933"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115232431896-1737001584226-6.png" alt="image-20250115232431896" style="zoom:30%;"></p><p>直流有刷电机主要由永磁体（定子），线圈（转子），换向器组成；直流无刷电机主要由永磁体（转子），绕组线圈（定子），少了碳刷和换向器的摩擦。</p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250115234253196-1737001617581-8.png" alt="image-20250115234253196" style="zoom:67%;"><h3 id="PWM介绍"><a href="#PWM介绍" class="headerlink" title="PWM介绍"></a>PWM介绍</h3><p>​电机调速不能和LED呼吸灯一样接一个滑动变阻器就完事，因为在驱动电机的过程中会产生很大电流，对于电机来说会转化为机械能没事，但对于滑动变阻器，电流会转化为热能使其损坏。</p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116095501121-1737001653249-10.png" alt="image-20250116095501121" style="zoom:67%;"><p>最新的单片机TIM定时器都有输出PWM的功能，但STC89C52没有，我们用定时器中断来实现，同时也会方便后面学习其它单片机的理解。 </p><h3 id="实验1：LED呼吸灯"><a href="#实验1：LED呼吸灯" class="headerlink" title="实验1：LED呼吸灯"></a>实验1：LED呼吸灯</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;INTRINS.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED P2_0</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Time,i;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(Time=<span class="number">0</span>;Time&lt;<span class="number">100</span>;Time++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">LED=<span class="number">0</span>;</span><br><span class="line">Delay_us(Time);</span><br><span class="line">LED=<span class="number">1</span>;</span><br><span class="line">Delay_us(<span class="number">100</span>-Time);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(Time=<span class="number">100</span>;Time&gt;<span class="number">0</span>;Time--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">LED=<span class="number">0</span>;</span><br><span class="line">Delay_us(Time);</span><br><span class="line">LED=<span class="number">1</span>;</span><br><span class="line">Delay_us(<span class="number">100</span>-Time);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验2：直流电机调速"><a href="#实验2：直流电机调速" class="headerlink" title="实验2：直流电机调速"></a>实验2：直流电机调速</h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116113208512-1737001671482-14.png" alt="image-20250116113208512"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116120658461-1737001679357-16.png" alt="image-20250116120658461"></p><p><strong>该结构与最新单片机TIM定时器PWM硬件结构相似，在这里我们用软件来模拟这一结构：</strong></p><p>​<strong>首先配置定时器，每100us进一次定时器中断，每次进入中断后计数器（Counter）+1，同时与比较值(Compare)比较，若Counter&lt;Compare,置高电平，反之置低电平，在这里设置计数器最大到100后清0，pwm周期：100us*100&#x3D;10ms ，若pwm频率过小则电机会出现抖动（频繁启动停止），故我们要让pwm频率取到一个相对大的值，这时就可等效的获得所需要的模拟参量</strong></p><p><strong>定时器的作用就在于生成周期为T，每个周期内高电平持续时间为Compare的波形</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tim.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tim.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;INTRINS.H&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1 P2_0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2 P2_1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MOTOR P1_0</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> LedMode=<span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Counter,Compare=<span class="number">0</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM0初始化 100us@12.000HZ</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM0_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD&amp;=<span class="number">0xF0</span>;<span class="comment">//1111 0000 高4位为T1，保持不变，低4位为T0，清0</span></span><br><span class="line">    TMOD|=<span class="number">0x01</span>;<span class="comment">//0000 0001 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//给定时器赋初值，定时100us</span></span><br><span class="line">    TH0=<span class="number">0xFF</span>;</span><br><span class="line">    TL0=<span class="number">0x9C</span>;</span><br><span class="line">    </span><br><span class="line">    ET0=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR0=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  TIM0中断服务函数</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM0</span><span class="params">()</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//用户代码</span></span><br><span class="line"><span class="comment">//若为工作方式1 每次进入中断需要重装载初值</span></span><br><span class="line">    TH0=<span class="number">0xFF</span>;</span><br><span class="line">    TL0=<span class="number">0x9C</span>;</span><br><span class="line"><span class="comment">//Compare=50;</span></span><br><span class="line"></span><br><span class="line">Counter++;<span class="comment">//计数器</span></span><br><span class="line"><span class="keyword">if</span>(Counter&gt;=<span class="number">100</span>)Counter=<span class="number">0</span>;<span class="comment">//pwm周期：100us*100=10ms</span></span><br><span class="line"><span class="keyword">if</span>(Counter&lt;Compare)</span><br><span class="line">&#123;</span><br><span class="line">LED1=<span class="number">0</span>;</span><br><span class="line">MOTOR=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">LED1=<span class="number">1</span>;</span><br><span class="line">MOTOR=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tim.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;nixietube.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> KeyNum=<span class="number">0</span>,Speed=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">char</span> Compare;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">P2=<span class="number">0xfe</span>;</span><br><span class="line">    TIM0_Init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">KeyNum=Key();</span><br><span class="line"><span class="keyword">if</span>(KeyNum==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed++;</span><br><span class="line"><span class="keyword">if</span>(Speed&gt;=<span class="number">4</span>)Speed=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">switch</span> (Speed)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">Compare=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">Compare=<span class="number">60</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">Compare=<span class="number">80</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">Compare=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">NixieTube(<span class="number">1</span>,Speed);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="串口通信（重要）"><a href="#串口通信（重要）" class="headerlink" title="串口通信（重要）"></a>串口通信（重要）</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116193708797.png" alt="image-20250116193708797" style="zoom:67%;"><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116224704361.png" alt="image-20250116224704361"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116194452836.png" alt="image-20250116194452836" style="zoom:60%;"><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116194922886.png" alt="image-20250116194922886"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116200105907.png" alt="image-20250116200105907" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116200845182.png" alt="image-20250116200845182" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116201908921.png" alt="image-20250116201908921" style="zoom:67%;"><h3 id="串口参数及时序图"><a href="#串口参数及时序图" class="headerlink" title="串口参数及时序图"></a>串口参数及时序图</h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116204330274.png" alt="image-20250116204330274"></p><p>通常用的串口传输格式为：1bit起始位+8bit数据位+1bit停止位(无奇偶校验位)</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116204353526.png" alt="image-20250116204353526"></p><p><strong>波特率</strong>：每秒钟传输二进制位数 eg:波特率为115200即1s传输二进制的位数115200个</p><p><strong>比特率</strong>：每秒钟传送二进制有效数据的位数，表示有效数据的传输速率。</p><p><strong>计算波特率和比特率</strong></p><p>例：在异步串行传输系统中，字符格式为：1个起始位，8个数据位、1个校验位、2个终止位。若要求每秒传送120个字符，试求传送的波特率和比特率。<br>解答：<br>根据题目给出的字符格式，有效数据为8位，一帧包含1+8+1+2&#x3D;12位</p><p>故波特率为：120*(1+8+1+2)&#x3D;1440 bps&#x3D;1440波特</p><p>又因为有效数据位为8位，而传送一个字符需1+8+1+2&#x3D;12位</p><p>故比特率为：1440*(8&#x2F;12)&#x3D;960 bps</p><p>(比特率还可以直接求：8*120&#x3D;960 bps) </p><h3 id="串口内部收发原理"><a href="#串口内部收发原理" class="headerlink" title="串口内部收发原理"></a>串口内部收发原理</h3><p>讲解视频：<a href="https://www.bilibili.com/video/BV1344y1M7pH/?spm_id_from=333.337.search-card.all.click&vd_source=a9d487fcf1a579639c6348eb5a9321db">https://www.bilibili.com/video/BV1344y1M7pH/?spm_id_from=333.337.search-card.all.click&amp;vd_source=a9d487fcf1a579639c6348eb5a9321db</a></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116232539779.png" alt="image-20250116232539779" style="zoom:70%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116212523392.png" alt="image-20250116212523392" style="zoom:70%;"><h3 id="寄存器-1"><a href="#寄存器-1" class="headerlink" title="寄存器"></a>寄存器</h3><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116212614576.png" alt="image-20250116212614576" style="zoom:67%;"><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116231436451.png" alt="image-20250116231436451"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116231600175.png" alt="image-20250116231600175" style="zoom:50%;"><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117103834727.png" alt="image-20250117103834727"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117103847263.png" alt="image-20250117103847263"></p><p>注意是发送&#x2F;接收第8位后才置1</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117124935563.png" alt="image-20250117124935563"></p><h3 id="工作方式，波特率"><a href="#工作方式，波特率" class="headerlink" title="工作方式，波特率"></a>工作方式，波特率</h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250121120807323.png" alt="image-20250121120807323"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116232458199.png" alt="image-20250116232458199"></p><p><strong>T1溢出率：</strong>T1每秒溢出的次数,即1&#x2F;(T1的定时时间)，T1定时时间&#x3D;(12&#x2F;fosc)*(2^N-初值)，12&#x2F;fosc是计一次数的时间</p><p>定时&#x2F;计数器T1是串口通信的波特率发生器，此时通常将T1设置为定时器且工作于<strong>工作方式2</strong>(<strong>自动重装初值的8位定时器</strong>)（自动重装载，省去了每次进中断赋值的时间，定时更加准确），并屏蔽其中断。<strong>T1溢出率是T1每秒钟溢出的次数，该次数与T1的初值有关。</strong>若假设T1的初值为M，则T1相邻两次溢出之间的时间间隔为(256-M)&#x2F;(12&#x2F;fosc)，因此</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/58caac6bdf57efa70cc84d3c8cb6749b.png" alt="img"></p><p>式中，fosc为单片机的晶振频率。</p><p>9600 &#x3D; (2^SMOD &#x2F; 32) * 11059200 &#x2F; [12 *(256 - TH1)] </p><p>9600 &#x3D; (1 &#x2F; 32) * 921600 &#x2F; (256 - TH1)</p><p>9600 &#x3D; 28800 &#x2F; (256 - TH1)</p><p>TH1&#x3D;253 </p><h4 id="将十进制数-253-转换为十六进制"><a href="#将十进制数-253-转换为十六进制" class="headerlink" title="将十进制数 253 转换为十六进制"></a>将十进制数 253 转换为十六进制</h4><ol><li><strong>253 ÷ 16 &#x3D; 15</strong>，余数为 <strong>13</strong>（十六进制中 13 对应 ‘D’）。</li><li><strong>15 ÷ 16 &#x3D; 0</strong>，余数为 <strong>15</strong>（十六进制中 15 对应 ‘F’）。</li><li>将余数倒序排列，得到 <strong>FD</strong>。</li></ol><p>所以，十进制数 253 的十六进制表示为 <strong>0xFD</strong>。</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117162856863.png" alt="image-20250117162856863"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117112621096.png" alt="image-20250117112621096"></p><p>最高波特率就是要让定时计数器溢出的尽可能快，技术次数N&#x3D;1，初值为255</p><p>最低波特率就是要让定时计数器溢出的尽可能慢，计数次数N&#x3D;256，初值为0</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117130909760.png" alt="image-20250117130909760"></p><p>有误差是因为晶振是12MHZ，当晶振是11.0592MHZ时误差才为0，此时波特率越大误差越大</p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116233150040.png" alt="image-20250116233150040" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116233336581.png" alt="image-20250116233336581" style="zoom:67%;"><p>RI&#x3D;1丢弃数据是因为此时接收SBUF已经满了但是还没有传递到总线上，如果此时继续写入数据则会破坏原来收好的一包。</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250116233444506.png" alt="image-20250116233444506"></p><h3 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h3><p><strong>1.初始化：</strong></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117102346667.png" alt="image-20250117102346667"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117102159872.png" alt="image-20250117102159872"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117104622207.png" alt="image-20250117104622207"></p><p>N即定时器计数次数，最大计数-N即T1初值</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117110400970.png" alt="image-20250117110400970"></p><p>乙机可用始终查询或者中断的方式接收</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117111013792.png" alt="image-20250117111013792"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250117111424043.png" alt="image-20250117111424043"></p><h4 id="实验：串口助手发给单片机，单片机再传回串口助手"><a href="#实验：串口助手发给单片机，单片机再传回串口助手" class="headerlink" title="实验：串口助手发给单片机，单片机再传回串口助手"></a>实验：串口助手发给单片机，单片机再传回串口助手</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;uart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  晶振11.0592MHZ</span></span><br><span class="line"><span class="comment">  * @param  ival 定时器初值</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> ival)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//配置串口寄存器</span></span><br><span class="line">SCON=<span class="number">0x50</span>;</span><br><span class="line">PCON=<span class="number">0x70</span>;<span class="comment">//波特率不加倍</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置波特率（配置定时器1）</span></span><br><span class="line">TMOD&amp;=<span class="number">0x0F</span>;</span><br><span class="line">TMOD|=<span class="number">0x20</span>;<span class="comment">//0010 0000 方式2 8位自动重装定时/计数器 自动重装载无需软件赋初值（会占用时间）,所以定时更加准确 用于串口波特率配置 </span></span><br><span class="line">TH1=ival;</span><br><span class="line">TL1=ival;</span><br><span class="line"></span><br><span class="line">ET1=<span class="number">0</span>;<span class="comment">//禁止定时器中断</span></span><br><span class="line">ES=<span class="number">1</span>;<span class="comment">//打开串口接收中断</span></span><br><span class="line">EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line"></span><br><span class="line">TR1=<span class="number">1</span>;<span class="comment">//打开定时器 TCON寄存器中的一位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写一个字节的数据到SBUF中，写入后会由硬件自动完成发送，发送完成后硬件会把TI置1,需要软件清0</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SendByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> Byte)</span></span><br><span class="line">&#123;</span><br><span class="line">SBUF=Byte;    <span class="comment">//向缓存器中写入数据</span></span><br><span class="line"><span class="keyword">while</span>(!TI); <span class="comment">//等待是否完成</span></span><br><span class="line">TI=<span class="number">0</span>;         <span class="comment">//复位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SendString</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *str)</span><span class="comment">//参数是指针</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(*str !=<span class="string">&#x27;\0&#x27;</span> )  <span class="comment">//字符串是以\0结尾的</span></span><br><span class="line">&#123;</span><br><span class="line">UART_SendByte(*str);</span><br><span class="line">str++;  <span class="comment">//地址加1.依次发送</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">uart</span><span class="params">()</span> interrupt 4</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> rec_data=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(RI==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">RI=<span class="number">0</span>;<span class="comment">//清零RI </span></span><br><span class="line"><span class="comment">//一个一个字节接收一个一个字节发送</span></span><br><span class="line">rec_data=SBUF;<span class="comment">//读取SBUF数据存到rec_data</span></span><br><span class="line">UART_SendByte(rec_data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="单片机系统的并行扩展"><a href="#单片机系统的并行扩展" class="headerlink" title="单片机系统的并行扩展"></a>单片机系统的并行扩展</h2><h3 id="51单片机最小系统"><a href="#51单片机最小系统" class="headerlink" title="51单片机最小系统"></a>51单片机最小系统</h3><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118111210550.png" alt="image-20250118111210550"></p><p>​                             <img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118112145181.png" alt="image-20250118112145181" style="zoom:67%;"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118113116918.png" alt="image-20250118113116918" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118113156726.png" alt="image-20250118113156726" style="zoom:70%;"><h3 id="存储器扩展"><a href="#存储器扩展" class="headerlink" title="存储器扩展"></a>存储器扩展</h3><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118114104519.png" alt="image-20250118114104519" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118114937463.png" alt="image-20250118114937463" style="zoom:67%;"><p>​                                   <img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118120734977.png" alt="image-20250118120734977"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118120944559.png" alt="image-20250118120944559" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118121225752.png" alt="image-20250118121225752" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118121405652.png" alt="image-20250118121405652" style="zoom:67%;"><h4 id="程序存储器扩展"><a href="#程序存储器扩展" class="headerlink" title="程序存储器扩展"></a>程序存储器扩展</h4><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118121605765.png" alt="image-20250118121605765"></p><p>简化画法：</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118122226965.png" alt="image-20250118122226965"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118122545598.png" alt="image-20250118122545598"></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118122635779.png" alt="image-20250118122635779" style="zoom:67%;"><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118122838242.png" alt="image-20250118122838242" style="zoom:67%;"><h4 id="数据存储器扩展"><a href="#数据存储器扩展" class="headerlink" title="数据存储器扩展"></a>数据存储器扩展</h4><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250118123057700.png" alt="image-20250118123057700" style="zoom:67%;"><h1 id="2024期末题"><a href="#2024期末题" class="headerlink" title="2024期末题"></a>2024期末题</h1><h2 id="1-外部中断"><a href="#1-外部中断" class="headerlink" title="1.外部中断"></a>1.外部中断</h2><p>​如下图所示，在单片机P1口上接有8只LED，全灭。在<strong>外部中断1</strong>输入引脚（P3.3）接一只按钮开关K1，每按一次按钮开关K1，使外部中断1引脚接地，产生一个<strong>低电平触发</strong>的外部中断请求。在中断服务程序中，使低4位的LED保持灭，高4位的LED亮，如此交替闪烁10次。然后从中断程序返回，控制8只LED全亮。请补充完整下列程序的主函数main()和终端服务程序int1()。</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250121100953889.png" alt="image-20250121100953889"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;reg51.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> K1 P3_3</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> j;</span><br><span class="line">    <span class="keyword">for</span>(;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">333</span>;j++)</span><br><span class="line">    &#123;;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//开总中断</span></span><br><span class="line">    EX1=<span class="number">1</span>;<span class="comment">//开外部中断1</span></span><br><span class="line">    IT1=<span class="number">0</span>;<span class="comment">//低电平触发</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P1=<span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">int1</span><span class="params">()</span> interrupt 2</span><br><span class="line">&#123;</span><br><span class="line">    uchar m;</span><br><span class="line">    EX1=<span class="number">0</span>;<span class="comment">//关闭外部中断1</span></span><br><span class="line">    <span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">10</span>;m++)</span><br><span class="line">    &#123;</span><br><span class="line">        P1=<span class="number">0x0f</span>;</span><br><span class="line">        Delay(<span class="number">500</span>);</span><br><span class="line">        P1=<span class="number">0xf0</span>;</span><br><span class="line">        Delay(<span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     EX1=<span class="number">1</span>;<span class="comment">//开启外部中断1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意点：</p><p>1.LED是低电平点亮</p><p>2.外部中断1：中断号为2    低电平触发：IT1&#x3D;0；</p><p>3.进入中断程序后EX1&#x3D;0;是为了关闭外部中断1，此时再按按键没用，直到中断函数中执行完毕后，再令EX1&#x3D;1;</p><p>4.若头文件为REGX52.H，可以用P3_3,在头文件已经定义了P3_3，若为reg52.h，头文件只定义了P3，操控第三位的话是P3^3, 可令sbit key&#x3D;P3^3;</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250121102557365.png" alt="image-20250121102557365"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250121102614909.png" alt="image-20250121102614909"></p><p>INT1的IT1决定外部中断1是下降沿触发还是低电平触发（外部中断1输入引脚接的是按键，当按键按下，引脚接地，低电平触发外部中断，进入中断服务程序），IE1是中断标志位（当中断源到来时由单片机自动置1），EX1，为外部中断1控制开关，EA为全局总中断控制开关，IP是用来设置中断优先级，默认是0，不用管。</p><h2 id="2-串口双机通信"><a href="#2-串口双机通信" class="headerlink" title="2.串口双机通信"></a>2.串口双机通信</h2><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250121114919014.png" alt="image-20250121114919014"></p><p>题目分析：</p><p>1.编写甲机在定时&#x2F;计数器T1工作在<strong>方式2</strong>下的串口方式<strong>1</strong>的发送程序，晶振位11.0592MHZ,波特率为9600bit&#x2F;s</p><p>2.甲机只能发送，<strong>不能接收</strong></p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250114101345916.png" alt="image-20250114101345916" style="zoom:50%;"><p>定时器工作方式2：自动重装载（初值），用于串口波特率</p><p>将TL1,TH1赋为相同的初值，当TL1溢出后自动将TH1的值赋值给TL1</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250121120821775.png" alt="image-20250121120821775"></p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250121115638729.png" alt="image-20250121115638729"></p><p>串口工作方式1：8位的异步通信方式，通常用于双机通信</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250121121758633.png" alt="image-20250121121758633"></p><p>波特率计算</p><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250121190558887.png" alt="image-20250121190558887"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*配置串口寄存器*/</span></span><br><span class="line"><span class="comment">//Serial Control 串行控制寄存器 可位寻址 SM0 SM1 SM2 REN TB8 RB8 TI RI</span></span><br><span class="line">SCON=<span class="number">0x40</span>;<span class="comment">//工作方式1（SM0 0 SM1 1） 禁止串口接收(REN 0) 0100 0000 = 0X40</span></span><br><span class="line"><span class="comment">//Power Control 波特率选择寄存器 不可位寻址 SMOD SMOD0 - POF GF1 GF0 PD IDL</span></span><br><span class="line">PCON=<span class="number">0x00</span>;<span class="comment">//波特率不加倍 (SMOD 0) 其余位也全为0 其实可以不用配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*配置波特率（配置定时器1）*/</span></span><br><span class="line"><span class="comment">//Timer Mode Register 定时器模式寄存器 GATE C/T M1 M0 GATE C/T M1 M0</span></span><br><span class="line">TMOD&amp;=<span class="number">0x0F</span>;<span class="comment">//清楚定时器1模式位 定时器0模式位不变</span></span><br><span class="line">TMOD|=<span class="number">0x20</span>;<span class="comment">//0010 0000 方式2 </span></span><br><span class="line">TH1=<span class="number">0xfd</span>;</span><br><span class="line">TL1=<span class="number">0xfd</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中断</span></span><br><span class="line">ET1=<span class="number">0</span>;<span class="comment">//禁止定时器中断</span></span><br><span class="line">ES=<span class="number">1</span>;<span class="comment">//打开串口接收中断</span></span><br><span class="line">EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line"></span><br><span class="line">TR1=<span class="number">1</span>;<span class="comment">//打开定时器 TCON寄存器中的一位</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp=P3;</span><br><span class="line">SBUF=temp;</span><br><span class="line"><span class="keyword">while</span>(!TI);</span><br><span class="line">TI=<span class="number">0</span>;</span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-写数据到片内片外RAM"><a href="#3-写数据到片内片外RAM" class="headerlink" title="3.写数据到片内片外RAM"></a>3.写数据到片内片外RAM</h2><p>​编写C51程序，记录函数(x+1)^2的值（x&#x3D;0到19），将函数值存入片内RAM的30H为首地址的连续单元中，再将个位数不为6的函数值读入到片外RAM以1000H为首地址的连续单元中，并在屏幕上显示个位数不为6的函数值的个数。</p><p>答案：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line">xdata <span class="type">unsigned</span> <span class="type">int</span> buffer[<span class="number">20</span>]_at_0x1000H;</span><br><span class="line">data <span class="type">unsigned</span> <span class="type">int</span> buf[<span class="number">20</span>]_at_0x30H;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        buf=(i+<span class="number">1</span>)*(i+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(buf[i]%<span class="number">10</span>!=<span class="number">6</span>)</span><br><span class="line">        &#123;</span><br><span class="line">         buffer[j++]=buf[i];   </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;j&quot;</span>,%d);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PS:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">xdata <span class="type">unsigned</span> <span class="type">char</span> databuf[<span class="number">256</span>] _at_0x5000;</span><br><span class="line"><span class="comment">/*xdata</span></span><br><span class="line"><span class="comment">    xdata 是 8051 单片机 中的一个存储类型修饰符，表示变量存储在 外部数据存储器（External Data Memory） 中。</span></span><br><span class="line"><span class="comment">    8051 单片机的内存分为多个区域：</span></span><br><span class="line"><span class="comment">        data：内部 RAM（128 字节）。</span></span><br><span class="line"><span class="comment">        idata：间接寻址的内部 RAM（256 字节）。</span></span><br><span class="line"><span class="comment">        xdata：外部扩展的 RAM（最大 64KB）。</span></span><br><span class="line"><span class="comment">    使用 xdata 表示这个数组将存储在外部 RAM 中。*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">_at_ 0x5000</span></span><br><span class="line"><span class="comment">    _at_ 是一个编译器特定的关键字（例如 Keil C51 编译器），用于将变量或数组放置在 指定的内存地址。</span></span><br><span class="line"><span class="comment">    0x5000 是内存地址的十六进制表示，表示数组 databuf 将从外部 RAM 的 0x5000 地址开始存储。</span></span><br><span class="line"><span class="comment">    由于数组大小为 256 字节，因此 databuf 将占用从 0x5000 到 0x50FF 的内存空间。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250122112113101.png" alt="image-20250122112113101"></p><h2 id="4-动态数码管"><a href="#4-动态数码管" class="headerlink" title="4.动态数码管"></a>4.动态数码管</h2><p><img src="/2025/01/14/KEIL%E4%BD%BF%E7%94%A8/image-20250122085339251.png" alt="image-20250122085339251"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答案：</span><br><span class="line"><span class="number">0x01</span>；</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)；</span><br><span class="line">i&lt;<span class="number">3</span>；</span><br><span class="line">(_crol_(j,<span class="number">1</span>))&amp;<span class="number">0x07</span>     <span class="comment">//0x07将j的值限制在0x01 0x02 0x04之间 因为题目只有三个数码管</span></span><br></pre></td></tr></table></figure><p>在c语言中，尤其是单片机的<a href="https://so.csdn.net/so/search?q=C51&spm=1001.2101.3001.7020">C51</a>中，移位运算操作很常见。实现移位操作的方法有两种：一是利用<strong>移位运算符</strong>，二是利用<strong>移位函数</strong>。</p><p>区别：</p><p>1.移位运算符，是系统内置的运算操作，编译编译不用包含相关头文件；而移位函数编译要包含<strong>intrins.h</strong>头文件。</p><p>2.&lt;&lt;和&gt;&gt;的移位规则数据从一端移动到另外一端，数据尾部移走后会补0，数据头部移到最前端后会<strong>溢出</strong>，溢出的数据就<strong>被抹掉</strong>了。<br> _crol_等函数是是循环移位，<strong>首位相接</strong>，数据前端移动到尾部后，会从尾部再次进入队列，数据<strong>不会溢出</strong>。运算符是<strong>线性队列</strong>，循环移位函数是<strong>环形队列</strong>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> _crol_ (</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> c,        <span class="comment">/* 要被进行 位左移 的形式参数 */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> b);       <span class="comment">/* 要进行的 位移数 */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>此题我觉得有点问题，一方面是它段码表{0xf9,0xa4,0xb0}一般共阳极来说确实表示的是1，2，3，但是带到图中却表示的并不是1，2，3,不过这个不影响做题</strong></p><p><strong>第二方面是他说的左边第一个，左边第二个，左边第三个，是不是从左起的意思，这样的话文档里的答案是有问题的它是0x01，也就是从最右边第一个开始，依次向左。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 51单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Webots&amp;python</title>
      <link href="/2024/02/19/Webots-python/"/>
      <url>/2024/02/19/Webots-python/</url>
      
        <content type="html"><![CDATA[<p>首先是可以从报错内容看到提示指定的python版本，由于是新电脑，压根还没装python，所以先去官网下载了一下</p><p>然后文件报错:</p><p>ModuleNotFoundError: No module named ‘protobot’  意思应该是没有protobot这个python包</p><p>然后我在下载的文件夹里的电机驱动函数库找到了protobot这个文件夹,然后把它放到了webots工程里，</p><p><img src="/2024/02/19/Webots-python/image-20240219224457877.png" alt="image-20240219224457877"></p><p>在readme文件里看到安装它的方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd src </span><br><span class="line">pip install -e .</span><br></pre></td></tr></table></figure><p>按照上面的输入，然后出现下面报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Installing build dependencies ... error</span><br><span class="line">  error: subprocess-exited-<span class="keyword">with</span>-error</span><br><span class="line"></span><br><span class="line">  × pip subprocess to install build dependencies did <span class="keyword">not</span> run successfully.</span><br><span class="line">  │ exit code: <span class="number">1</span></span><br><span class="line">  ╰─&gt; [<span class="number">8</span> lines of output]</span><br><span class="line">      WARNING: Retrying (Retry(total=<span class="number">4</span>, connect=<span class="literal">None</span>, read=<span class="literal">None</span>, redirect=<span class="literal">None</span>, status=<span class="literal">None</span>)) after connection broken by <span class="string">&#x27;SSLError(SSLEOFError(8, &#x27;</span>EOF occurred <span class="keyword">in</span> violation of protocol (_ssl.c:<span class="number">1122</span>)<span class="string">&#x27;))&#x27;</span>: /simple/setuptools/</span><br><span class="line">      WARNING: Retrying (Retry(total=<span class="number">3</span>, connect=<span class="literal">None</span>, read=<span class="literal">None</span>, redirect=<span class="literal">None</span>, status=<span class="literal">None</span>)) after connection broken by <span class="string">&#x27;SSLError(SSLEOFError(8, &#x27;</span>EOF occurred <span class="keyword">in</span> violation of protocol (_ssl.c:<span class="number">1122</span>)<span class="string">&#x27;))&#x27;</span>: /simple/setuptools/</span><br><span class="line">      WARNING: Retrying (Retry(total=<span class="number">2</span>, connect=<span class="literal">None</span>, read=<span class="literal">None</span>, redirect=<span class="literal">None</span>, status=<span class="literal">None</span>)) after connection broken by <span class="string">&#x27;SSLError(SSLEOFError(8, &#x27;</span>EOF occurred <span class="keyword">in</span> violation of protocol (_ssl.c:<span class="number">1122</span>)<span class="string">&#x27;))&#x27;</span>: /simple/setuptools/</span><br><span class="line">      WARNING: Retrying (Retry(total=<span class="number">1</span>, connect=<span class="literal">None</span>, read=<span class="literal">None</span>, redirect=<span class="literal">None</span>, status=<span class="literal">None</span>)) after connection broken by <span class="string">&#x27;SSLError(SSLEOFError(8, &#x27;</span>EOF occurred <span class="keyword">in</span> violation of protocol (_ssl.c:<span class="number">1122</span>)<span class="string">&#x27;))&#x27;</span>: /simple/setuptools/</span><br><span class="line">      WARNING: Retrying (Retry(total=<span class="number">0</span>, connect=<span class="literal">None</span>, read=<span class="literal">None</span>, redirect=<span class="literal">None</span>, status=<span class="literal">None</span>)) after connection broken by <span class="string">&#x27;SSLError(SSLEOFError(8, &#x27;</span>EOF occurred <span class="keyword">in</span> violation of protocol (_ssl.c:<span class="number">1122</span>)<span class="string">&#x27;))&#x27;</span>: /simple/setuptools/</span><br><span class="line">      Could <span class="keyword">not</span> fetch URL https://pypi.org/simple/setuptools/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host=<span class="string">&#x27;pypi.org&#x27;</span>, port=<span class="number">443</span>): Max retries exceeded <span class="keyword">with</span> url: /simple/setuptools/ (Caused by SSLError(SSLEOFError(<span class="number">8</span>, <span class="string">&#x27;EOF occurred in violation of protocol (_ssl.c:1122)&#x27;</span>))) - skipping</span><br><span class="line">      ERROR: Could <span class="keyword">not</span> find a version that satisfies the requirement setuptools&gt;=<span class="number">40.8</span><span class="number">.0</span> (<span class="keyword">from</span> versions: none)</span><br><span class="line">      ERROR: No matching distribution found <span class="keyword">for</span> setuptools&gt;=<span class="number">40.8</span><span class="number">.0</span></span><br><span class="line">      [end of output]</span><br><span class="line"></span><br><span class="line">  note: This error originates <span class="keyword">from</span> a subprocess, <span class="keyword">and</span> <span class="keyword">is</span> likely <span class="keyword">not</span> a problem <span class="keyword">with</span> pip.</span><br><span class="line">error: subprocess-exited-<span class="keyword">with</span>-error</span><br><span class="line"></span><br><span class="line">× pip subprocess to install build dependencies did <span class="keyword">not</span> run successfully.</span><br><span class="line">│ exit code: <span class="number">1</span></span><br><span class="line">╰─&gt; See above <span class="keyword">for</span> output.</span><br><span class="line"></span><br><span class="line">note: This error originates <span class="keyword">from</span> a subprocess, <span class="keyword">and</span> <span class="keyword">is</span> likely <span class="keyword">not</span> a problem <span class="keyword">with</span> pip.</span><br></pre></td></tr></table></figure><p>然后我问chatgpt，它列出的原因里有一条说可能是代理的原因，然后我把梯子关了，报错少了很多:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> Installing build dependencies ... error</span><br><span class="line">  error: subprocess-exited-with-error</span><br><span class="line"></span><br><span class="line">  × pip subprocess to install build dependencies did not run successfully.</span><br><span class="line">  │ <span class="built_in">exit</span> code: <span class="number">1</span></span><br><span class="line">  ╰─&gt; [<span class="number">2</span> lines of output]</span><br><span class="line">      ERROR: Could not find a version that satisfies the requirement setuptools&gt;=<span class="number">40.8</span><span class="number">.0</span> (from versions: none)</span><br><span class="line">      ERROR: No matching distribution found <span class="keyword">for</span> setuptools&gt;=<span class="number">40.8</span><span class="number">.0</span></span><br><span class="line">      [end of output]</span><br><span class="line"></span><br><span class="line">  note: This error originates from a subprocess, and is likely not a problem with pip.</span><br><span class="line">error: subprocess-exited-with-error</span><br><span class="line"></span><br><span class="line">× pip subprocess to install build dependencies did not run successfully.</span><br><span class="line">│ <span class="built_in">exit</span> code: <span class="number">1</span></span><br><span class="line">╰─&gt; See above <span class="keyword">for</span> output.        我把梯子关了之后还剩这些报错</span><br></pre></td></tr></table></figure><p>继续问chatgpt，回答说</p><p><img src="/2024/02/19/Webots-python/image-20240219225116935.png" alt="image-20240219225116935"></p><p>先是pip install –upgrade setuptools，然后还是报错，然后使用清华大学镜像，pip install setuptools -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple%EF%BC%8C%E7%84%B6%E5%90%8E%E5%B0%B1Ok%E4%BA%86%E3%80%82%E6%8E%A5%E7%9D%80%E5%B0%B1%E7%BB%A7%E7%BB%AD%E5%89%8D%E9%9D%A2%E7%9A%84cd">https://pypi.tuna.tsinghua.edu.cn/simple，然后就Ok了。接着就继续前面的cd</a> src , pip install -e .就可以正常安装这个protobot包了，中间电脑不要熄屏，以免下载中断报错，得重新再下载。</p><p>这样，这个webots工程就正常跑起来了，这次问题的原因主要还是自己对python环境的不熟悉，安装python包都不知道怎么装。</p><p><img src="/2024/02/19/Webots-python/image-20240219225436046.png" alt="image-20240219225436046"></p>]]></content>
      
      
      <categories>
          
          <category> Webots </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webots报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>队列</title>
      <link href="/2024/02/03/%E9%98%9F%E5%88%97/"/>
      <url>/2024/02/03/%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p>原文链接：<a href="http://t.csdnimg.cn/DY7gy">http://t.csdnimg.cn/DY7gy</a></p><p><strong>环形缓冲区</strong>是<a href="https://so.csdn.net/so/search?q=%E5%B5%8C%E5%85%A5%E5%BC%8F&spm=1001.2101.3001.7020">嵌入式</a>系统中十分重要的一种数据结构，比如在<strong>串口</strong>处理中，串口中断接收数据直接往环形缓冲区丢数据，而应用可以从环形缓冲区取数据进行处理，这样数据在读取和写入的时候都可以在这个缓冲区里循环进行，程序员可以根据自己需要的数据大小来决定自己使用的缓冲区大小，<strong>不用担心数组越界</strong>。</p><p><img src="/2024/02/03/%E9%98%9F%E5%88%97/image-20240203112201743.png" alt="image-20240203112201743"></p><p><strong>队列</strong>的基本概念：队列 (Queue)：是一种先进先出(First In First Out ,简称 FIFO)的线性表，只允许在一端插入（入队），在另一端进行删除（出队）。</p><p>队列头就是指向已经存储的数据，并且这个数据是待处理的。下一个CPU处理的数据就是1；而队列尾则指向可以进行写数据的地址。</p><h2 id="队列是什么"><a href="#队列是什么" class="headerlink" title="队列是什么"></a><strong>队列是什么</strong></h2><p>队列是一种很常见的数据结构，满足先进先出的方式，如果我们设定队列的最大长度，那就意味着进队列和出队列的元素的数量实则满足一种动态平衡。</p><p>如果我们把首次添加入队列的元素作为一个一维坐标的原点，那么随着队列中元素的添加，坐标原点到队尾元素的长度会无穷无尽的增大，随这之前添入的元素不断出列，对头对应的下标点也在不断增大。这样，进队列和出队列的元素的数量就对应到对头和队尾下标点的移动</p><p>因此我们评判一个队列长度是否溢出原先约定的最大长度，实则就是在评判队尾坐标点与队头坐标点之间的差值，无论是出队列还是入队列，队头和队尾的坐标都在不断增大</p><p><img src="/2024/02/03/%E9%98%9F%E5%88%97/84497721b6c4413c8558e4266b886ddc.png" alt="img"></p><h2 id="front指针和rear指针的引入"><a href="#front指针和rear指针的引入" class="headerlink" title="front指针和rear指针的引入"></a><strong>front指针和rear指针的引入</strong></h2><p>虽然队尾和队头的下标在不断增大，但是我们对于队列的研究只需要局限在队头与队尾之间的元素，坐标原点到队头之间的元素已经算作出列元素，并不需要研究。因此我们不妨将队列在逻辑上放入一个事先设定容量的一维数组中，只要这个数组的容量是队列中元素的个数+1就行，为什么要这么设定待会再讲。我们想要达到的目的是，无论出列还是入列，本质上是通过修改数组中元素的值，那些已经出列的元素所在的下标位需要放置新入列的元素，并在逻辑上保证新入列元素位于队尾就行。</p><p>因此，我们不得不得引入头指针front和尾指针rear，对指针指向的数组下标对应空间进行操作，来修改数组中元素的值。</p><h2 id="front指针和rear指针的理解"><a href="#front指针和rear指针的理解" class="headerlink" title="front指针和rear指针的理解"></a><strong>front指针和rear指针的理解</strong></h2><p>front：初始值为0，对应索引位待出列，若当前指向的数组下标的元素要出列，则先执行出列动作(实际上不用操作，出列的索引位可以被新入队的元素覆盖)，随后front指针就要向后一位，即front++</p><p>rear：初始值为0，对应索引位待入列，若当前指向的数组下标有元素要入列，则先执行入列动作（索引位元素赋值），随后front指针就要向后一位，即rear++</p><h2 id="队列最大长度匹配数组容量导致一种错误的解决方案"><a href="#队列最大长度匹配数组容量导致一种错误的解决方案" class="headerlink" title="队列最大长度匹配数组容量导致一种错误的解决方案"></a>队列最大长度匹配数组容量导致一种错误的解决方案</h2><p>这就会有一个问题，随着队列中元素的不断更迭，front和rear很快就会超过数组容量，造成数组索引越界</p><p><img src="/2024/02/03/%E9%98%9F%E5%88%97/dd50472cf4ba4aad8fe5e565ccfe39de.png" alt="img"></p><p>比如上图所示，front&#x3D;2，也就是说已经有两个元素出列了，因此rear&#x3D;5与rear&#x3D;6对应的两个元素理应可以入列，但是我们发现数组maxsize&#x3D;5，不存在索引位5和6，强行对这两个下标赋值会造成索引越界异常indexOutException 。但是我们发现此时数组中索引位0和1都空着，完全可以将这两个位置利用起来，因此我们可以想办法让实际的rear值转化为等效的rear值，也就是是让rear&#x3D;5转化为rear&#x3D;0，同理rear6转化为rear&#x3D;1。怎么做到呢？无疑是通过取余！</p><p>每次新元素入队后， 执行rear&#x3D;(rear)%maxSize操作，随后执行rear++操作右移rear指针</p><p>像上图中的rear&#x3D;rear%5乍一看好像没问题，但实际上这种取余方式是有问题的，出现这种取余方式的根源在于我们想让队列最大长度与数组容量保持一致，下文会详细说明这种解决方案的错误之处。</p><h2 id="指针的往复移动：逻辑上的环形"><a href="#指针的往复移动：逻辑上的环形" class="headerlink" title="指针的往复移动：逻辑上的环形"></a>指针的往复移动：逻辑上的环形</h2><p>出队和入队的方向是从右向左，而front与rear指针的移动方向却是从左到右循环往复（指向数组末尾后按照取余算法又重置为数组开头），因此我们可以把单向数组在逻辑上理解成环形数组，指针的循环往复移动理解成按照顺时针或逆时针（只要规定某一方向就好）单向移动</p><p>  环形队列小知识：</p><p>  环形队列是在实际编程极为有用的数据结构,它有如下特点。</p><p>  它是一个首尾相连的FIFO的数据结构，采用数组的线性空间,数据组织简单。能很快知道队列是否满为空。能以很快速度的来存取数据。</p><p>   因为有简单高效的原因，甚至在硬件都实现了环形队列。 </p><p>   环形队列广泛用于网络数据收发，和不同程序间数据交换（比如内核与应用程序大量交换数据,从硬件接收大量数据）均使用了环形队列。</p><h2 id="队列为空的判别"><a href="#队列为空的判别" class="headerlink" title="队列为空的判别"></a>队列为空的判别</h2><p>我们怎么判断队列为空呢？</p><p>如果我们按照指针从左到右的方向移动，当front指针和rear指针重合时，front指针对应的索引位之前的索引位都已经出列完毕，而rear指针对应的索引位以及之后的所有索引位还未有元素入列。</p><p>所以队列是否为空的判别：front&#x3D;&#x3D;rear</p><p><img src="/2024/02/03/%E9%98%9F%E5%88%97/a053efb0385e4714b8889ecd98ba2d31.png" alt="img"></p><h2 id="rear-rear-maxSize解决方案的问题"><a href="#rear-rear-maxSize解决方案的问题" class="headerlink" title="rear&#x3D;rear%maxSize解决方案的问题"></a>rear&#x3D;rear%maxSize解决方案的问题</h2><p> 入队图示<br>下图展示了maxSize&#x3D;5的数组中，front&#x3D;0保持不变，元素依次入列直到满载，rear指针的移动情况：</p><p><img src="/2024/02/03/%E9%98%9F%E5%88%97/42a1d7c1976b4e7db62cd01c7b7c2fdc.png" alt="img"></p><p> front&#x3D;rear&#x3D;0的歧义<br> 可以看到，如果我们认为队列容量与数组容量应该持平，那么当第五个元素50入列后，本来rear&#x3D;4执行了rear++的操作后，rear&#x3D;5，随后rear将会通过取余算法rear&#x3D;rear%maxSize重置为0，这是我们解决方案的核心！</p><p>但关键点就在这里，我们发现空载时front&#x3D;rear&#x3D;0，满载时依然有front&#x3D;rear&#x3D;0！这样子我们就无法判断front&#x3D;rear时，队列是空还是满，因此rear&#x3D;rear%maxSize这种解决方案是不被允许的</p><h2 id="新的解决方案：置空位的引入"><a href="#新的解决方案：置空位的引入" class="headerlink" title="新的解决方案：置空位的引入"></a>新的解决方案：置空位的引入</h2><p>新的解决方案<br>       每次新元素入队后， 执行rear&#x3D;(rear+1)%maxSize操作，该操作包含rear++操作</p><p>置空位的引入<br>       并且我们人为规定，数组中必须留有一个索引位不得放置元素，必须置空！！！如何实现我们的人为规定呢？那就要先探索当数组满载后front和rear指针之间有啥关系</p><p> 入队图示<br>下图展示了maxSize&#x3D;5的数组中，front&#x3D;0保持不变，元素依次入列直到满载，rear指针的移动情况：</p><p><img src="/2024/02/03/%E9%98%9F%E5%88%97/fc276df1cfb14836b200b9ab1791347a.png" alt="img"></p><pre><code>   人为的让最后一位置空，所以当元素40入列后，数组已经满载   满载后数据之间的关系：</code></pre><p>front&#x3D;0<br>rear&#x3D;(rear+1)%maxSize&#x3D;(3+1)%5&#x3D;4  (注： 执行完arr[rear]&#x3D;40，再执行  rear&#x3D;(rear+1)%maxSize)<br>(rear+1)%maxSize&#x3D;(4+1)%5&#x3D;0&#x3D;front<br>       当我们认为的满载发生后，最后一位置空，发现此时rear和front之间的关系为(rear+1)%maxSize&#x3D;(4+1)%5&#x3D;0&#x3D;front，因此这个关系可以作为满载的条件</p><pre><code>   因为处于满载状态，我们无法再往队列添加元素，只能从队列取出元素，也就是进行出列的操作，而一旦我们执行了出列的操作，比如将索引位i=0上的元素10出列后，则front右移，即执行front=(front+1)%maxSize操作，最终front=1。   若随后又添加元素入列，即在索引位i=4上添加元素50，随后又会执行rear=(rear+1)%maxSize操作，最终rear=0。   rear=0≠front=1，此时就不会出现之前那种错误方案中 rear=front=0导致歧义的情况，而一旦 rear=front=0，必然表示队列为空，因此这种解决方案是行得通的</code></pre><h2 id="队列为满的判别"><a href="#队列为满的判别" class="headerlink" title="队列为满的判别"></a>队列为满的判别</h2><p>​      当我们认为的满载发生后，最后一位置空，发现此时rear和front之间的关系为(rear+1)%maxSize&#x3D;(4+1)%5&#x3D;0&#x3D;front，因此这个关系可以作为满载的条件</p><h2 id="队列中元素的个数"><a href="#队列中元素的个数" class="headerlink" title="队列中元素的个数"></a>队列中元素的个数</h2><p>​      numValid&#x3D;(rear+maxSize-front)%maxSize，大家可以带入数据验证一下</p><pre><code> 实际上：   当rear在front之后(这里指的是数组中索引位的前后，并非逻辑上的前后)，有效数据个数=rear-front=(rear+maxSize-front)%maxSize   当rear在front之前(这里指的是数组中索引位的前后，并非逻辑上的前后)，有效数据个数=(rear+maxSize-front)%maxSize</code></pre><h2 id="值得注意的一些细节"><a href="#值得注意的一些细节" class="headerlink" title="值得注意的一些细节"></a>值得注意的一些细节</h2><p>细节1<br>      置空位虽然是人为引入的，但这不意味这置空位的位置是随意的，实际上，只有队列满后才会将剩下的位置作为置空位，一旦置空位出现，rear和front永远不可能指向同一个索引位，因为你会惊奇的发现置空位恰号将rear和front隔开了.</p><pre><code> 置空位就像一把锁，一旦上锁就只能通过出队列操作解锁</code></pre><p>继续执行获取元素操作出队列（解锁）：</p><p><img src="/2024/02/03/%E9%98%9F%E5%88%97/bda71bd117674644bbe8c8c44c782aa3.png" alt="img"></p><p>上图中60入列后满载，可以看到置空位再次出现，但30➡40➡50➡60➡置空位 形成了逻辑上的闭环</p><p>细节2<br>从闭环的角度理解，front永远不可能在循环中超过rear，最多只能和rear相遇。</p><p>因为置空位的出现，rear不可能拉front一圈，也就避免了rear在超过front的情况下主动与front相遇</p><p>下图中的maxSize-1对应的就是置空位，rear是无法越过置空位的。只有front主动顺时针追赶上rear，它俩才会相遇，而此时队列内就没有元素，为空</p><p><img src="/2024/02/03/%E9%98%9F%E5%88%97/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Mjk2NDE3,size_16,color_FFFFFF,t_70.png" alt="img"></p><p> 细节3<br>队列的最大长度queueMaxsize&#x3D;数组容量arrayMaxSize-1  （由于置空位要占一位）</p><h2 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> RINGBUFF_LEN 256;</span></span><br><span class="line"><span class="comment">//定义一个缓冲区结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    u16 Head;           </span><br><span class="line">    u16 Tail;</span><br><span class="line">    u8 Ring_Buff[RINGBUFF_LEN];</span><br><span class="line">&#125;RingBuff_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*若想更灵活，可以用动态内存分配方式（如使用指针）来实现可变长度的缓冲区</span></span><br><span class="line"><span class="comment">typedef struct</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">u16 Head;</span></span><br><span class="line"><span class="comment">u16 Tail;</span></span><br><span class="line"><span class="comment">u8* Ring_Buff;</span></span><br><span class="line"><span class="comment">&#125;RingBuff_t;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">// 初始化函数，传入所需长度</span></span><br><span class="line"><span class="comment">void RingBuff_Init(RingBuff_t rbuff, size_t len)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    rbuff-&gt;Head = 0;</span></span><br><span class="line"><span class="comment">    rbuff-&gt;Tail = 0;</span></span><br><span class="line"><span class="comment">    rbuff-&gt;Ring_Buff = (u8)malloc(len * sizeof(u8));</span></span><br><span class="line"><span class="comment">    if (!rbuff-&gt;Ring_Buff) &#123;</span></span><br><span class="line"><span class="comment">    // 处理内存分配失败的情况...</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">在C语言中，u8* Ring_Buff; 是一个指向无符号8位整型（通常代表字节）的指针。它本身并不是一个数组，但可以用来指向一块内存区域，这块内存可以被当作数组来处理。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">当你通过 malloc 函数为 Ring_Buff 分配了足够长度的内存后，你就可以像操作数组那样对这块内存进行读写</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个ringBuff的缓冲区</span></span><br><span class="line">RingBuff_t ringBuff;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化环形缓冲区</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RingBuff_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//初始化相关信息</span></span><br><span class="line">   ringBuff.Head = <span class="number">0</span>;</span><br><span class="line">   ringBuff.Tail = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line">u8 <span class="title function_">Write_RingBuff</span><span class="params">(u8 data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(ringBuff.Head=(ringBuff.Tail+<span class="number">1</span>)%maxSize) <span class="comment">//缓冲区满</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> FLASE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ringBuff.Ring_Buff[ringBuff.Tail]=data;<span class="comment">//在Tail对应索引位写入数据</span></span><br><span class="line">    ringBuff.Tail=(ringBuff.Tail+<span class="number">1</span>)%RINGBUFF_LEN; <span class="comment">//ringBuff.Tail++; 防止越界非法访问</span></span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读数据</span></span><br><span class="line"><span class="number">10u</span>8 Read_RingBuff(u8 *rData)</span><br><span class="line"><span class="number">11</span>&#123;</span><br><span class="line"><span class="number">12</span>   <span class="keyword">if</span>(ringBuff.Head==ringBuff.Tail)<span class="comment">//判断非空</span></span><br><span class="line"><span class="number">13</span>    &#123;</span><br><span class="line"><span class="number">14</span>       <span class="keyword">return</span> FLASE;</span><br><span class="line"><span class="number">15</span>    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="number">16</span>   *rData = ringBuff.Ring_Buff[ringBuff.Head];<span class="comment">//先进先出FIFO，从缓冲区头出</span></span><br><span class="line"></span><br><span class="line"><span class="number">18</span>   ringBuff.Head = (ringBuff.Head+<span class="number">1</span>)%RINGBUFF_LEN;<span class="comment">// ringBuff.Head++;防止越界非法访问</span></span><br><span class="line">    </span><br><span class="line"><span class="number">20</span>   <span class="keyword">return</span> TRUE;</span><br><span class="line"><span class="number">21</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环形缓冲区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keil5</title>
      <link href="/2024/02/01/Keil5/"/>
      <url>/2024/02/01/Keil5/</url>
      
        <content type="html"><![CDATA[<h1 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h1><p><strong>转载自</strong>：<a href="https://blog.csdn.net/u012749085/article/details/126830777">https://blog.csdn.net/u012749085/article/details/126830777</a></p><p>实例调试：</p><p><a href="https://www.bilibili.com/video/BV1Jw411i7Fz?p=25&vd_source=a9d487fcf1a579639c6348eb5a9321db">https://www.bilibili.com/video/BV1Jw411i7Fz?p=25&amp;vd_source=a9d487fcf1a579639c6348eb5a9321db</a></p><p>9:25~11:05</p><h2 id="基本调试操作"><a href="#基本调试操作" class="headerlink" title="基本调试操作"></a>基本调试操作</h2><p>    首先点击”Debug-&gt;Start&#x2F;Stop Debug Session”或下图2位置，进入调试。<br><img src="/2024/02/01/Keil5/9261723051f340f5aeed4eb814510373.png" alt="9261723051f340f5aeed4eb814510373"><br>    如果前面工程配置里选择了复位调试，则进入调试后，会停在main函数头部<br><img src="/2024/02/01/Keil5/edca277b4e14435289c0f4b8d61f8129.png" alt="edca277b4e14435289c0f4b8d61f8129"></p><h3 id="复位（Reset）"><a href="#复位（Reset）" class="headerlink" title="复位（Reset）"></a>复位（Reset）</h3><p>对程序进行复位操作，根据烧录器不同的复位方式配置会触发不同的复位类型。<br><img src="/2024/02/01/Keil5/431db5f05a5a4f8a9241b3297ba354f7.png" alt="431db5f05a5a4f8a9241b3297ba354f7"></p><h3 id="全速运行（Run）"><a href="#全速运行（Run）" class="headerlink" title="全速运行（Run）"></a>全速运行（Run）</h3><p>：使当前程序开始正常全速运行，直到程序遇到断点时停止。<br><img src="/2024/02/01/Keil5/126e06525a784dd38a9254a7cc7439f0.png" alt="126e06525a784dd38a9254a7cc7439f0"></p><h3 id="停止运行（Stop"><a href="#停止运行（Stop" class="headerlink" title="停止运行（Stop)"></a>停止运行（Stop)</h3><p>当程序全速运行时，点击此按键可停止程序运行，停的是当前点击时的程序运行位置。<br><img src="/2024/02/01/Keil5/01978f3c724c4fe1ae60e9760eb4a47d.png" alt="01978f3c724c4fe1ae60e9760eb4a47d"></p><h3 id="单步调试（Step）"><a href="#单步调试（Step）" class="headerlink" title="单步调试（Step）"></a>单步调试（Step）</h3><p>根据当前调试的窗口的语言，执行单条语句。如果遇到函数，则会进入函数内部。如果是在反汇编窗口中，则只执行一条汇编指令。<br><img src="/2024/02/01/Keil5/4b6afae81ba943c08d0132be4bcf0dc5.png" alt="4b6afae81ba943c08d0132be4bcf0dc5"></p><h3 id="单步跳过调试（Step-Over）"><a href="#单步跳过调试（Step-Over）" class="headerlink" title="单步跳过调试（Step Over）"></a>单步跳过调试（Step Over）</h3><p>如果是在C语言窗口中，则是按单条语句执行，与单步调试不同的是，遇到函数不会进入函数内部，而是直接全速运行函数，并跳到下一条语句。<br><img src="/2024/02/01/Keil5/1733c1bed7fa4337a2518bdb4b7224a6.png" alt="1733c1bed7fa4337a2518bdb4b7224a6"></p><h3 id="单步返回调试（Step-Out）"><a href="#单步返回调试（Step-Out）" class="headerlink" title="单步返回调试（Step Out）"></a>单步返回调试（Step Out）</h3><p>如果是在C语言窗口中，则是直接全速运行当前函数后面所有内容，直到函数返回上一级。<br><img src="/2024/02/01/Keil5/0bb2a0a028a944878718e1acb6015ad8.png" alt="0bb2a0a028a944878718e1acb6015ad8"></p><h3 id="插入-移除断点"><a href="#插入-移除断点" class="headerlink" title="插入&#x2F;移除断点"></a>插入&#x2F;移除断点</h3><p>如果当前光标所在行未有断点，则插入断点（前提是当前行可以插入，如果无法插入会显示一个感叹号），在有断点的情况下则是移除断点。插入断点后，当前行前面会有个红圆表示断点位置。也可以通过直接点击红圆位置进行插入&#x2F;移除断点的操作。另一种断点方式，是通过指令来控制，当然也可以使用Keil提供的界面化操作，设置某个变量读或写时触发断点。不过目前貌似有部分芯片不支持这种操作。注：断点最多只能打7个。<br><img src="/2024/02/01/Keil5/5e09882eba154da695506d661cc6008a.png" alt="5e09882eba154da695506d661cc6008a"></p><p>    使能&#x2F;禁止断点：开启或禁止当前光标所在行的断点。禁止后红圆变成白圆。<br><img src="/2024/02/01/Keil5/c2a18ac2d197488c89d53693f22fb0be.png" alt="c2a18ac2d197488c89d53693f22fb0be"></p><p>    禁止所有断点：禁止当前所有的断点。<br><img src="/2024/02/01/Keil5/b42659b410604a88ab3c433d924b5aa6.png" alt="b42659b410604a88ab3c433d924b5aa6"></p><p>    删除所有断点：删除所有断点。<br><img src="/2024/02/01/Keil5/3c3c10be6e59420eb579ec7eb2a98972.png" alt="3c3c10be6e59420eb579ec7eb2a98972"></p><h2 id="调试窗口"><a href="#调试窗口" class="headerlink" title="调试窗口"></a>调试窗口</h2><h3 id="变量查看窗口"><a href="#变量查看窗口" class="headerlink" title="变量查看窗口"></a>变量查看窗口</h3><p>——Watch1，Watch2</p><p>    通过”View-&gt;Watch Windows-&gt;Watch1、Watch2”可以选择打开Watch窗口，也可以在工具栏<img src="/2024/02/01/Keil5/90b073560ba849b7ba3c658ad2c4f5cd-1.png" alt="90b073560ba849b7ba3c658ad2c4f5cd-1">这里打开。再点击一次则可以关闭。</p><p><img src="/2024/02/01/Keil5/76e14a916c584a70b49dc8a0136d4c23.gif" alt="76e14a916c584a70b49dc8a0136d4c23"></p><p>    通过选中一个变量，右键添加入对应的Watch窗口，可以追踪查看当前变量的变化状态。注意，只有全局变量可以全程监视，临时变量只有在进入当前函数中才可监视到其数据，用static关键词修饰的变量无法监视。<br><img src="/2024/02/01/Keil5/dbe562eff930488cb804bc827cdb04cf.gif" alt="dbe562eff930488cb804bc827cdb04cf"></p><p>    如果当前变量没有实时更新，则需要点击”View-&gt;Periodic Window Update”将其勾选上。<br><img src="/2024/02/01/Keil5/1265f5d49d684580ba808bbeb3ef554b.png" alt="1265f5d49d684580ba808bbeb3ef554b"><br>    在”Watch”窗口中，可以查看当前变量名称、值、数据类型，如果当前变量类型为结构体，则可以以对应的结构形式进行展开查看。<br><img src="/2024/02/01/Keil5/324b2248d8d84028a4c363d0f95ac1b7.png" alt="324b2248d8d84028a4c363d0f95ac1b7"></p><h3 id="内存查看窗口"><a href="#内存查看窗口" class="headerlink" title="内存查看窗口"></a>内存查看窗口</h3><p>——Memory</p><p>    通过”View-&gt;Memory Windows-&gt;Memory1&#x2F;2&#x2F;3&#x2F;4”打开Memory窗口，也可以通过工具栏Memory窗口<br>这个图标打开。打开的状态下再按一次则可关闭。</p><p><img src="/2024/02/01/Keil5/3ef3ddae558949199d25fbecaf1f27ac-1.png" alt="3ef3ddae558949199d25fbecaf1f27ac-1"><br>    在Memory窗口中输入想要查看内存的起始地址，另外右上角的锁可以把当前界面锁定下来。<br><img src="/2024/02/01/Keil5/e0e6df70592546a590f315a11de0e0f3.gif" alt="e0e6df70592546a590f315a11de0e0f3"><br>    另外如果查看的是Ram的地址，那其中的数据也可以直接通过此窗口进行修改。<br><img src="/2024/02/01/Keil5/1f94d24204584c39890962c5cdbedbf9.gif" alt="1f94d24204584c39890962c5cdbedbf9"></p><h3 id="系统视窗"><a href="#系统视窗" class="headerlink" title="系统视窗"></a>系统视窗</h3><p>——System Viewer Windows（这个根据不同芯片会有不同的展示）</p><p>    可以在”Peripherals”选项栏中选择”System Viewer”系统视窗中对应的外设，选择”Core Peripherals”则是内核调试窗口。另外系统视窗也可以通过工具栏中<img src="/2024/02/01/Keil5/1063891a98944597b35ab22eb677fe99.png" alt="1063891a98944597b35ab22eb677fe99">这个位置可以打开。<br>    这个窗口用于查看当前单片机外设及内核寄存器的值，在调试外设底层时经常会使用到。<br>    在这个窗口中可以直接修改外设寄存器的值，当然部分只读寄存器是无法修改的，有些则是需要在特定条件下才可以设置生效，具体就得看对应的芯片手册里寄存器的说明了。<br><img src="/2024/02/01/Keil5/4a171f6094dc4835a67b6bdb97da575e.gif" alt="4a171f6094dc4835a67b6bdb97da575e"></p><h3 id="调度关系窗口"><a href="#调度关系窗口" class="headerlink" title="调度关系窗口"></a>调度关系窗口</h3><p>——Call Stack Window</p><p>    可以在”View-&gt;Call Stack Window”打开此窗口，也可以在工具栏在这里插入图片描述这个位置打开 。<br>在这里插入图片描述<br>    这个窗口用于查看当前程序调度关系，当出现有进入硬件错误异常调试时可以快速定位到是哪里触发的异常。这个窗口是的调度关系是从当前程序堆栈里获取的数据并将其图形化，所以如果当前堆栈数据被破坏，则此窗口也将无法查看调度关系。<br>    该窗口里显示的调度关系是从下至上调用的，最上面的表示当前程序所处的函数。展开对应的函数，可以查看各层调用函数跳转之前保存的一些临时变量等信息。<br>在这里插入图片描述</p><h3 id="寄存器窗口"><a href="#寄存器窗口" class="headerlink" title="寄存器窗口"></a>寄存器窗口</h3><p>——Register Window</p><p>    该窗口可在”View-&gt;Registers Window”处打开，也可以在工具栏<img src="/2024/02/01/Keil5/abf2e937414b4dd581fc726c4b0c6813.png" alt="abf2e937414b4dd581fc726c4b0c6813">这个位置打开。</p><p><img src="/2024/02/01/Keil5/7e3a1bd9811247438e1bfcaf96d6fa2a.gif" alt="7e3a1bd9811247438e1bfcaf96d6fa2a">    这个窗口用于查看当前内核的相关寄存器，如汇编里常说的15个通用寄存器。当然调试中比较常用的是其中的SP、LR、PC三个寄存器。SP为当前栈的地址位置，PC为当前程序地址，LR为函数跳转前的地址，即当前函数返回的地址。<br><img src="/2024/02/01/Keil5/fb99ad40b4dd410abd262ceef2d86ea7.png" alt="fb99ad40b4dd410abd262ceef2d86ea7"><br>    另外”Banked”中的MSP为当前程序系统主栈，PSP则为操作系统的任务栈，这两者的区别是，如果使用了操作系统，则当前任务中的所有调度关系使用的是任务栈，而类似中断这种内核的操作使用的是主栈；如果未使用操作系统，则只会使用主栈，不会使用任务栈。<br><img src="/2024/02/01/Keil5/8f85703656554426acdf336f03d5fede.png" alt="8f85703656554426acdf336f03d5fede"><br>    通过”Internal”可以查看当前是处在中断还是任务中，Mode为”Thread”表示是在线程&#x2F;任务中，或者是函数中（非中断)，为”Handle”表示是在中断中；Privilege为”Privelege”表示当前处于特权模式。Stack为”PSP”表示当前使用的是任务栈，为”MSP”则表示使用的是主栈。<br><img src="/2024/02/01/Keil5/a0acc7b34aff41b4a887cd35ccf95afc.png" alt="a0acc7b34aff41b4a887cd35ccf95afc"></p><h3 id="反汇编调试窗口"><a href="#反汇编调试窗口" class="headerlink" title="反汇编调试窗口"></a>反汇编调试窗口</h3><p>——Disassembly Window</p><p>    该窗口在”View-&gt;Disassembly Window”中可以打开，也可以在工具栏中<img src="/2024/02/01/Keil5/afb0592b40264def8902fe7b7afd619a.png" alt="afb0592b40264def8902fe7b7afd619a">这个位置打开。<br><img src="/2024/02/01/Keil5/4590aac5e1c5439d9bae08e55b115af2.gif" alt="4590aac5e1c5439d9bae08e55b115af2"><br>    该窗口是通过bin文件反汇编出来的汇编文件（汇编跟二进制原本就是一一对应的关系）。当设置了优化等级后，部分C语言的调试会变得困难（汇编跟C语言不是一一对应，而程序运行又是完全根据汇编来走的)，此时可能需要使用汇编窗口进行调试。</p><h3 id="命令窗口"><a href="#命令窗口" class="headerlink" title="命令窗口"></a>命令窗口</h3><p>——Command Window</p><p>    该窗口在”View-&gt;Command Window”中可以打开，也可能在工具栏<img src="/2024/02/01/Keil5/9d7f28936ba24fb697579edf39d7ff4f.png" alt="9d7f28936ba24fb697579edf39d7ff4f">这个位置打开。<br><img src="/2024/02/01/Keil5/0d449233d79a467ba66edb0bd2e658c4.gif" alt="0d449233d79a467ba66edb0bd2e658c4"><br>    这个窗口可用来输入一些控制命令，比如保存输出当前内存地址等。在命令窗口中输入如下导出指令，按下回车即可导出数据</p><pre><code>save filename startAddr,endAddr</code></pre><p>filename：导出数据的文件名，无论后缀是什么，导出的格式都是十六进制文件。没有输入路径时，文件自动保存在当前工程根目录下。<br>startAddr, endAddr：需要导出数据的起始地址和结束地址，也可以通过表达式写出来。</p><p>例如：</p><pre><code>save ExportData.hex 0x08000000, 0x08000000+0x2000函数地址表——Symbols Window</code></pre><p>    该窗口在”View-&gt;Symbols Window”中打开，也可能在工具栏在这里插入图片描述这个位置打开。<br>在这里插入图片描述</p><p>    可以查看当前所有程序的函数调用关系及其所在地址。</p><h3 id="串口调试窗口"><a href="#串口调试窗口" class="headerlink" title="串口调试窗口"></a>串口调试窗口</h3><p>——Serial Windows</p><p>    该窗口在”View-&gt;Serial Windows”中打开，也可以在工具栏<img src="/2024/02/01/Keil5/9fd418aa9fb44e3f8a1fd5115405765e.png" alt="9fd418aa9fb44e3f8a1fd5115405765e">这个位置打开。<br><img src="/2024/02/01/Keil5/d502d6586ae2490bbe15f8bc2f578a83-1706774116563-42.gif" alt="d502d6586ae2490bbe15f8bc2f578a83"><br>暂未使用过，后续再添加。</p><h3 id="逻辑分析窗口"><a href="#逻辑分析窗口" class="headerlink" title="逻辑分析窗口"></a>逻辑分析窗口</h3><p>——Analysis Windows</p><p>    该窗口在”View-&gt;Analysis Windows”中打开，也可以在工具栏在<img src="/2024/02/01/Keil5/9537a7eb27a445cb87feb4df0e988650.png" alt="9537a7eb27a445cb87feb4df0e988650">这个位置打开。<br><img src="/2024/02/01/Keil5/7f19e574ef214902922c21804ac11166.gif" alt="7f19e574ef214902922c21804ac11166"><br>    这个貌似只能在软件模拟仿真中使用，如果使用硬件调试，需要硬件支持。</p><h3 id="跟踪窗口"><a href="#跟踪窗口" class="headerlink" title="跟踪窗口"></a>跟踪窗口</h3><p>——Trace Windows</p><p>    该窗口可以在”View-&gt;Trace Windows”中打开，也可以在工具栏<img src="/2024/02/01/Keil5/b96037874d53409dac4c3714eabcb0fc.png" alt="b96037874d53409dac4c3714eabcb0fc">这个位置打开。<br>暂时未使用过，后续再添加。</p><h2 id="调试应用"><a href="#调试应用" class="headerlink" title="调试应用"></a>调试应用</h2><p><strong>HardFault（硬件错误）</strong></p><p>    这个可以算是最常见的一个问题了，在开发过程中多多少少会遇到过程序死机的问题，而死机的大部分原因都是进入的HardFault中断，即常说的硬件错误中断。要想知道这个怎么调试，首先得清楚这是什么，怎么触发。<br>    触发原因：内存溢出，堆栈溢出，数组越界，中断错误，除0（在某些编译器下会有错误）等。前面三个，可以归结为都是内存异常操作导致，但因为其出现方式不一样，所以调试方式也不同。<br>    从现象反推，当出现这个错误时，第一时间查看函数的调度关系，看最后是死在哪个位置。如果不是堆栈溢出，一般来说是可以直接查到进入硬件错误前的最后执行的代码位置的。当然内存溢出跟数组越界也有可能导致无法查看调度关系，因为这个调度关系就是从程序运行栈里取出数据进行展示，所以当栈数据被破坏，则无法使用此方式进行调试。<br>    知道死机位置后（其实大概率就是因为某个异常指针的引用导致的问题），此时就去查找异常指针出现的原因。首先从逻辑层面看，异常指针是否是因为某个逻辑给指针赋了个错误值。<br>    其次是数据越界的角度来看，在Map文件中查找该指针的内存地址，查看其内存前后是否存在一些数组或结构体，然后去检查前后数组或结构体的操作是否存在下标溢出，指针偏移错误等问题。<br>    还有最后一种，就是直接从内存里获取数据作为指针地址进行引用，此类用法一般是在日志操作或GUI中比较常用，这种情况就要去内存数据来源是否存在问题。<br>    除以上三种可能性外，还有一种可能对一些人是涉及知识盲区的，就是引用地址没有地址对齐。这一部分是涉及内核的一些知识。这里简单讲下，对于M0内核，指针引用地址需要根据其引用的数据类型进行对齐。比如以下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> *p = <span class="number">0x20000001</span>;</span><br><span class="line">*p = <span class="number">20</span>;<span class="comment">/* 这句一执行就会导致异常 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一种是操作指针本身的地址没有4字节对齐，也会出现问题。如下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 实际这样子定义编译器会报错（在Keil中编译），这里只是为了直观表示 */</span></span><br><span class="line"><span class="type">uint32_t</span> *p __attribute__((at(<span class="number">0x20000001</span>)));</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">p = <span class="number">0x20000010</span>;<span class="comment">/* 这句一执行就会导致异常 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>复位</strong>    </p><p>复位有几种类型，一是看门狗复位，二是软件复位，三是硬件复位。复位类型可以通过芯片自带的复位寄存器进行查看。不过查看前需要手动清除所有复位标志，不然其复位标志会一直保留着。<br>    先讲下看门狗复位，当单片机开启看门狗后，很多问题都会变成复位问题，比如上面说的HardFault，因为HardFault也是一个中断，只是默认中断里是一个While(1)的死循环，所以当进入中断后，一段时间没有喂狗操作，就会触发复位。或者一些操作陷入死循环的，均是同理。这里我们把这一类问题都归为死循环问题。处理方式，先把看门狗关掉，然后调试看停在哪个死循环中，如果是HardFault，那就看上面硬件错误的处理方式。如果是其他死循环，那就看是什么条件触发的。死循环的问题相对来说比较好找。<br>    另外一种比较难处理的看门狗复位问题，莫过于某些操作时间过长，导致喂狗不及时。比如读写Flash时，通常会关闭中断，当大量读写时，其操作时间不可小靓，未开看门狗的情况下会有肉眼可见的程序卡顿，开了看门狗的情况下则通常会触发程序复位。这种类型的问题，通过关闭看门狗可能也无法定位到具体位置，因为程序还可以正常执行，只是在某些程序段会变得比较卡顿。对于这种问题，最好的方式是通过代码对比，通过对比原本没出问题的代码和出问题代码的差异性，锁定问题大体出现的位置，再通过程序执行时间进行估算。也可以借助一个独立的定时器，在一些时间操作较长的可疑之处计时。比如程序调用了某个底层未开源函数，那可以在调用前后打印定时器的计数，来计算函数运行的时间。当然也可以通过Keil自带的调试计数值来计算运行时间。<br>    软件复位就比较好找了，一般是需要人为调试内核的复位接口进行复位，所以只要查看是哪些位置触发的调用复位函数的条件就可以锁定问题点。<br>    硬件复位就只能从外围电路进行切入了，考虑干扰、连锡等问题。当然有些硬件复位是通过一个硬件看门狗进行复位的，如果是这种应用，那参考内部看门狗的问题排查方式。</p><p><strong>逻辑时序类调试</strong></p><p>    时序类的用断点调试法就很难做到了，特别是那种时序要求很严格的。就比如Modbus通信，协议是规定了一帧数据中每两个字节间隔时间不能超过1.5字符。所以想要在一帧数据中，按一个字节一个字节断点调试从机是不可能的，主机不会给你休息的时间。这时候就必须得添加一些测试代码了，添加测试代码最重要的一个原则，是不能变更原本的功能。所以一般在数据流向的关键路径上添加一些监控变量，通过监控变量的变化来识别时序是否出现错误。<br>    另外也可以使用逻辑分析窗口，把对应的变量添加进窗口中，通过时间变化查看变量对应的变化关系，以此来判断逻辑时序是否正常。</p><p><strong>内存调试</strong></p><p>    如果有涉及boot或日志记录功能的编写，那肯定会涉及大量内存的对比及调试，这时候可以利用上面提到的小技巧，在命令窗口那里输入save filename.hex StartAddr, EndAddr把对应的内存数据打印出来。</p><p><strong>底层外设调试</strong></p><p>    这个打开对应外设的寄存器界面，对着芯片用户手册查看每个寄存器的功能进行调试，只有对寄存器功能熟悉了才有对应的调试手段。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>1、有时候在watch窗口中，变量值不会刷新，这时候就需要查看一下”View-&gt;Periodic Window Update”是否已勾选，如果没勾选，变量只有在第一次添加或停止调试时才会刷新。另外当窗口里一次性加载了一个很大的数组，当展开数组时，变量刷新也会变得很慢，并且软件会变卡顿。</p><p>2、当选择了非0级优化时，调试可能会变得困难，具体表现在断点调试。比如现在下面的代码，代码优化的关系，有可能把case0、1、2里的return 1都合并成一行，导致运行调试时，无论当前程序进入了哪个分支，使用断点时都只会进其中一个。所以当开启代码优化等级后，需要注意断点调试将变得不可信。另外优化编译后，有部分代码也将无法打断点（被优化的代码）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (xx)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">&#123;</span><br><span class="line">do_something0();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">&#123;</span><br><span class="line">do_something1();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">&#123;</span><br><span class="line">do_something2();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时应该去看汇编的实现，其执行顺序与汇编一致。</p><p>3、目前发现有部分工程在一些电脑上调试时，打断点后在删除断点之前退出调试，会导致Keil崩溃，只能结束进程重启。</p><p>4、当开启内部看门狗并且未打开调试关看门狗功能时，停止运行一段时间后会复位。</p><p>5、在全速运行时，有时打断点会无效，取消断点也无效，貌似是Keil本身的问题。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vscode&amp;Keil</title>
      <link href="/2024/01/30/vscode-keil/"/>
      <url>/2024/01/30/vscode-keil/</url>
      
        <content type="html"><![CDATA[<p>前言：之前一直用的keil软件开发stm32的工程，越来越觉得keil的界面模糊不好看，于是尝试转移到vscode平台，目前实现的功能是cubemx生成工程文件后可用vscode打开并编译烧录，如果有调试需求还是在keil上。使用Vscode搭配keil，更加优雅的进行开发</p><p>对比图：</p><img src="/2024/01/30/vscode-keil/image-20240131162907970.png" alt="image-20240131162907970" style="zoom:67%;"><img src="/2024/01/30/vscode-keil/image-20240131162933189.png" alt="image-20240131162933189" style="zoom:60%;"><h1 id="1-安装MinGW"><a href="#1-安装MinGW" class="headerlink" title="1.安装MinGW"></a>1.安装MinGW</h1><p>把MinGW压缩包解压到常用的一个位置，</p><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p>右键此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;新建-&gt;添加，将MinGW的bin文件夹路径复制到新建的环境变量中。</p><h1 id="2-安装Keil-Assistant插件"><a href="#2-安装Keil-Assistant插件" class="headerlink" title="2.安装Keil Assistant插件"></a>2.安装Keil Assistant插件</h1><p>安装后，右键点击扩展设置，将你的keil软件的UV4.exe的路径粘贴上去</p><p><img src="/2024/01/30/vscode-keil/image-20240130220057873.png" alt="image-20240130220057873"></p><p>然后如果安装成功的话，vscode左栏就会出现</p><p><img src="/2024/01/30/vscode-keil/image-20240130220235274.png" alt="image-20240130220235274"></p><p>依次为编译，烧录，重编译</p><h1 id="3-遇到的问题"><a href="#3-遇到的问题" class="headerlink" title="3.遇到的问题"></a>3.遇到的问题</h1><p>1.点击编译后出现</p><p>“文件名，目录或卷标语法不正确”</p><p>然后发现是在添加路径到Keil Assistant时路径开头写错了</p><p>2.修复第一个问题后，再次编译，出现</p><p><img src="/2024/01/30/vscode-keil/%7BWEJS9SE%25J%7BMGCUP6EYHMG.png" alt="{WEJS9~SE%J{MGCUP6EYHMG"></p><p>解决：先打开settings.json文件</p><p><img src="/2024/01/30/vscode-keil/image-20240130221023430.png" alt="image-20240130221023430"></p><p>把代码中的[U+202A]删掉即可，到此，可以正常编译和烧录。</p><p>目前的功能满足现在的使用需求，后面有时间可以学习下用GCC编译链开发STM32，学习下makefile,cmake,openocd相关的知识。</p><p><a href="https://www.bilibili.com/video/BV1Hi4y1r7b3/?spm_id_from=333.999.0.0&vd_source=a9d487fcf1a579639c6348eb5a9321db">https://www.bilibili.com/video/BV1Hi4y1r7b3/?spm_id_from=333.999.0.0&amp;vd_source=a9d487fcf1a579639c6348eb5a9321db</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vscode&amp;Keil </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Robotics learning path</title>
      <link href="/2024/01/30/Robotics/"/>
      <url>/2024/01/30/Robotics/</url>
      
        <content type="html"><![CDATA[<p>转载自</p><p>机器人工程师学习计划 - YY硕的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/22266788">https://zhuanlan.zhihu.com/p/22266788</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><p>很多朋友私信问我对机器人和人工智能感兴趣，该怎么展开学习。最近稍微有点空，我写写我的看法。</p><p>两年前，我在知乎回答<a href="https://www.zhihu.com/question/20435673/answer/29927998">如何定义「机器人」？ - YY硕的回答</a>中试图给机器人做出一个比较仔细的定义，我觉得机器人和人工智能最大的区别在于是否要和物理世界进行交互。今年初在另一篇知乎回答里<a href="https://www.zhihu.com/question/36653316/answer/85774195">对机器人或人工智能的研究会帮助我们更好的了解人类自己吗？ - YY硕的回答</a>我说到传感器是和物理世界交互的基础。后来，我又在知乎回答<a href="https://www.zhihu.com/question/45766810/answer/100301388">有哪些与控制、机器人等相关的 quotes？ - YY硕的回答</a>中提到莫拉维克悖论（<a href="https://link.zhihu.com/?target=https://en.wikipedia.org/wiki/Moravec%27s_paradox">Moravec’s paradox</a>），谈到了机器人学里公认的难题是在物理世界中实现类人的活动能力。</p><p>把之前的回答再翻出来是为了支持以下观点：机器人学的核心问题是做好和物理世界的交互。现在主流的机器人学分支里，处理与物理世界的交互的学科分为三类：传感器和处理算法（激光雷达，多目视觉，融合算法）；多刚体系统动力学控制（工业机器人动力学控制和接触力控制）；机器人自主移动（locomotion不知道该怎么翻译，轮式、足式、飞行等移动机器人的研究）。我建议对机器人学有兴趣的同学着重在这几个问题上面。</p><p>另外，根据世界第一的机器人教育机构卡耐基梅隆大学的机器人学博士的课程分类方式（</p><p><a href="https://link.zhihu.com/?target=https://www.ri.cmu.edu/wp-content/uploads/2017/01/COSAug2016.pdf">https://www.ri.cmu.edu/wp-content/uploads/2017/01/COSAug2016.pdfwww.ri.cmu.edu/wp-content/uploads/2017/01/COSAug2016.pdf</a></p><p>），机器人学有四个核心领域：</p><ol><li>感知。视觉传感器、图像传感器、触觉和力传感器、惯导等。</li><li>认知。人工智能、知识表达、规划、任务调度、机器学习等。</li><li>行为。运动学、动力学、控制、manipulation和locomotion等。</li><li>数学基础。最优估计、微分几何、计算几何、运筹学等。</li></ol><p>结合卡耐基梅隆大学的核心课程要求，我觉得我定义的机器人学核心问题算是基本没跑偏的。本文后面谈到的机器人项目都是以上述观点和课程要求为基础。</p><p>一些可能有争议性的观点：</p><ol><li>机器人学是富人的活动。虽然工业越来越发达，但好的开发板和电机还是非常贵。如果要下定决心学习机器人学并且做出实物，你必须找到做实物出来的资金。要么是自己花钱，要么就得找学校的机器人社团，或者找什么愿意资助年轻人学习的贵人。另外现在没有任何一本完整的书可以教你怎么造一个四旋翼空中机器人或者大狗机器人，你需要参考十几本不同的教科书，这些书不管中文版还是英文版都很贵。</li><li>机器人学是屠龙之术。这话是Ninebot创始人说的。虽然最近几年，平衡车、扫地机器人、多旋翼飞行器让机器人学开始进入人们的生活，但是可行的商业应用还是很少，而且已有的机器人和理论都还很难解决好与物理世界交互这件事情。所以一定要确保自己在机器人学这个道路上同时练好了能去其他行当吃饭的技能，比如编程、机械设计和硬件设计。也要做好心理准备，接受自己有可能在学会屠龙之术以后几年都造不出对社会有用的东西的事实。</li><li>基于上述所说的观点，如果是已经工作之后才想要学习机器人的话，可能已经太迟了，因为很可能<strong>兴趣战胜不了客观限制因素</strong>。如果作为兴趣去学习，只能学到做巡线小车和舵机机械臂什么的，可能也满足不了中二病的创造欲。</li></ol><p>个人认为机器人学是一个艰苦的道路，想要成为一个独挡一面的机器人工程师需要多年理论和实践的同步训练。理论学习和动手实践的过程还要互相排好时间表，在做某个实践项目的同时去学习最相关理论往往可以达到事半功倍的效果，但是同时那些不太相关的理论会看起来非常枯燥，因此如何妥善安排自己的实践项目也是很重要的事情。</p><p>这篇文章里我计划介绍一个电子工程、机械工程和计算机专业学生从大学一年级到研究生二年级的机器人学习计划，基本是我对自己过去学习方式的一个总结。按照这个方法来学习，能够成为一个能力全面，但是稍微偏软件一点的机器人工程师。这个六年的学习计划，估算下来，全年中每天在上课和完成课程要求之外要投入学习时间6-8个小时，这些时间一方面用于阅读课程知识的英文教材，一方面用于阅读其他学科的教材，一方面用于实践项目。</p><p>机器人工程师在大型项目里的定位类似于飞机系统里的总体设计师。和机械工程师、硬件工程师、软件工程师、算法工程师、控制工程师比起来，机器人工程师参与某个具体技术的时间较少，但是能够听得懂所有工程师说的话，能够作为不同模块间的协调人，带领整个团队去攻坚。当然如果机器人工程师能够在一个领域达到那个领域的工程师的优秀水平，肯定更好。</p><p>由于时间仓促，再加上个人水平有限，文章中如有纰漏和错误，恭请读者指出，谢谢。如果同学还有什么想知道的内容和教材，也欢迎留言交流。</p><h2 id="大一"><a href="#大一" class="headerlink" title="大一"></a><strong>大一</strong></h2><p>刚上大一，你的机器人生涯开始了。先看看学校的校园网能不能翻墙，不能的话自己去买个一年一百多块钱的VPN，先确保自己能上Google，不要心疼VPN的钱，这能让你在之后的职业生涯里节省上万块钱。然后去注册一个gmail账号，再注册stackoverflow账号，再注册github的账号，再注册CSDN账号，注册完登录上去逛逛，暂时先不要问为什么。</p><p>英语水平一定程度上会是机器人工程师水平的限制因素，英语是同学们在大学最该努力学的一门课，而且不止要把它当成课，要当成一种技能，当成生活的一部分。当你开始努力学习一些高级的机器人知识以后，有可能会非常难以找到中文的参考资料，这个时候如果啃不下英文的资料，进步速度和眼界就会受到很大影响。因此大一的时候要多看看红宝书，看看美剧。</p><p>不管是什么专业背景的同学，大学一年级一定要上好的课是微积分和线性代数。线性代数的重要性需要特别强调。一般来说，<strong>优秀的工程师和科学家在职业生涯中要学至少五次线性代数</strong>，大一学一遍、学凸优化的时候学一遍、学线性系统的时候学一遍、学机器学习的时候学一遍……如果在第一遍学的时候就看到对的书，刷到对的题，那么以后的学习会轻松很多。</p><p>网上有很多对于如何学好线性代数的讨论，比如知乎问题<a href="https://www.zhihu.com/question/20534668">如何理解线性代数？ - 数学学习</a>。Matrix67大神的文章<a href="https://link.zhihu.com/?target=http://www.matrix67.com/blog/archives/4294">随记：我们需要怎样的数学教育？</a>也很有启发。我个人对学习线性代数的建议是两本书，一本叫做《Linear Algebra Done Right》，另一本叫做《Linear Algebra Done Wrong》（<a href="https://link.zhihu.com/?target=https://www.math.brown.edu/~treil/papers/LADW/book.pdf">https://www.math.brown.edu/~treil&#x2F;papers&#x2F;LADW&#x2F;book.pdf</a>），我比较喜欢的是Done Wrong这本书，第一它是免费的，第二只需要读前6章两百页就够了，第三它页边距很大，打印出来有很多空白做练习题。另外一个较好的教材是<a href="https://link.zhihu.com/?target=http://open.163.com/special/opencourse/daishu.html">麻省理工公开课：线性代数</a>。不论如何，学线性代数一定要用国外的教材，千万不要用国内的教材。啃英文书很累，但是考虑到之后还要啃更多的英文书，线性代数已经算是很入门的了，一定要啃下来，同时还要刷足够多的课后题。</p><p>学完线性代数以后，一个自然而然的问题就是怎么能用计算机自己去计算矩阵的乘法、向量的乘法、向量的内积。因此引入了编程的学习。</p><p>不管同学的专业是什么，一定要在大学一年级尽早开始学编程。至于用哪种语言开始学习编程，我推荐Python，比较好的教材是<a href="https://link.zhihu.com/?target=http://open.163.com/special/opencourse/bianchengdaolun.html">麻省理工学院公开课：计算机科学及编程导论</a>，比较好的Python开发学习环境是Anacoda (<a href="https://link.zhihu.com/?target=http://www.continuum.io/downloads">http://www.continuum.io/downloads</a>)。熟悉Python以后，同学就可以开始玩玩Python的数值计算包Numpy，这个时候线性代数题基本上也刷的差不多，可以通过Numpy帮助自己解决线性代数问题了。</p><p>对任何人来说，Python是一把瑞士军刀，你可以用他干很多东西，比如自动回复邮件、自动收集信息。但是真要去造机器人，合适的工具并不是瑞士军刀，而是C&#x2F;C++这样简单粗暴的锤子和螺丝刀般的工具。在学习Python学到一定程度的时候（比如你听说有一种叫做cython的东西），最好开始学习C，而且要强迫自己练习用C的一维数组和指针来实现矩阵的加法、乘法、求逆等操作。之所以有高级的Python或者Java（不要问我Java哪里高级了）这些语言以后我们还需要去学C，是因为机器人上常用的不是完整的电脑，而是计算量有局限的嵌入式系统，嵌入式系统开发基本只能用C或者更低级的语言。</p><p>学习C我个人入门用的是清华大学出版的《<a href="https://link.zhihu.com/?target=http://product.dangdang.com/8880276.html">C++语言程序设计</a>》。虽然这个书标题是C++，但其实没什么太大问题。不过国内的C语言教材都有个巨大的问题是不引导学生去用Linux。近年来更好的一个教材是<a href="https://link.zhihu.com/?target=http://songjinshan.com/akabook/zh/index.html">http://songjinshan.com/akabook/zh/index.html</a>，这个网站的教材非常好，因为他教育学生用Linux环境作为程序编译的环境，而且还引入了一些计算机体系结构的介绍。</p><p>IT行业的程序员都会争论高级语言和低级语言哪个好，Linux和Windows哪个好，而对于机器人工程师来说，从现在到可预见的未来里，C是最好的语言，Linux是最好的操作系统，这都毋庸置疑。甚至对于Linux的发行版该选哪个，我们都是很少有质疑的：Ubuntu（<a href="https://link.zhihu.com/?target=http://www.ubuntu.com/global">The leading OS for PC, tablet, phone and cloud</a>）。原因是机器人操作系统ROS（<a href="https://link.zhihu.com/?target=http://www.ros.org/">ROS.org | Powering the world’s robots</a>）是基于Ubuntu开发的，因此在Ubuntu上运行最稳定。注意Ubuntu出了一个中文版叫做Kylin，个人感觉比较坑，建议大家不要装中文版。Ubuntu 作为一个开源操作系统，总是在快速迭代，2016年8月比较稳定的版本是14.04和16.04，建议同学安装14.04。</p><p>当你把C学得差不多，开始要学写包含多个头文件的程序时，一定要同时学习makefile的知识。这时候要上网去搜“Makefile详解”（<a href="https://link.zhihu.com/?target=http://tieba.baidu.com/p/591519800">Makefile详解（超级好）_mingw吧</a>）这篇文章看。</p><p>我自己在大学一年级的时候还学习了HTML和Javascript，到大一结束的时候已经能够熟练用Javascript手写一些动态页面。我个人觉得HTML和Javascript也是机器人工程师必备的技术，而不只是软件工程师的玩具。这是因为web技术实际上已经渗透到了编程的方方面面，比如json开始是Javascript里的一种object定义的方式，但现在已经成为了一种很标准的数据交互、参数配置的格式。另外AJAX能够帮助初学者理解一定的网络技术原理，而网络技术也是机器人工程师必备的技能。再者，制作GUI（图形用户界面）是常规debug的办法，而近年来一个流行的趋势是用webkit嵌入程序用HTML和Javascript作为图形界面的后端，而在机器人操作系统ROS（<a href="https://link.zhihu.com/?target=http://www.ros.org/">ROS.org | Powering the world’s robots</a>）里，通过rosbridge可以非常方便地把机器人程序的数据传递到websocket上，这句话看不懂没关系，反正你知道学学HTML和Javascript很重要就是了。更重要的是，HTML文档背后的DOM (Document Object Model)深刻地体现了面向对象的思想。大学中的面向对象程序设计一般都讲C++，在我看来应该讲HTML和Javascript。这一点不细说了，如果同学们去学习HTML和Javascript，自然会体会到。学习HTML和Javascript比较好的资料是<a href="https://link.zhihu.com/?target=http://www.w3schools.com/">http://www.w3schools.com/</a>，把网站左侧的“Learn HTML”、“Learn CSS”、“Learn Javascript”和“Learn JQuery”学完就行，别的部分还有很多花哨的技术，没有必要去学了。为了培养自己对Javascript的兴趣，可以上<a href="https://link.zhihu.com/?target=http://threejs.org/examples/">three.js &#x2F; examples</a>跪着看看热闹。</p><p>以上介绍的这些知识点、书和资料应该在大一期间就全部看完，然后利用大一的暑假好好巩固这些知识。比如开始用HTML和Javascript做一个自己的个人主页，刷一刷编程的题目，学用Python的奇技淫巧（比方说做一个自己的个人主页）。另外还可以抽时间学学数学知识，比如开始看看代数和离散数学。我大一的时候看到了两篇文章，认识到了数学的重要性，一个是MIT的CV大牛林达华写的[<a href="https://link.zhihu.com/?target=https://www.douban.com/group/topic/11115261/">转]MIT牛人解说数学体系</a>，另一个是前Goolge研究员吴军博士写的《数学之美》（<a href="https://link.zhihu.com/?target=https://book.douban.com/subject/10750155/">数学之美 (豆瓣)</a>）。当时林达华还在MIT读博士，而《数学之美》还没有成书。两篇文章看完以后我感觉自己整个人对数学的认识上了一个新的层次，此后一直在注意提高自己的数学水平，几年下来觉得收益很大。在之后的介绍里我还会多次强调需要学的数学知识和对应的教材。</p><h2 id="大二"><a href="#大二" class="headerlink" title="大二"></a><strong>大二</strong></h2><p>上大二的时候，你已经会了基本的编程知识和基本的数学知识。大二这一年应该投入在嵌入式系统的学习中，同时继续拓展自己多方面的能力。学校的机器人社团，比如做Robocon，RoboMasters的团队应该在招新了，赶快去加入，有了学长学姐的指导以及同辈朋友的鞭策，应该会进步的快一点。</p><p>大二应该掌握的技能：Solidworks画基本的机械图，基本的数字电路知识、数模转换，51单片机、AVR单片机、STM32单片机原理，UART、SPI、I2C、CAN等协议的原理和数据收发，STM32开发板的使用，电机转动和驱动的原理，PID的原理，调试四轮机器人底盘的移动，基本的传感器如陀螺仪、码盘、红外线、超声波的原理和读取方式，网络知识如配置IP配置路由器等，微电子焊接，金工技术。我在知乎回答<a href="https://www.zhihu.com/question/34670420/answer/59676472">如果程序员每天都浅尝辄止地学一些不同的新技术，长久以往，人会变成什么样子呢？ - YY硕的回答</a>里谈过机器人工程师需要的技能数量是IT行业全栈工程师技能数量的三倍以上，这些技能的基础都应该在大二开始积累。</p><p>如果同学们的专业是机械工程相关，那么大二的时候要深入学习solidworks做图，买机械加工手册学习各种机械的奇技淫巧。你的专业知识还不足以让你进行缜密的受力分析，不过你可以尽量多做一些机械结构出来感受它们的乐趣。</p><p>如果同学们的专业是硬件、电路相关，那么大二的时候要深入学习Altium Designer做图、制板、焊板。你要从现在开始，就给自己积累一个工作记录，可以就是简单的txt文件，记录你做过所有板子的bug、解决方案、学到的原理图、PCB layout的注意事项等等。积累很多年以后，你的这个工作记录会值很多钱。</p><p>学习这些技能的最好的方式，就是参加自己学校机器人社团的训练和方案设计。一般来说，学校的机器人社团招新之后会有训练和测试，让新人分组去做机器人，这个过程中如果愿意努力学，提高得会很快。如果你所在的大学是机器人比赛强校，比如西安交通大学，电子科技大学，哈尔滨工业大学，华中科技大学，东北大学等等（排名不分先后，没有提到你们学校名字的话我表示抱歉），那么你很幸运，你们学校的机器人社团有很好的积淀，有很多资源可以帮助你学习。基本上只要天天泡实验室，保证自己每天只睡6-7个小时（但还是要多去跑步、游泳保持身体健康），勤于向学长学姐请教，那么一定会提高得很快。</p><p>大二阶段特别要强调的是对动手能力的培养，包括机械材料的加工、电路焊接、制作导线和接头、连接路由器、配置网络、做网线等等。机械加工的工具有螺丝刀、锯、钻、锤子、车床、铣床、钻床，进阶选手可以学一下氧焊，这个比较危险，我没尝试过；电路焊接的工具有焊机、焊锡、洗板水、松香、吸锡器；制作导线的工具有剪子、剥线钳、夹头钳、网线钳各种钳；网络配置就是连连路由器插插网线，但是Linux系统下配置网络有时会非常麻烦，一定要多积累这方面的知识，因为将来你造的机器人多半会顶着一个无线路由器跑来跑去，甚至有的机器人上各个模块自己就能组起一个小局域网。这些技能的熟练掌握需要你花很多时间去做真正能用的机器人来练手。</p><p>对于该选择造一个怎么样的“真正能用的机器人”练手，最好的选择肯定是机器人比赛中的机器人。如果参加Robocon，你会跟着学长学姐们学着造有人那么高的巨大机械；如果参加RoboMasters，你会学着造比汽车还要灵活的机器人以及快速发弹的机构。其他一些小型的比赛比如飞思卡尔智能车，也是很好的训练，因为飞思卡尔智能车已经发展得很成熟，参加这个比赛的参赛资料就够学一阵子的，学完以后能够获得比较多的机器人技能。</p><p>如果没有太多学校机器人社团的资源，同学们还有一些小型的比赛比如挑战杯、大创比赛等等可以选择，以三五个人的小团队参与这些比赛。如果同学所在的学校连这些比赛都不组织大家参与，那就只好自己花钱了。国内开源机器人社区有很多资源可以利用来学习，比如自己买<a href="https://link.zhihu.com/?target=http://www.makeblock.com/">Arduino STEM educational Robot kits Building Platform</a>的各种开发套件做简单的机器人。Arduino的开发环境可能有些人不喜欢，因为它对硬件做了一级封装，如果更希望接触到单片机的本质，可以自己买STM32开发板学习。俗话说，没有什么嵌入式系统是一块STM32实现不了的，如果有，就用两块。STM32是ARM Cortex‑M家族中最为广泛应用的一款单片机，在网上也有很多的教材和开发板可供选择。在国内著名的电子论坛<a href="https://link.zhihu.com/?target=http://www.amobbs.com/forum-3020-1.html">STM32&#x2F;8 分论坛帖子清单 (amoBBS 阿莫电子论坛)</a>上，有很多参考资料，有问题也可以在这里和大家讨论学习。</p><p>如果你很想参加机器人比赛，身边也恰好有一些志同道合的小伙伴，但是学校不支持。没关系，来找我，我尽量通过大疆的关系说服你们学校支持你们参加RoboMasters。</p><p>虽然你是以机器人比赛为主线在探索机器人技术，但是要时刻记得，机器人比赛给你的理论方面的训练很差，还会让你养成一些坏习惯，比如凡事都希望用一些糙猛快的办法来解决。由于通常整个团队都没有太多的项目管理经验，到比赛前一段时间才会加紧功夫去做机器人，很多时候就会用“山寨”的办法去处理机器人的故障。比如说某个承重结构用久了会弯，为了赶比赛的进度，就拿锤子敲直了、再加一条辅助的结构在旁边继续用，而没有细致地去做建模、受力分析，思考是什么原因导致承重结构会变形。再比如说调PID参数就是生调乱改，而没有基于机器人的动力学模型去估测参数的大概范围。</p><p>大二的暑假，有可能你跟着学校的机器人队参加了一些机器人比赛。这是一个反思总结的好时机，为什么机器人队取得了这样那样的成绩？整个团队怎样才能更有效率？明年如何继续招新？暑假要把时间花在技术积累上面，这个时候可以回头思考思考之前准备比赛时用糙猛快的办法解决的问题如何能够细致地去解决。</p><p>如果大二的暑假没有参加机器人比赛，可以做一个舵机机器人，比如6条腿的蜘蛛，比如码垛机器人。舵机是机器人工程师的好朋友，一定要好好掌握。</p><p>另外你其他方面的能力也不能落下。大二结束的时候，你的Linux应该用的很熟练了，除了makefile，你也用起了cmake。你也应该开始理解Github存在的意义，因为你已经上去读了很多别人的代码，你也把自己的一些课程设计和小项目放在了Github上面。另外大二基本上了本专业一些比较难的基础课程，比如自动控制原理、机器学习、概率统计、材料和力学等课程，同学们会看到这些课程里又用到了线性代数和微积分的知识，以及建模的知识。这时候可以把大一的物理、线性代数和微积分再翻出来看看。</p><p>同学的学校应该给大二到大三的学生有开设面向对象的程序设计，一般用Java或C++教授。在面向对象的程序课里面，一定要积累3000行左右的代码的开发经验。经典的面向对象程序设计的练习通常是写游戏，比如俄罗斯方块，吃豆人等等，一定要自己能够做到完全手写一个完整的项目出来。</p><p>另外你可以开始学习Matlab当中的神器Simulink了。在大二这一年的学习中，你可能在不少课程里多多少少用到了Matlab。假设你已经在我的推荐下喜欢上了Python，你可能会觉得Matlab的计算工具没有比Python强多少；假设你自己在别人的推荐下喜欢上了mathematica（<a href="https://www.zhihu.com/question/27834147">Mathematica 到底有多厉害？ - Wolfram Mathematica</a>），你可能会觉得和Mathematica这种神一样的语言比起来，Matlab弱爆了。但是要注意的是，Matlab最强大的工具是Simulink，通过它你几乎可以仿真一切的物理系统和控制系统。我建议同学可以通过Simulink实现一个倒立摆，然后理解Matlab的强大之处。对此我强烈推荐一个很好的教材（<a href="https://link.zhihu.com/?target=http://ctms.engin.umich.edu/CTMS/index.php?example=Introduction&section=SimulinkControl">http://ctms.engin.umich.edu/CTMS/index.php?example=Introduction§ion=SimulinkControl</a>），它详细介绍了一些经典的控制系统如何分析以及用Simulink实现。然后我再强烈推荐一个讲Simulink里面一个更加和物理仿真贴近的工具Simscape（<a href="https://link.zhihu.com/?target=http://www.mathworks.com/help/control/examples/control-of-an-inverted-pendulum-on-a-cart.html">Control of an Inverted Pendulum on a Cart</a>）的文章。阅读并实现了这两篇文章里的内容，同学应该会对倒立摆有了比较深刻的认识。倒立摆是机器人学中一个非常重要的模型，因为火箭、导弹、双足机器人、四足机器人，基本都是倒立摆的变形。你自己实现出来的simulink模型一定要存好，以后可能还会再拿出来仔细看。</p><p>如果你按照我之前说的方法探索了一些HTML和Javascript的技术，那么JQuery，bootstrap，AngularJS你已经多多少少知道是怎么回事了。web后端的技术，比如PHP和MySQL，也可以了解一下，LAMP要学会怎么配置。如果有同学找你帮忙写小网站，尽量去帮个忙，帮别人做网站是提高自己系统编程能力的好练习。在做网站的过程中你可能还会顺便学一学如何用Photoshop和Illustrator让网站显得更漂亮。这些技能有最好，没空学也没关系。</p><h2 id="大三"><a href="#大三" class="headerlink" title="大三"></a><strong>大三</strong></h2><p>大三开始的时候，你可以在学校的机器人队里担任重要角色了，或者能够带领一个小团队参加小型的机器人比赛。你在系里甚至院里都小有名气了，可能有的人叫你大神，有的人觉得你技术还不错。但是一定要记得你现在的水平放到别的地方应该不算什么。每年我都往大疆的RoboMasters夏令营招进100个和你现在的水平相当的同学。</p><p>大三一定要培养出自己一个人独立造出一个完整机器人的能力，比如一个Robocon水平的机器人，或者一个RoboMasters的战车，或者一个四旋翼飞行器。</p><p>Robocon水平的机器人，涉及大量的机械设计，单片机开发，电机驱动的开发，码盘和超声波等传感器的读取，底盘运动学的计算，PID调试，任务调度逻辑的调试，舵机控制。RoboMasters的战车的机械部分简单一些，但是还需要进行云台的控制、发弹系统的控制、功率控制等方面的知识，另外你也可以不搞这些部分，学习学习视觉识别和自动打击，那么就要开始研究OpenCV（<a href="https://link.zhihu.com/?target=http://opencv.org/">OpenCV | OpenCV</a>）了。</p><p>四旋翼飞行器的机械部分最简单，但是算法比较复杂。对于大三学生来说，从零开始一步到位写一个稳定的飞控比较困难，因为飞控里面有很多细小的知识点要注意。目前我没有发现什么比较好的书籍推荐，已有的一些关于四旋翼系统的书要么太浅（上来就教你焊电路），要么太深（上来就教你state estimation），听说 <a href="https://www.zhihu.com/people/liu-top">@Liu Top</a>的exbot小组在写一个教材，我是非常期待的。学习四旋翼飞行器有下面几个步骤：</p><p>第一步：自己调一个小四轴飞起来</p><p>现在开源社区的人言必pixhawk，其实我觉得从学习的角度来说，pixhawk太贵，而且不适合学习，我比较推荐的是 <a href="https://link.zhihu.com/?target=https://chiplab7.taobao.com/">首页-第七实验室</a> 这家淘宝店卖的STM32F405飞控，买回来以后自己再随便买个机架（比如大疆F450）、接收机和遥控，就能按照飞控板附带的学习资料、调试软件飞起来。</p><p>第二步：看硬件图、读代码</p><p>chiplab7的飞控板附带一大堆学习资料，对加速度计、陀螺和磁感计都有很仔细的解释，硬件链路图也很详细。chiplab7淘宝掌柜的又很认真负责，我学用的时候，发现代码有bug和看不懂的地方，都可以直接找掌柜问。</p><p>看完代码以后，对一个飞控系统的基本模块：姿态解算、控制解算、混控输出、遥控器处理、嵌入式处理就很明白了。然而这里面有很多技术是需要另外学习的。除了基本的嵌入式编程以外，还有要把大二大三学的信号处理方面的知识再捡起来看看。因为飞行器在空中有振动，会让加速度计产生噪声，为了把这些噪声去除掉，需要对加速度计给出的信号做低通滤波处理，如何选择滤波器的参数呢？如果滤波滤得太狠，延迟就会比较大，对控制的表现会有影响；如果滤波滤得不够，可能会有一些低频的噪声偶尔会出现，导致加速度计的观测不能用。另外最重要的是要理解姿态解算和控制解算这两块知识。chiplab7的飞控板的代码采用的是最简单的互补滤波算法做为姿态解算模块，然后控制解算是对欧拉角的三个角度做闭环PID控制，基本都是基础的基础了。</p><p>第三步：小修小改加深理解</p><p>chiplab7的飞控是靠气压计定高的，飞行效果非常奔放。这时候可以淘宝买个20块钱的超声波模块，然后自己写个高度环去稳定飞控的定高表现。</p><p>我觉得这个过程至关重要，因为高度控制相对来说是个比较直观理解PID控制的方式，而且chiplab7的飞控加高度控制非常好加。工作量不大，因为改善效果很显著，所以可以让人很有成就感，加深继续学习的乐趣。</p><p>第四步：理解核心的数学和控制知识</p><p>这一部分大三是肯定来不及学的，但是我还是在这里列出来，因为这些知识你之后都需要慢慢学，我也会在之后不断重复提到这些知识点。</p><p>姿态解算和控制解算涉及的知识有：</p><ol><li>刚体姿态的表示、运动学方程和动力学方程。主要是对牛顿-欧拉方程的认识和理解、刚体姿态的欧拉角表示法、姿态与角速度的关系等等。</li></ol><p>这部分说复杂不复杂，说简单也不简单，我同样是没有找到一本完整的书全都介绍过的，是学了好几个不同的书和论文以后搞明白的。现在看起来是从维基百科入手比较靠谱。</p><ol start="2"><li>自动控制原理。讲PID的书和文章就多了去了，没有太多复杂的书。</li><li>线性估计基本原理。其实就是互补滤波：<a href="https://link.zhihu.com/?target=http://www.pieter-jan.com/node/11">Reading a IMU Without Kalman: The Complementary Filter</a> 。拿这个关键词百度各种搜就会了。</li></ol><p>第五步：重头开始造轮子</p><p>知乎著名网友vczh曾经说过，学习要抱着勇于造轮子的心态才能进步。所以在熟悉了别人飞控基础上，可以自己重头造一个飞控的轮子。可以自己从芯片开始重新画一个飞控板，读读STM32的芯片手册、读读各种传感器的芯片手册，自己手画一个飞控的原理图、做PCB layout、制板自己焊元件，全套花不了1000块钱，能够加深很多对硬件的理解。这一部分如果大三没空，也可以不搞了。</p><p>制造整个机器人的过程中要特别重视文档的积累。在你大三末期，你可能随着学校的机器人队备战比赛，你可能主力负责一台机器人。你应该自己列一个excel表格，把机器人用了几颗螺丝，几根导线，每个零件的规格是什么，都列出来。这个表格一方面可以用来帮助团队管理机器人的物料，一方面也是你自己的经验技术积累，将来你做的其他机器人可能多多少少都是Robocon、RoboMasters机器人的变形。</p><p>另一个积累是建一个自己的buglist，buglist包括什么呢，可以像冷大这样：<a href="https://www.zhihu.com/question/46824735/answer/115202408?from=profile_answer_card">做控制、机器人等算法工程师是怎样一种体验？ - 冷哲的回答</a>，就简单把一些自己的发生过的问题和最后的解决办法罗列下来。比如说“杜邦线接插位不稳固容易脱开，接好后应该用电工胶布再裹一圈”，“外发给淘宝加工的机械图纸，要特别注意和加工商沟通有没有漏掉一些细节，如沉头螺丝孔，关键的倒角”等等。你也可以帮其他机器人的问题也做这样的记录。buglist可以就是一个简单的文本文件，如果你一直往里面积累自己工作中的记录，等你将来工作了，这个文件可能会值很多钱。</p><p>大三的时候学校应该会开设软件工程的课程。不管你是不是这个专业，上不上这门课，都应该主动去听一听，甚至跟着课程的设计作业一起做一做。软件工程我觉得是机器人工程师必须具备的意识，因为一个机器人系统里涉及大量的硬件系统和软件功能，软件的部分往往还会涉及不同的语言、不同的编译环境、不同的开发工具链。几个人合作的话，大家的专业背景、编程习惯都不相同，这就导致不同的代码和模块之间的协议沟通非常复杂，必须尽早用UML和其他软件工程的工具帮助团队理解和互相沟通。</p><p>大三的时候学校应该还会开设操作系统原理和嵌入式系统原理的课程，而大二的时候讲过计算机组成原理（所谓的微机原理）。从大三开始同学需要开始体会实时操作系统和非实时操作系统的区别、原理以及使用时需要注意的地方。这是一个比较杂的知识点，我目前没有找到很好的教材去介绍。在STM32上，有freeRTOS，uCOS，Vxworks这么几种实时操作系统；Linux是一种非实时操作系统，但是可以通过打补丁变成实时操作系统。这些操作系统的细节在机器人开发中都会多多少少被涉及到，同学们可以随时上Google和CSDN去查大神们的介绍。</p><p>另外特别重要的一点是机器人系统里的嵌入式平台都有烧坏的可能性，有可能在某个嵌入式Linux平台上面辛辛苦苦写了一个多月代码，这个平台突然烧坏了，代码也就丢了。因此你的机器人如果有嵌入式Linux系统在里面，一定要尽早顶起来路由器，代码定时提交SVN或者git。</p><p>大三的暑假你可能会作为学校机器人队的主力去参赛了。备战比赛和参赛是一件磨练心性的事情。我在学生时代体会过和胜利擦肩而过的痛苦，体会过没机会再来一年的遗憾；也在负责大疆RoboMasters比赛的过程中被那些痛苦和遗憾的学生当做发泄的对象，非常有感触。我觉得参加机器人比赛，很努力，然后失败了，是一件让人快速成长的事情。同学如果有机会，一定应该参加至少一届机器人比赛。</p><p>大三的暑假你也可以选择来参加大疆的RoboMasters夏令营，关于夏令营大家可以看这个知乎问答了解更多：<a href="https://www.zhihu.com/question/49986388">参加Robomasters 2016夏令营是怎样一种体验? - DJI 大疆创新</a>。每年我们都在全国范围内寻找有一定技术基础的学生，让他们一起分组做一个自动机器人的挑战。这个夏令营，作为组织负责人，不谦虚地说，我觉得应该是全世界范围内最好的技术类夏令营。</p><p>大三的暑假有一件很重要的事情就是思考自己大四应该干什么。一般来说，你现在的能力保本校研究生肯定没有问题，当然你也可以选择考其他学校的研究生或者出国留学。虽然说你现在能力已经很全面了，但是你还需要2-3年的时间全面提升自己更多的能力，才能迈向卓越之路。不管是出国还是保研，最重要的目的是给自己争取到未来2-3年能够在一个优秀的环境中安心提升自己，有比较好的学习资源，能够参与到一些不错的项目中去。可能其他有些行当，出国留学始终是比在国内待着更好的选择，但是机器人行业并不是这样。我们国家这两年在机器人方面提高也很快，而且我们国家现在比较有钱。就像我开始说的那样，机器人是富人的活动，现在你在国内也能找到一些很有钱的实验室可以造比较牛逼的机器人。另外国外很多比较强的机器人公司也都在做比较敏感的军方项目，去找实习可能比较受限制。</p><p>出国去学机器人学方面的知识你有很多不错的选择，比如世界第一的机器人研究院卡耐基梅隆大学，或者麻省理工学院的CSAIL实验室。北美传统计算机四大名校（麻省理工学院，卡耐基梅隆大学，斯坦福大学，加州大学伯克利分校）里，除了斯坦福大学热火朝天在搞人工智能以外，其他几个学校的机器人研究都很不错。除了四大名校，你还有很多其他的选择，就像我开始说的那样，机器人是富人的活动，如果想接触到最好的机器人资源，你要选择有钱的实验室，而不是有名的实验室。</p><p>另外你还需要在大三的尾巴上选定自己将来的细分研究方向，而且开始往这个方向深挖，也就是我在文章开始提到的感知、认知、行为几个方向。当然同时你也不能放松其他方面的知识，尤其是数学基础。我在大三的暑假专门找数学系的同学给我开了个数学小讲座，学习了一点抽象代数的知识，对我后来学习密码学帮助很大。同时我也读了一些拓扑方面的教材（有一本很神奇的书叫做Topopogy Without Tears <a href="https://link.zhihu.com/?target=http://www.topologywithouttears.net/">http://www.topologywithouttears.net/</a>），这样才理解了为什么数学分析要用奇怪的符号去解释一些看起来很浅显的道理。</p><p>大三阶段的机器人工程师该学什么基础数学是众说纷纭的，在我看来，你要基本掌握“群是什么”，能够用代数的眼光去证明”det(AB) &#x3D; det(A)det(B)”，还要能理解“用一张纸就可以变出克莱因瓶”（当然是在四维空间里）。另外，你这个时候也要能够意识到自己需要再学一遍线性代数。</p><h2 id="大四"><a href="#大四" class="headerlink" title="大四"></a><strong>大四</strong></h2><p>大四开始了，你可以开始深挖自己的研究方向，同时也要开始学一些高级一点的通用技术和理论，这时候你和一般的机械、电子、计算机学生就不太一样了，你虽然也在狂编程，但也在狂学习物理和数学。通用技术包括ROS，simulink，gazebo和Vrep等工具。通用理论包括，再学一遍线性代数，学学凸优化、数值计算、旋转表示法等方面的知识。这些知识你在大四仅仅只能开一个头，因为你的大四要实习、毕业、考研、毕设，你会非常地忙。有些人会在大四进实验室和老师发论文，我个人觉得发论文这件事没必要操之过急。你的整个大学期间应该用在广泛涉猎各种各样的知识上面，而不是深入某一个细小的研究问题。</p><p>大四可以开始读一些著名入门书籍，我把这些书不分先后地列出来，你没有必要全部去读，而且每本书先读前几章就够了，能读多少尽量读多少。</p><ol><li>概率机器人学，<a href="https://link.zhihu.com/?target=https://www.amazon.com/Probabilistic-Robotics-Intelligent-Autonomous-Agents/dp/0262201623">https://www.amazon.com/Probabilistic-Robotics-Intelligent-Autonomous-Agents/dp/0262201623</a></li><li>凸优化，<a href="https://link.zhihu.com/?target=https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf">https://web.stanford.edu/~boyd&#x2F;cvxbook&#x2F;bv_cvxbook.pdf</a></li><li>线性系统理论，<a href="https://link.zhihu.com/?target=https://www.amazon.com/Linear-System-Electrical-Computer-Engineering/dp/0199959579">https://www.amazon.com/Linear-System-Electrical-Computer-Engineering/dp/0199959579</a></li><li>Multiple View Geometry in Computer Vision，<a href="https://link.zhihu.com/?target=http://www.robots.ox.ac.uk/~vgg/hzbook/">Multiple View Geometry in Computer Vision</a></li><li>线性估计，<a href="https://link.zhihu.com/?target=https://www.amazon.com/Linear-Estimation-Thomas-Kailath/dp/0130224642">https://www.amazon.com/Linear-Estimation-Thomas-Kailath/dp/0130224642</a></li><li>《机器学习》，周志华老师的书。</li><li>An Invitation to 3-D Vision，<a href="https://link.zhihu.com/?target=https://www.eecis.udel.edu/~cer/arv/readings/old_mkss.pdf">https://www.eecis.udel.edu/~cer&#x2F;arv&#x2F;readings&#x2F;old_mkss.pdf</a></li><li>Modern Control Systems，<a href="https://link.zhihu.com/?target=https://www.amazon.com/Modern-Control-Systems-12th-Richard/dp/0136024580">https://www.amazon.com/Modern-Control-Systems-12th-Richard/dp/0136024580</a></li><li>Rigid Body Dynamics，<a href="https://link.zhihu.com/?target=http://authors.library.caltech.edu/25023/1/Housner-HudsonDyn80.pdf">http://authors.library.caltech.edu/25023/1/Housner-HudsonDyn80.pdf</a>。说实话刚体动力学理论我没有找到特别好的书。但是刚体动力学理论很重要。</li><li>Feedback Systems: An Introduction for Scientists and Engineers，<a href="https://link.zhihu.com/?target=http://www.cds.caltech.edu/~murray/amwiki/index.php/Main_Page">FBSwiki</a></li></ol><p>就像我开始说的那样，这些书，大部分特别贵，还好有一些业界良心的作者放出了他们书的电子版。当然你也可以去一些名字都不能说的网站去找影印版。</p><p>在读上面这些书的时候，matlab，python都要放在手边，然后把书里面的知识尽量实践出来。很多教科书里都会在章节后面的习题里放一些写明是用matlab做的习题，要尽量多做一些这样的题。</p><p>你可能早就听说了ROS的大名，但是最好不要在大四之前去碰它。因为ROS用了很多操作系统和网络的底层技术。我在知乎回答<a href="https://www.zhihu.com/question/21958225/answer/20255931">高手可以谈谈ROS机器人操作平台开发的一些经验吗？ - YY硕的回答</a>里有简单的介绍。ROS的设计目标是把机器人的控制和传感器处理的软件和它的硬件隔离开，用上ROS以后，你可以方便地用到很多能直接跑的软件代码。但是ROS从入门到精通需要至少一年以上的时间，你必须不断地用，不断地尝试新的代码和硬件，才能对它熟悉起来。</p><p>ROS的可视化工具Rviz里面对于机器人旋转的表示用的是四元数，而在你之前研究四旋翼飞行器时，里面的代码表示旋转用的是欧拉角，做姿态解算用的可能是四元数。这个时候要开始有意识地去学习旋转表示法之间的区别和联系。</p><p>要重视大四期间的实习和毕业设计。很多大四的学生毕业设计都会非常颓地做一下，我觉得是不好的。要把做毕业设计的过程看做一个正式的项目。这个项目除了做好技术方面的工作，也要做好展示方面的工作。中国工程师的一大特点是，不会表达自己，可能做的东西水平很高，但是做出PPT就会犯字体花哨不正式、一页上面字太多，图文没有联系等表达上的问题。通过PPT介绍、展示自己的成果在工程师的职业生涯的任何一个阶段都非常重要，它甚至也一定程度上限制了机器人工程师能够达到的高度。只有能够把自己的成果清晰地表达给自己的团队，才能获得其他人的反馈、通过沟通提高团队的整体凝聚力和知识水平，这样自己在团队能够获得更多的认可，有助于团队整体工作效率的提高。我每年去参加几次学术会议，都在会议上感觉到一些中国的科研人员走到国际上以后，演讲能力很差就会导致他们的科研成果不受重视。当然其他国家的科研人员也是这样。</p><p>为了写出美观的技术报告和毕业论文，你可以开始学习Latex。Latex作为国际国内第一写作神器，学习资料在网上有很多。Latex的学习和使用同样也是需要不断地熟能生巧，多写多练就熟悉了。写毕业论文有个问题是怎么做出精美的矢量图，我推荐<a href="https://link.zhihu.com/?target=https://inkscape.org/en/">Draw Freely | Inkscape</a>，一个比Illustrator更轻量化、但是有些功能反而更强大的免费软件。</p><p>对于那些想申请出国留学的同学，你要做一个自己个人的成果展示，用网页的形式呈现比较好。把自己Github链接（如果你按我说的，大学第一天就申请Github账号，现在已经是一个三年的老油条了）、做过的机器人视频、写过的技术报告和文章（最好是英文的）放在上面。</p><p>关于毕业设计的选题，我推荐这么几个：</p><ol><li>手写双目视觉里程计。涉及到图像处理、特征匹配、位置解算、空间变换等等。</li><li>手写四旋翼飞行器基于GPS的轨迹规划。涉及到深挖四旋翼飞行器的运动原理、IMU原理、轨迹生成和优化等。</li><li>造一个被推了也不会倒的双足舵机机器人。涉及到舵机控制、倒立摆建模、动力学分析、PID控制、IMU原理等。</li><li>深度学习训练一个小车追人跑。涉及到深度学习工具包使用、数据集采集、数据集分析、小车控制等。</li><li>机械臂给人端茶倒水。这个相对来说土豪一点，因为能直接拿来用的机械臂都很贵，这个要看实验室有没有条件了。涉及到多自由度机械臂原理的学习、工具包的使用、轨迹规划等等。</li></ol><p>这几个项目要做好，都要持续投入三个月以上的时间以及一定的资金，每一个都是理论多于实践。当然同学们自己也可以自己选择自己的毕业设计题目，但是最好还是选做出来能跑能飞的东西，同时避免选择需要花大量时间去拧螺丝、焊板子的题目，尽量买现成的电机、开发板、3D打印结构，大四要多给自己留时间去看书和写代码。</p><p>大四到研究生之前的暑假，最好去一些比较不错的机器人公司实习一下，比如说大疆。当然你也可以继续做机器人比赛，比如RoboMasters和大疆的飞行器比赛。</p><h2 id="研究生一年级"><a href="#研究生一年级" class="headerlink" title="研究生一年级"></a><strong>研究生一年级</strong></h2><p>研究生的时候，你的目标比较清晰了，就是做一种机器人至少两年时间，并从中发掘出可以发表论文的知识点。上面我给出的书单里面，你要开始精读里面的几本。</p><p>如果做机器人视觉定位、传感器融合方面的研究，1、4、5、7四本书一定要精读。</p><p>如果做控制系统的研究，3、8、9、10一定要精读。</p><p>如果做规划算法的研究，那么还要读其他偏CS一些的书，比如讲A* search，random forest，图论方面知识的教材。由于我在这方面造诣不深，就不托大了。</p><p>如果学习随机系统的控制和最优控制，除了1、2、3，还要读一本神书Stochastic models estimation and control（<a href="https://link.zhihu.com/?target=https://www.cs.unc.edu/~welch/kalman/media/pdf/maybeck_ch1.pdf">https://www.cs.unc.edu/~welch&#x2F;kalman&#x2F;media&#x2F;pdf&#x2F;maybeck_ch1.pdf</a>）。</p><p>如果研究机器人视觉定位，几种常用的定位算法：PTAM（<a href="https://link.zhihu.com/?target=http://www.robots.ox.ac.uk/~gk/PTAM/">Parallel Tracking and Mapping for Small AR Workspaces (PTAM)</a>），ROS的标配VO（<a href="https://link.zhihu.com/?target=http://wiki.ros.org/viso2_ros">viso2_ros - ROS Wiki</a>），SVO（<a href="https://link.zhihu.com/?target=https://github.com/uzh-rpg/rpg_svo">GitHub - uzh-rpg&#x2F;rpg_svo: Semi-direct Visual Odometry</a>），LSD-SLAM（<a href="https://link.zhihu.com/?target=http://vision.in.tum.de/research/vslam/lsdslam">http://vision.in.tum.de/research/vslam/lsdslam</a>）ORB-SLAM（<a href="https://link.zhihu.com/?target=https://github.com/raulmur/ORB_SLAM2">GitHub - raulmur&#x2F;ORB_SLAM2: Real-Time SLAM for Monocular, Stereo and RGB-D Cameras, with Loop Detection and Relocalization Capabilities</a>），都必须自己学习之后全部跑一遍。只会用OpenCV的函数和这些工具包并不能说明你会视觉定位，必须要能自己手写出一个能用的才算。国内有一个很厉害的SLAM专家叫高翔，他的博客要关注一下：<a href="https://link.zhihu.com/?target=http://www.cnblogs.com/gaoxiang12/tag/%E6%9C%BA%E5%99%A8%E4%BA%BA/">机器人 - 标签</a>。由于SLAM这两年很火，研究的人很多，所以网上可以参考的资料也很多，比如<a href="https://link.zhihu.com/?target=https://github.com/hcdth011/ROS-Hydro-SLAM">https://github.com/hcdth011/ROS-Hydro-SLAM</a>，就在ROS上实现了几种定位算法的对比。</p><p>我现在非常不建议同学们选择从四旋翼飞行器的动力学控制里找问题作为研究课题。因为四旋翼飞行器的特点已经被研究透了。目前国际上对多旋翼飞行器的研究主要集中在造一些奇葩形状的飞行器，以及给多旋翼飞行器上安装一个机械臂去做力控制，这样做就对多旋翼飞行器控制的动力学造成了一些影响。因此需要同学对动力学和多自由度机械臂控制有比较深的认识。</p><p>自动导航和驾驶是这两年的热点，一方面汽车的自动化是大势所趋，另一方面多旋翼飞行器异军突起，产生了很多对自动飞行的需求。除了机器人视觉定位算法以外，同学还需要学习其他的传感器，以及这些传感器与视觉定位算法怎么融合。这里面有很多坑，比如计算量的问题，怎么保证融合算法不崩，怎么处理传感器的延时等等，都需要同学结合自己的项目去踩，坑踩得多了才能成长。如果大家想找一个多旋翼飞行器平台研究自动导航，我推荐大疆的M100，我已经在知乎回答<a href="https://www.zhihu.com/question/31586826/answer/65274168">RoboMasters2015夏令营是怎样的？ - YY硕的回答</a>里吹过一波M100，前面说过的今年夏令营的知乎回答<a href="https://www.zhihu.com/question/49986388">参加Robomasters 2016夏令营是怎样一种体验? - DJI 大疆创新</a>里也有人帮我吹了一波。</p><p>一些大学里学过的知识点，是必须结合研究生期间的项目的需求弄得很清楚的，比如三大变换（傅里叶变换，拉普拉斯变换，Z变换），旋转表示法（欧拉角、四元数、旋转矩阵），数值计算怎么防止矩阵出现数值问题等等。除了自己的项目，还需要把凸优化、卡尔曼滤波还有多自由度机械臂的控制学习一下。这三个领域的知识，是任何一种机器人都会用的到比较难的知识。</p><p>凸优化和凸优化的各种变形是非常重要的知识，因为各行各业里的研究问题，多半是会建立一个优化问题去解决的。上面提到的《Convex Optimization》<a href="https://link.zhihu.com/?target=https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf">https://web.stanford.edu/~boyd&#x2F;cvxbook&#x2F;bv_cvxbook.pdf</a>，也是一本神书，同学们一定要认真读一读。Matlab、Python、C++都有一些现成的工具包可以帮助你解优化问题，不过最好同学们能自己手写一些基本的优化算法，比如gradient descend，barrier method等等。另外现在主流的SLAM算法，后端都是通过一种叫做g2o的优化算法来出效果的。而且g2o能够整合bundle adjustment 和structure-from-motion这两大计算机视觉里的关键问题，可以说是一种很好的计算思想了，非常有必要学习一下g2o。</p><p>卡尔曼滤波在上面书单里的1和3都有提到，同时在神书Stochastic models estimation and control（<a href="https://link.zhihu.com/?target=https://www.cs.unc.edu/~welch/kalman/media/pdf/maybeck_ch1.pdf">https://www.cs.unc.edu/~welch&#x2F;kalman&#x2F;media&#x2F;pdf&#x2F;maybeck_ch1.pdf</a>）也有相当多的篇幅。卡尔曼滤波有好几种证明的方法，同学最好能自己学会1-2种。</p><p>多自由度的机械臂的难点在于机械臂的运动学正反解、运动学控制和动力学控制，基本是一个建模分析和数值算法实现的问题。如果你所在的学校没有一个财力雄厚的机器人实验室的话，你基本上没有机会接触到多自由度的机械臂。这时候之前学到的Simulink和就要学的Gazebo就派上用场了，你可以用Simscape里面的刚体搭一个多自由度机械臂，然后通过Simulink仿真去学习机械臂的控制；也可以用Gazebo的URDF语言写一个机械臂，然后通过Gazebo和ROS的接口去控制机械臂；也可以用ROS里面的著名工具包<a href="https://link.zhihu.com/?target=http://moveit.ros.org/">MoveIt! Motion Planning Framework</a>，不过MoveIt的问题是，他只能仿真运动学，而不能仿真动力学。工业领域对多自由度的机械臂控制通常用一个叫做D-H表示法的建模工具（<a href="https://link.zhihu.com/?target=https://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters">Denavit</a>），这个东西我并不太会。我只会向同学们推荐我导师的著作《A mathematical introduction to robotic manipulation》（<a href="https://link.zhihu.com/?target=http://www.cds.caltech.edu/~murray/books/MLS/pdf/mls94-complete.pdf">http://www.cds.caltech.edu/~murray&#x2F;books&#x2F;MLS&#x2F;pdf&#x2F;mls94-complete.pdf</a>）。</p><p>有一个非常神奇的事实：《A mathematical introduction to robotic manipulation》这本机械臂控制领域的著名教材的第二章和计算机视觉领域的著名教材《An Invitation to 3-D Vision》的第二章基本是一样的，都在讲旋转表示法。这是因为所有的旋转表示法都可以归纳为一种优雅的李群结构：SO(3)群。而计算机视觉和机械臂控制都涉及到理解刚体的旋转，事实上用计算系统去观测和控制所有的刚体构成的系统，理解旋转都是很关键的问题。旋转表示法应该作为研究生阶段的一个重要学习的知识点。</p><p>李群和李代数是刚体旋转表示背后的数学理论，如果想要深挖一些，可以看这篇文章An elementary introduction to groups and representations的前50页（<a href="https://link.zhihu.com/?target=http://www.cmls.polytechnique.fr/perso/renard/Hall_Group.pdf">http://www.cmls.polytechnique.fr/perso/renard/Hall_Group.pdf</a>）。这是我自己读着觉得最好的文章，当然网上也有很多其他的介绍。</p><p>研究生阶段还要培养的一个能力是借助各种工具仿真机器人系统的能力。显然地，很多机器人系统真的造出来的话造价昂贵，需要在实际制造之前写一个比较真实的仿真系统出来测试算法。我觉得做仿真系统的能力直接衡量了机器人工程师的技术水平。当你开始要搭一个仿真系统的时候，第一步是通过欧拉方程和牛顿方程确定刚体的运动特点，甚至要自己写刚体二阶微分方程；第二步是确定刚体之间的互联关系，设计不同类型的关节，如果有软性连接需要加入弹簧阻尼模型；第三步是确定被仿真的刚体系统会不会和外界产生碰撞或者其他形式的力，如果有的话，需要设计合适的接触力和摩擦力仿真的模型。多旋翼飞行器的仿真是很简单的，不需要考虑什么接触力。但是多自由度机械臂基本都需要仿真接触力，不和物理世界去交互的机械臂只有很小的实用意义。而能够自行运动locomotion系统，比如双足、多足机器人，则涉及到更多的接触力，多到接触力都会影响仿真系统的数值稳定性。搭建一个仿真系统需要很强的系统建模能力和数值分析的能力，虽然Simulink、Gazebo、Vrep提供了不同程度的工具简化你的工作，但是要让仿真系统能够稳定运行，必须要能深入其中的细节。有些看起来很高大上的仿真工具，比如Nvida的PhysX，在仿真的时候是忽略掉科里奥利力的，如果不理解仿真的本质，可能就会忽略这一个重要的缺陷。</p><h2 id="研究生二年级"><a href="#研究生二年级" class="headerlink" title="研究生二年级"></a><strong>研究生二年级</strong></h2><p>你的学习计划接近尾声。现在你已经进入了一个很好的状态：看到一个机器人，能够很果断地分析出它用了什么传感器、执行器、计算平台大概是什么量级，他的执行机构能够承受多少力量。看到一个新的算法，能够大约判断清楚它的执行流程，在什么环节做了优化。看到一个新的没学过的知识，能够分析出它和你以前学过的什么知识有联系，你还需要再学什么才能弄明白这个知识点。</p><p>研究生二年级要深化第一年学到的那些技术和知识，要做到完整地读过四五本书，五十篇以上的论文。你已经积累了几万行代码的经验，也能熟练地谈论谁家的电机回差小，谁家的电机线性程度好。</p><p>你这个时候可以去写作一些论文，也可以开始学习一些更高级的技术和工具，比如用FPGA和GPU优化算法、魔改Linux内核、玩玩液压系统、了解更多机器学习的知识比如强化学习等等。你也可以从计算机图形学或者计算力学里面找到一些帮助你更好进行机器人仿真和系统分析的工具。由于你懂很多机器人方面的知识，你可以给学校的机器人队做指导，或者带队参加一些比较有挑战性的机器人比赛。</p><p>写到这里，我就不可能给出很多不同领域的指导了，因为随着学习的进一步深化，我自己熟悉的领域也在收缩。我只能对几个领域给出我的意见。</p><p>对视觉定位和传感器融合来说，SLAM急需新的突破，目前通过几何约束去实现loop closure看起来已经走入了死路，没法有更多的发展了，下一步可行的方向是与深度学习进行结合。具体的一些介绍可以阅读行业中大牛的一篇文章<a href="https://link.zhihu.com/?target=http://www.computervisionblog.com/2016/01/why-slam-matters-future-of-real-time.html">http://www.computervisionblog.com/2016/01/why-slam-matters-future-of-real-time.html</a>，记述了几个业界大牛们最新的观点。传感器融合技术，目前还有很多问题可以探索，因为传感器的延时、不均匀的信号，会给定位系统造成困扰，如何去除这些干扰，需要建立比较复杂的非线性优化问题，具体可以关注香港科技大学Shaojie Shen的工作。</p><p>对于多自由度机械手和机器人的locomotion来说，这里面还有非常多可以探索的研究问题。我前面提过接触力和摩擦力很难仿真，大神告诉我现在没有任何一种工具和理论能把接触力和摩擦力正确仿真出来，因此如何在机器人系统里妥善处理对这些力的控制，就是很难的问题了。现在业界的一个前沿发展方向，也是利用机器学习技术来帮助机器人学会处理这些外力，不过人类目前最优秀的多自由度机器人系统，Berkeley的Brett机器人，叠几块积木就要用十分钟（<a href="https://link.zhihu.com/?target=http://news.berkeley.edu/2015/05/21/deep-learning-robot-masters-skills-via-trial-and-error/">New ‘deep learning’ technique enables robot mastery of skills via trial and error</a>），显然还有很多提升的空间。这方面的问题同学可以关注知乎大神</p><p><a href="https://www.zhihu.com/people/70bcce80353eccd2938cbfa2ac856aab">@戴泓楷</a></p><p><a href="https://www.zhihu.com/people/0eeca981bb238839881694643181fa91">@周佳骥</a></p><p>。</p><p>最后我想再强调一遍表达能力的重要性。你可以从自己带的课程和机器人队入手，把自己这几年来学过的知识做成PPT讲给学生们听，然后让他们给你反馈。多做这样的练习，提升自己做演讲的能力，这将来会让你受益匪浅。</p><p>研究生二年级之后，你可以准备进机器人公司工作了，也可以根据你自己感兴趣的研究方向申请博士接着努力。由于你已经掌握了广博的知识和技能，你的职业生涯将会大有作为。</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a><strong>结束语</strong></h2><p>我从2008年展开自己的机器人生涯。那一年波士顿动力刚刚发布他们的大狗机器人，Python还是很小众的语言，Ubuntu 8.04还很不稳定，Chrome还没有多少人知道。在之后的几年中我目击了深度神经网络的复兴，看到波士顿动力的机器人日渐强大，经历了ROS的起源和繁荣，帮助了大疆的崛起，深深为这个产业的未来感到激动。我希望这篇文章能够帮助更多的年轻人进入机器人学的海洋，为未来机器人学的继续发展贡献力量。</p>]]></content>
      
      
      <categories>
          
          <category> 机器人学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Robotics learning path </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FreeRTOS</title>
      <link href="/2024/01/29/FreeRTOS/"/>
      <url>/2024/01/29/FreeRTOS/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="86b027461dbd953a5288bd9afb8c942a93193e67a9df89f2767e19dcce2bc026"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FreeRTOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog Building</title>
      <link href="/2024/01/28/blog-building/"/>
      <url>/2024/01/28/blog-building/</url>
      
        <content type="html"><![CDATA[<p>前言：之前一直想搭个博客，但是本身自己专业也不是学计算机的，从0开始搭建网站对于我的学习成本较高，就不了了之了，偶然发现了基于hexo框架+github的方式来搭建博客，参考了很多教程及视频，不是一帆风顺，也有好几次要放弃了，最后还是遇到问题就解决问题，到网上查资料，经过几天的努力,最后搭建了这个博客，目前差不多是个雏形，后面还会继续优化，在此写下这篇文档，记录下当时参考的一些资料文档。</p><h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><p>参考教程</p><p><a href="http://t.csdnimg.cn/ocJp5">http://t.csdnimg.cn/ocJp5</a></p><p><a href="http://t.csdnimg.cn/8707P">http://t.csdnimg.cn/8707P</a></p><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">//清除缓存文件（包括生成的静态文件和草稿）。</span></span><br><span class="line"></span><br><span class="line">hexo g     <span class="comment">//生成静态文件，即将你的文章、页面等转换为 HTML 等静态文件。</span></span><br><span class="line">    </span><br><span class="line">hexo s<span class="comment">//启动服务器，用于预览博客效果。</span></span><br><span class="line"></span><br><span class="line">hexo d<span class="comment">//部署博客到指定的服务器，比如 GitHub Pages 或者 CSDN 等。</span></span><br></pre></td></tr></table></figure><h2 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h2><p>参考教程：</p><p><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><p><a href="https://blog.csdn.net/mjh1667002013/article/details/129290903">https://blog.csdn.net/mjh1667002013/article/details/129290903</a></p><p>【使用Hexo搭建个人博客手摸手教学(8)|butterfly主题页面配置】 <a href="https://www.bilibili.com/video/BV1Fb4y1r7ja/?share_source=copy_web&vd_source=4eaa4760820b4cda603e510d556578ac">https://www.bilibili.com/video/BV1Fb4y1r7ja/?share_source=copy_web&amp;vd_source=4eaa4760820b4cda603e510d556578ac</a></p><p>【【Hexo】2023年零基础玩转Hexo全网最全系列】 <a href="https://www.bilibili.com/video/BV1QD4y1F7pc/?share_source=copy_web&vd_source=4eaa4760820b4cda603e510d556578ac">https://www.bilibili.com/video/BV1QD4y1F7pc/?share_source=copy_web&amp;vd_source=4eaa4760820b4cda603e510d556578ac</a></p><h3 id="常用功能"><a href="#常用功能" class="headerlink" title="常用功能"></a>常用功能</h3><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">&quot;我的第一篇博客&quot;</span> <span class="comment">//新建一篇文章。</span></span><br></pre></td></tr></table></figure><p>​然后打开D:\Hexo\source\ _posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。<br>​你可以会直接在vscode里面编写这个markdown文件，可以实时预览，也可以用用其他编辑md文件的软件的工具编写。<br>​编写完markdown文件后，根目录下输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到github上。这时打开你的github.io主页就能看到发布的文章啦。</p><h4 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h4><p>修改<strong>主题</strong>配置文件 <code>_config.butterfly.yml</code>（在你用的那个主题的文件夹里的config文件修改）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">menu:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">list||fas</span> <span class="attr">fa-list:</span></span><br><span class="line">    <span class="attr">link:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">    <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br><span class="line">  <span class="attr">Picture:</span> <span class="string">/gallery</span> <span class="string">||</span> <span class="string">fa-solid</span> <span class="string">fa-image</span></span><br></pre></td></tr></table></figure><p>最左侧的即是展示在网站右上侧的导航栏的各栏的名称,右边是对应的md文件,可以在其中修改该界面的信息</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: zhixiong<span class="number">&#x27;</span>s page<span class="comment">//网页标题</span></span><br><span class="line">date: <span class="number">2024</span><span class="number">-01</span><span class="number">-25</span> <span class="number">20</span>:<span class="number">30</span>:<span class="number">52</span></span><br><span class="line">type: <span class="string">&quot;tags&quot;</span></span><br><span class="line">top_img: <span class="string">&quot;./images/3.jpg&quot;</span> <span class="comment">//该网页最上方的图片</span></span><br></pre></td></tr></table></figure><p>然后后面的fa fa-link这种，是导航栏各个栏目的图标, 以及侧方个人信息栏社交图标，可在<a href="https://fontawesome.com/">https://fontawesome.com/</a> 查找使用。</p><h4 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h4><p><strong>上传图像</strong></p><p><em>网页图像</em></p><p>例 archive_img: <a href="http://www.xf5z.com/uploads/2013010764676533.jpg">http://www.xf5z.com/uploads/2013010764676533.jpg</a>   (右键图片，点击复制图片地址)</p><p><em>本地图像</em></p><p>index_img: “.&#x2F;images&#x2F;1.jpg”   (在source里建了个images文件夹，里面存放图片)</p><p><strong>Typora与hexo图片上传问题</strong></p><p><a href="https://www.cnblogs.com/yinyoupoet/p/13287385.html">https://www.cnblogs.com/yinyoupoet/p/13287385.html</a></p><p><strong>相册</strong></p><p><a href="https://www.bilibili.com/video/BV1Fw411Q7pS/?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&vd_source=a9d487fcf1a579639c6348eb5a9321db">https://www.bilibili.com/video/BV1Fw411Q7pS/?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&amp;vd_source=a9d487fcf1a579639c6348eb5a9321db</a></p><p><a href="https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A%E5%9C%96%E5%BA%AB">https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A%E5%9C%96%E5%BA%AB</a></p><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><p><a href="https://blog.csdn.net/qq_45173404/article/details/122877378">https://blog.csdn.net/qq_45173404/article/details/122877378</a></p><p>取消当前页面评论:</p><p>在md文件中加上comments: false</p><h4 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h4><p><a href="https://butterfly.js.org/posts/507c070f/?highlight=apla">https://butterfly.js.org/posts/507c070f/?highlight=apla</a></p><h4 id="自定义侧边栏"><a href="#自定义侧边栏" class="headerlink" title="自定义侧边栏"></a>自定义侧边栏</h4><p><a href="https://butterfly.js.org/posts/ea33ab97/#widget-%E6%8E%92%E5%BA%8F">https://butterfly.js.org/posts/ea33ab97/#widget-%E6%8E%92%E5%BA%8F</a></p><h4 id="动态彩带"><a href="#动态彩带" class="headerlink" title="动态彩带"></a>动态彩带</h4><p>好看的彩带背景，会飘动。<br> 修改主题配置文件<code>_config.butterfly.yml</code>。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">canvas_fluttering_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># false 手机端不显示 true 手机端显示</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="文章分类"><a href="#文章分类" class="headerlink" title="文章分类"></a>文章分类</h4><p><a href="http://t.csdnimg.cn/Uc0Uy">http://t.csdnimg.cn/Uc0Uy</a></p><p>把文章归入分类只需在文章的顶部标题下方添加<code>categories</code>字段，即可自动创建分类名并加入对应的分类中。</p><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>把文章添加标签只需在文章的顶部标题下方添加<code>tags</code>字段，即可自动创建标签名并归入对应的标签中 。</p><p>eg:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: Embedded C language</span><br><span class="line">date: <span class="number">2024</span><span class="number">-01</span><span class="number">-26</span> <span class="number">19</span>:<span class="number">04</span>:<span class="number">36</span></span><br><span class="line">description: C语言在单片机编程的一些重要应用</span><br><span class="line">comments: <span class="literal">true</span></span><br><span class="line">categories:</span><br><span class="line">- embedded</span><br><span class="line">tags:</span><br><span class="line">- C language programming</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Embedded C language</title>
      <link href="/2024/01/26/Embedded-C-language/"/>
      <url>/2024/01/26/Embedded-C-language/</url>
      
        <content type="html"><![CDATA[<h1 id="嵌入式C语言与算法"><a href="#嵌入式C语言与算法" class="headerlink" title="嵌入式C语言与算法"></a>嵌入式C语言与算法</h1><p><img src="/2024/01/26/Embedded-C-language/image-20240115231828910.png" alt="image-20240115231828910"></p><p><img src="/2024/01/26/Embedded-C-language/image-20240115232323794.png" alt="image-20240115232323794"></p><h2 id="单片机预备知识"><a href="#单片机预备知识" class="headerlink" title="单片机预备知识"></a>单片机预备知识</h2><h3 id="数制"><a href="#数制" class="headerlink" title="数制"></a>数制</h3><p>（一）十进制数，ND</p><p>数集：0、1、2、3、4、5、6、7、8、9。</p><p>规则：逢十进一。</p><p>表示：十进制数的后缀为 D 且可以省略。</p><p>计算：十进制数可用加权展开式表示。10为基数，10的幂次方称为十进制数的加权数。<br>（二）二进制数，NB</p><p>数集：0、1。</p><p>规则：逢二进一。</p><p>表示：二进制数的后缀为 B 且不可省略。</p><p>计算：二进制数可用加权展开式表示。2 为基数，2 的幂次方称为二进制数的加权数。<br>（三）十六进制数，NH</p><p>数集：0、1、2、3、4、5、6、7、8、9、A、B、C、D、E、F。</p><p>规则：逢十六进一。</p><p>表示：十六进制数的后缀为 H 且不可省略。</p><p>计算：十六进制数可用加权展开式表示。16 为基数，16 的幂次方称为十六进制数的加权数。<br>（四）八进制，NO</p><p>数集：0、1、2、3、4、5、6、7。</p><p>规则：逢八进一。</p><p>表示：八进制数的后缀为 O 且不可省略。</p><p>计算：八进制数可用加权展开式表示。8 为基数，8 的幂次方称为八进制数的加权数。</p><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><img src="/2024/01/26/Embedded-C-language/image-20250110151325988.png" alt="image-20250110151325988" style="zoom:50%;"><p> （一）二、八、十六进制转换为十进制之</p><p>利用上述<strong>加权展开式</strong>计算。</p><p><img src="/2024/01/26/Embedded-C-language/image-20250108120433505.png" alt="image-20250108120433505"><img src="/2024/01/26/Embedded-C-language/image-20250108120457205.png" alt="image-20250108120457205" style="zoom:50%;"></p><p>（二）十进制转换为二进制，八进制，十六进制</p><p>一般用<strong>连除法</strong></p><p><img src="/2024/01/26/Embedded-C-language/image-20250108120638117.png" alt="image-20250108120638117" style="zoom:40%;"><img src="/2024/01/26/Embedded-C-language/image-20250108120649353.png" alt="image-20250108120649353" style="zoom:40%;"><img src="/2024/01/26/Embedded-C-language/image-20250108120706048.png" alt="image-20250108120706048" style="zoom:40%;"></p><p>（三）二进制，八进制，十六进制间的相互转换 </p><p>1.二进制于八进制之间的转换</p><p>三位 二进制数 可以表示 一位 八进制数。</p><p>36O &#x3D; 011 110B      111 101 011B &#x3D; 753O<br>2.二进制于十六进制之间的转换</p><p>四位 二进制数 可以表示 一位 十六进制数。</p><p>36H &#x3D; 0011 0110B          1001 0011 0101 1111B &#x3D; 935F H</p><p><img src="/2024/01/26/Embedded-C-language/image-20250108124217917.png" alt="image-20250108124217917"></p><h3 id="有符号数"><a href="#有符号数" class="headerlink" title="有符号数"></a>有符号数</h3><p>实用数据有正数、负数之分，在计算机中用一位二进制数来区分：“0”代表“+”符号，“1”代表“-”符号。</p><p>符号位：这位数通常在二进制数中的最高位，称为符号位。</p><p>有符号数对应的真实数值称为真值。因符号位占一位，故有符号数的形式值不一定等于其真值。</p><p>例如，有符号数0111 1011B(形式值为123)的真值为+123，而有符号数1111 1011B（形式值为251）的真值为-123。</p><p><em><strong>有符号数具有 原码、反码、补码 三种表示法</strong></em>。</p><h4 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h4><p>有符号数的原始表示法，<strong>最高位为符号位</strong>，“0”代表“+”符号，“1”代表“-”符号，其余为数值部分。</p><p>8位二进制原码范围1111 1111B—0111 1111B（-127—+127）。</p><p>对于无符号数 对应的范围是从0000 0000-1111 1111 (0-255 )。</p><img src="/2024/01/26/Embedded-C-language/image-20250109135049996.png" alt="image-20250109135049996" style="zoom:30%;"><h4 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h4><p>正数的反码与原码相同；</p><p>负数的反码，符号位不变，数值部分各位取反。</p><h4 id="补码（计算机中都是补码）"><a href="#补码（计算机中都是补码）" class="headerlink" title="补码（计算机中都是补码）"></a>补码（计算机中都是补码）</h4><p>正数的补码与原码相同；</p><p>负数的补码，符号位不变，反码数值部分加一</p><p><strong>有符号数计算时，使用补码进行计算（用原码，反码计算会有错误，补码可以修复这个错误）</strong>，计算结果再求补，得到最终结果。</p><img src="/2024/01/26/Embedded-C-language/image-20250107171100886.png" alt="image-20250107171100886" style="zoom:80%;"><img src="/2024/01/26/Embedded-C-language/image-20250108130205227.png" alt="image-20250108130205227" style="zoom:33%;"><img src="/2024/01/26/Embedded-C-language/image-20250108130217882.png" alt="image-20250108130217882" style="zoom:40%;"><p><img src="/2024/01/26/Embedded-C-language/image-20250109134626575.png" alt="image-20250109134626575"></p><img src="/2024/01/26/Embedded-C-language/image-20250109135511329.png" alt="image-20250109135511329" style="zoom:40%;"><img src="/2024/01/26/Embedded-C-language/image-20250109135554838.png" alt="image-20250109135554838" style="zoom:80%;"><img src="/2024/01/26/Embedded-C-language/image-20250109135816331.png" alt="image-20250109135816331" style="zoom:80%;"><h3 id="位、字节和字"><a href="#位、字节和字" class="headerlink" title="位、字节和字"></a>位、字节和字</h3><p>（一）位（bit）b</p><p>比特，二进制数中的一位，是计算机内部数据存储的<strong>最小单位</strong>。</p><p>一个二进制位只可以表示 0 和 1 两种状态。<br>（二）字节（Byte）B</p><p>拜特，1 字节由 8 个二进制位构成（1B &#x3D; 8bit）。是计算机数据处理的<strong>基本单位</strong>。</p><p>B 可代“字节”使用。注意区分二进制数 B 。</p><p>KB可代“千字节”使用。 <strong>1KB &#x3D; 1024 B</strong> 。64KB &#x3D; 1024B * 64 &#x3D; 65536B<br>（三）字</p><p>计算机一次存取、加工和传送的数据长度称为字。</p><h3 id="BCD码"><a href="#BCD码" class="headerlink" title="BCD码"></a>BCD码</h3><p><img src="/2024/01/26/Embedded-C-language/image-20250108101835009.png" alt="image-20250108101835009"></p><h3 id="ASCII码"><a href="#ASCII码" class="headerlink" title="ASCII码"></a>ASCII码</h3><p>计算机中使用的字母、字符要用特定的二进制数表示。</p><p><img src="/2024/01/26/Embedded-C-language/image-20250108102550572.png" alt="image-20250108102550572"></p><p>0-&gt;48D A-&gt;65D a-&gt;97D</p><p>同一字母大小写相差32D，化为16进制为20H</p><p>简述C语言中的基础知识<br>    1).数据类型(常用char, short, int , long, signed, unsigned, float, double, sizeof)<br>    2).运算和控制( &#x3D;, +, -, *, while, do-while, if, else, switch, case, continue, break)<br>    3).数据存储(static, extern, const, volatile)<br>    4).结构(struct, enum, union, typedef)<br>    5).位操作和逻辑运算(&lt;&lt;, &gt;&gt;, &amp;, |, ~, ^)<br>    6).预处理(#define, #include, #if…#elif…#else…#endif等)</p><img src="/2024/01/26/Embedded-C-language/image-20240119170447733.png" alt="image-20240119170447733" style="zoom:67%;"><h2 id="1-char-short-int数据类型"><a href="#1-char-short-int数据类型" class="headerlink" title="1.char short int数据类型"></a>1.char short int数据类型</h2><p>对于单片机开发来说，是至关重要的。因为单片机有8位、16位、32位。如果不注意数据类型，不注意数据长度，那么在编写代码的时候，很容易就会造成数据溢出，导致程序出现bug，而且还很难发现原因。</p><p>如果熟悉stm32单片机开发的同学，看官方的例程时，使用的数据类型往往都是重新定义过的类型，很少有直接使用原始数据类型的，比如GPIOIO口设置。</p><p>为什么要这样做吗？不嫌麻烦吗？自己平时写程序的时候，往往都是直接使用数据类型的默认名，也依然可以正常使用，没什么问题。但是官方为什么一定要重新定义一次数据类型呢？</p><p>个说白了就是大局观的问题，因为官方比我们个人更具有大局观。个人面对的可能也只有几个平台和几款单片机。而官方面对的是多个平台和多种单片机的，这就不得不考虑数据兼容问题了。比如在32位单片机上的算法移植到8位单片机上，代码运行起来后，到处都是数据溢出。要挨个去修改变量的数据类型，那么这时候，作为开发者来说，奔溃不奔溃？抓狂不抓狂？</p><p>所以为了解决这个问题，官方就会在每个平台下，给数据类型，重新命名一次，如果需要更换平台，那么只需要替换这个数据重命名的头文件即可。</p><p>在32位单片机中int是32位，而在8位单片机中long 才是32位。那么在32位单片机上的int型变量，如果直接移植到8位单片机上的话，那么肯定就会出现数据溢出的问题。</p><p>那么如果使用了重命名后的新变量类型 uint32_t ，不论在8位和32位的单片机上，这个数据都会是32位，这样通过数据类型的重定义，就避免了，同样的数据类型，在不同平台上长度不一致的问题。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> <span class="type">uint8_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">short</span> <span class="type">int</span> <span class="type">uint16_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> <span class="type">uint32_t</span>;</span><br></pre></td></tr></table></figure><p>不同平台数据类型所占字节对比：</p><p>（1个字节有8位）</p><p><img src="/2024/01/26/Embedded-C-language/image-20240113193817299.png" alt="image-20240113193817299"></p><p><img src="/2024/01/26/Embedded-C-language/image-20250110180951482.png" alt="image-20250110180951482"></p><p>int 即一个装数据的小盒子，对于51单片机（8位单片机），int占两个字节(16位，即16个二进制位)，能表示在0~2^16间的数（无符号）</p><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p>见”union共同体”章节</p><h4 id="实例应用"><a href="#实例应用" class="headerlink" title="实例应用"></a>实例应用</h4><p>1.<em>智能家居：网关协议，mac地址上报？</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *mac=<span class="string">&quot;192.168.31.84&quot;</span></span><br><span class="line"><span class="type">char</span> mac_array[<span class="number">4</span>]=&#123;<span class="number">192</span>,<span class="number">168</span>,<span class="number">31</span>,<span class="number">84</span>&#125;</span><br></pre></td></tr></table></figure><p>mac地址如上所示为”192.168.31.84”，为了将其上传到服务器，在定通讯协议时，会和服务器的同事沟通好，收到下面这样一个mac_array数组时，就在每两个数之间加一个小数点来表示mac地址。</p><p>即我们将mac地址转化为一个char类型的数组上传到服务器。</p><p>提问：<strong>为什么mac_array数组的类型用char,而不用int等数据类型？</strong></p><p>答：你可以把数据类型当成一个容器来存放数字，只是它们的容量不同，比如</p><p>char占用1个字节的内存空间，一个字节有8位，能存放0~255之间的数字，因此char类型很适合表示0-255之间的整数，这个范围完全满足IP地址中每个字段的需求。</p><p>如果使用int类型，它通常占用4个字节的内存空间，0-65535，对于用来储存仅需0-255之间的数值而言过于庞大，将浪费大量存储空间，因此在这种情况下，使用char类型更为合适</p><p>2.<em>奶茶机器人：温度采集，小数点如何上报云端？</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> temp = <span class="number">37.5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> temp_array[<span class="number">2</span>] = &#123;<span class="number">37</span>,<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><p>服务器发过来unix时间戳 :1607143247，一般是发的hex，即发的是5FCB0F4F，我们接受这串数据，并将其重新解析为时间</p><p>5FCB0F4F  {0x5F,0xCB,0x0F,0x4F} </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> time_buffer[<span class="number">4</span>]=&#123;<span class="number">0x5F</span>,<span class="number">0xCB</span>,<span class="number">0x0F</span>,<span class="number">0x4F</span>&#125;;<span class="comment">//十六进制的一位等于四位二进制</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> time;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">u8Tou32B</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *buffer)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (((((((<span class="type">unsigned</span> <span class="type">int</span>)buffer[<span class="number">0</span>])&lt;&lt;<span class="number">8</span>)|buffer[<span class="number">1</span>])&lt;&lt;<span class="number">8</span>)|buffer[<span class="number">2</span>])&lt;&lt;<span class="number">8</span>)|buffer[<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    time=u8Tou32B(time_buffer);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;time =%ld s\n&quot;</span>,time);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5FCB0F4F  {0x5F,0xCB,0x0F,0x4F} </p><p>u8Tou32B函数的作用是将一个包含四个字节的unsigned char数组转换成一个unsigned int类型的32位无符号整数，就是把5F,CB,0F,4F拼起来。</p><p>继续对上面的u8Tou32B函数进行优化得</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">u8Tou32B_optimized</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *buffer)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> result;</span><br><span class="line">    <span class="built_in">memcpy</span>(&amp;result, buffer, <span class="keyword">sizeof</span>(result));</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    time = u8Tou32B_optimized(time_buffer);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;time = %u s\n&quot;</span>, time); <span class="comment">// 使用%u正确打印无符号整数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-位操作"><a href="#2-位操作" class="headerlink" title="2.位操作"></a>2.位操作</h2><h3 id="位，字节，进制"><a href="#位，字节，进制" class="headerlink" title="位，字节，进制"></a>位，字节，进制</h3><p>1个字节&#x3D;8个二进制位</p><h4 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h4><p>0b开头，只有0，1，一个字节有8位，该字节能表示的最大数字是把所有位都设置为1：(11111111)&#x3D;256,因此1字节可储存0~255范围内的数字。</p><p>通常unsignedchar 用1字节表示的范围是0<del>255，而signed char 用1字节表示的范围是-128</del>+127.</p><h4 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h4><p>0x开头，用0~15表示数字（0-9，10-15为A-F）</p><p><em><strong>每个十六进制位都对应一个4位的二进制数（即4个二进制位）</strong></em>（2^4&#x3D;16,即一个四位的二进制数可以表示从0到15的所有整数值），那么两个十六进制位恰好对应一个8位字节。第一个十六进制表示前4位，第2个十六进制位表示后4位</p><p>不同类型数据的转换可见union共同体章节</p><h3 id="位逻辑运算符"><a href="#位逻辑运算符" class="headerlink" title="位逻辑运算符"></a>位逻辑运算符</h3><p><img src="/2024/01/26/Embedded-C-language/image-20240113211004993.png" alt="image-20240113211004993"> </p><p>位与&amp;:对于每个位，只有两个对象中相应的位都为1时，结果才为1        &amp;&#x3D;</p><p>（10010011）&amp;（00111101）&#x3D;（00010001）</p><p>常见用法: ch&amp;&#x3D;0xff(0xff二进制形式是11111111，这个掩码保持ch中最后8位不变，其它位都设置为0)   </p><p>位或|:只要有一个1就为1       |&#x3D;</p><p>（10010011）|（00111101）&#x3D;（10111111）</p><p>0x20|0x0C&#x3D;0x2C</p><p>位异或^:</p><p>取反~:把0变为1，1变为0</p><p>在c语言中，<code>!</code>和<code>~</code>均表示取反。</p><p>这两个符号的区别在于：</p><ul><li><strong><code>!</code></strong> : 代表<strong>逻辑取反</strong>，即：把非0的数值变为0，0变为1;</li><li><em><strong>*<code>~</code>*</strong></em> : 表示<strong>按位取反</strong>，即在数值的二进制表示方式上,将0变为1，将1变为0。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIM0_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD&amp;=<span class="number">0xF0</span>;<span class="comment">//1111 0000 高4位为T1，保持不变，低4位为T0，清0</span></span><br><span class="line">    TMOD|=<span class="number">0x01</span>;<span class="comment">//0000 0001 选择为定时器0模式，工作方式1，使用或运算可以不干扰高四位</span></span><br><span class="line">    </span><br><span class="line">    TH0=<span class="number">0xFC</span>;<span class="comment">//给定时器赋初值，定时1ms</span></span><br><span class="line">    TL0=<span class="number">0x18</span>;</span><br><span class="line">    </span><br><span class="line">    ET0=<span class="number">1</span>;<span class="comment">//打开定时器0中断允许</span></span><br><span class="line">    EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">    </span><br><span class="line">    TR0=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="掩码"><a href="#掩码" class="headerlink" title="掩码"></a>掩码</h3><p>按位与运算符常用于掩码（mask）。所谓掩码指的是一些设置为开（1）或关（0）的位组合</p><p>常见用法: ch&amp;&#x3D;0xff(0xff二进制形式是11111111，这个掩码保持ch中最后8位不变，其它位都设置为0)</p><h3 id="移位运算符"><a href="#移位运算符" class="headerlink" title="移位运算符"></a>移位运算符</h3><p>左移&lt;&lt;:  将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补0）</p><p>（10001010）&lt;&lt;2&#x3D;(001010000)</p><p>右移&gt;&gt;:  (10001010)&gt;&gt;2&#x3D;(00100010)</p><h4 id="1-设置或检查特定的标志位"><a href="#1-设置或检查特定的标志位" class="headerlink" title="1.设置或检查特定的标志位"></a><strong>1.设置或检查特定的标志位</strong></h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xEventGroupSetBits(g_xEventCar,(<span class="number">1</span>&lt;&lt;<span class="number">1</span>));</span><br><span class="line"><span class="comment">//在二进制中，数字 1 通常表示为 `0001`。当你把它向左移动 1 位时，每一位都向左移动一位，最右边补上一个 0。所以，`1 &lt;&lt; 1` 的结果会是 `0010`，相当于bit1置1</span></span><br><span class="line"><span class="comment">//1&lt;&lt;0就是1保持不变，仍是0001,相当于bit0置1</span></span><br></pre></td></tr></table></figure><h4 id="2-从较大单元中提取一些位"><a href="#2-从较大单元中提取一些位" class="headerlink" title="2.从较大单元中提取一些位"></a>2.从较大单元中提取一些位</h4><p>此处可链接到“十六进制”章节中</p><p>（<em><strong>每个十六进制位都对应一个4位的二进制数（即4个二进制位）</strong></em>（2^4&#x3D;16,即一个四位的二进制数可以表示从0到15的所有整数值），那么两个十六进制位恰好对应一个8位字节。第一个十六进制表示前4位，第2个十六进制位表示后4位）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BYTE_MASK 0xff</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> color =<span class="number">0x002a162f</span>;<span class="comment">//一个十六进制位对应四个二进制位</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> blue,green,red;</span><br><span class="line"></span><br><span class="line">red=color&amp;BYTE_MASK;<span class="comment">//取color低8位</span></span><br><span class="line">green=(color&gt;&gt;<span class="number">8</span>)&amp;BYTE_MASK;<span class="comment">//将color右移8位（8个二进制位），再用掩码取低8位，则可使green取color中间8位</span></span><br><span class="line">blue=(color&gt;&gt;<span class="number">16</span>)&amp;BYTE_MASK;<span class="comment">//将color右移16位（16个二进制位)，再用掩码取低8位，则可使blue取color高8位</span></span><br></pre></td></tr></table></figure><p><img src="/2024/01/26/Embedded-C-language/image-20240114140043073.png" alt="image-20240114140043073"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> MSG_SET_INPUT_POS:</span><br><span class="line"></span><br><span class="line"><span class="built_in">memcpy</span>(data, &amp;(odrive_set-&gt;input_pos), <span class="number">4</span>);<span class="comment">//4个字节 32位 ，input_pos也是32位，复制到data数组中  uint8_t data[8]  ，yi会将数组前四位补齐</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//odrive_set-&gt;vel_ff  vel_ff有16位 两个字节 ,data的一个元素的类型是uint8_t,有8位</span></span><br><span class="line">       data[<span class="number">4</span>] = odrive_set-&gt;vel_ff &amp; <span class="number">0x00FF</span>;<span class="comment">//保留低8位</span></span><br><span class="line"><span class="comment">//packetlength &amp; 0x00FF中的&amp;是先把&amp;两边的值转换成二进制形式，然后在进行按位运算</span></span><br><span class="line">       data[<span class="number">5</span>] = odrive_set-&gt;vel_ff &gt;&gt; <span class="number">8</span>;<span class="comment">//取高8位</span></span><br><span class="line"></span><br><span class="line">       data[<span class="number">6</span>] = odrive_set-&gt;current_ff &amp; <span class="number">0x00FF</span>;</span><br><span class="line">       data[<span class="number">7</span>] = odrive_set-&gt;current_ff &gt;&gt; <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       header.RTR = CAN_RTR_DATA;</span><br><span class="line">       header.DLC = <span class="number">8</span>;</span><br><span class="line">       <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h2 id="3-数组"><a href="#3-数组" class="headerlink" title="3.数组"></a>3.数组</h2><p>float candy[365];&#x2F;<em>内含365个float类型元素的数组</em>&#x2F;</p><h2 id="4-结构体struct"><a href="#4-结构体struct" class="headerlink" title="4.结构体struct"></a>4.结构体struct</h2><h3 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h3><p><strong>结构</strong>体是 C 编程中另一种用户自定义的可用的数据类型，它允许您存储不同类型的数据项。</p><p>结构体中的数据成员可以是基本数据类型（如 int、float、char 等），也可以是其他结构体类型、指针类型等。</p><p>关键字–struct, union, typedef</p><p>运算符: . ,-&gt;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title function_">xxx</span><span class="params">(标签，这个结构体的名字)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">​xxx(变量定义);</span><br><span class="line"></span><br><span class="line">&#125;xxx(结构变量);</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明结构类型</span></span><br><span class="line"><span class="comment">/*1*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> daty;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span> <span class="title">today</span>;</span><span class="comment">/*定义某种结构类型的变量*/</span></span><br><span class="line"><span class="comment">/*2*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">&#125;p1,p2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*3*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">&#125;p1,p2;</span><br><span class="line"><span class="comment">/*4*/</span></span><br><span class="line"><span class="keyword">typedef</span> &#123;</span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> daty;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">&#125;today;</span><br><span class="line"></span><br><span class="line">today Today1;</span><br></pre></td></tr></table></figure><p>在一般情况下，标签、变量定义，结构变量这 3 部分至少要出现 2 个</p><h4 id="tyepedef-struct"><a href="#tyepedef-struct" class="headerlink" title="tyepedef struct"></a>tyepedef struct</h4><p>typedef是类型定义的意思。typedef <a href="https://so.csdn.net/so/search?q=struct&spm=1001.2101.3001.7020">struct</a> 是为了使用这个结构体方便。</p><p>具体区别在于:<br> 若struct <a href="https://so.csdn.net/so/search?q=node&spm=1001.2101.3001.7020">node</a> {}这样来定义结构体的话。在申请node 的变量时，需要这样写，struct node n;<br> 若用typedef，可以这样写，typedef struct node{}NODE; 。在申请变量时就可以这样写，NODE n;<br> 区别就在于使用时，是否可以省去struct这个关键字。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line">&#125;Stu;</span><br><span class="line">于是在声明变量的时候就可：Stu stu1;</span><br><span class="line">如果没有<span class="keyword">typedef</span>就必须用<span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu1</span>;</span>来声明</span><br><span class="line">这里的Stu实际上就是<span class="class"><span class="keyword">struct</span> <span class="title">Student</span>的别名。</span></span><br></pre></td></tr></table></figure><h4 id="例-odrive-stm32驱动代码（可作为使用结构体时的模板）"><a href="#例-odrive-stm32驱动代码（可作为使用结构体时的模板）" class="headerlink" title="例 odrive&amp;stm32驱动代码（可作为使用结构体时的模板）"></a>例 odrive&amp;stm32驱动代码（可作为使用结构体时的模板）</h4><p>建立结构声明（模板），定义结构变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*odrive.h*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">uint32_t</span> axis_error;</span><br><span class="line">  <span class="type">uint32_t</span> axis_current_state;</span><br><span class="line">  <span class="type">uint32_t</span> motor_error;</span><br><span class="line">  <span class="type">uint32_t</span> encoder_error;</span><br><span class="line">  <span class="type">uint32_t</span> sensorless_error;</span><br><span class="line">  <span class="type">float</span> encoder_pos_estimate;</span><br><span class="line">  <span class="type">float</span> encoder_vel_estimate;</span><br><span class="line">  <span class="type">int32_t</span> encoder_shadow_count;</span><br><span class="line">  <span class="type">int32_t</span> encoder_cpr_count;</span><br><span class="line">  <span class="type">float</span> iq_setpoint;</span><br><span class="line">  <span class="type">float</span> iq_measured;</span><br><span class="line">  <span class="type">float</span> sensorless_pos_estimate;</span><br><span class="line">  <span class="type">float</span> sensorless_vel_estimate;</span><br><span class="line">  <span class="type">float</span> vbus_voltage;</span><br><span class="line">&#125; OdriveAxisGetState_t;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把odrive_set_axis0()声明为一个OdriveAxisSetState_t（在odrive.h定义的结构体）类型的变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*odrive.c*/</span></span><br><span class="line">OdriveAxisSetState_t odrive_set_axis0;</span><br><span class="line">OdriveAxisSetState_t odrive_set_axis1;</span><br></pre></td></tr></table></figure><h4 id="结构的初始化"><a href="#结构的初始化" class="headerlink" title="结构的初始化"></a>结构的初始化</h4><p>struct date today&#x3D;{07,31,2014};</p><h4 id="结构成员"><a href="#结构成员" class="headerlink" title="结构成员"></a>结构成员</h4><p>在C语言中，访问结构体成员时选择使用.或-&gt;主要取决于你当前操作的对象是<strong>结构体实例本身</strong>还是<strong>指向该结构体的指针</strong>：</p><p>•使用.（点号）的情况：当直接操作一个已知的结构体变量时，通过.来访问其内部成员。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> &#123;</span></span><br><span class="line">  <span class="type">char</span> name[<span class="number">50</span>];</span><br><span class="line">  <span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu1</span>;</span></span><br><span class="line">stu1.name=<span class="string">&#x27;&#x27;John Doe&#x27;</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string">stu1.age = 20;</span></span><br></pre></td></tr></table></figure><p>•使用-&gt;（箭头）的情况：当操作的是指向结构体的指针时，用-&gt;来访问该指针所指向的结构体的成员。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">stuP</span>;</span></span><br><span class="line">stuP = &amp;stu1; <span class="comment">// 或者 stuP = malloc(sizeof(struct Student));</span></span><br><span class="line"></span><br><span class="line">stuP-&gt;name = <span class="string">&quot;Jane Smith&quot;</span>; <span class="comment">// 使用 -&amp;gt; 访问结构体指针 stuP 所指向的结构体的成员</span></span><br><span class="line">stuP-&gt;age = <span class="number">22</span>;</span><br></pre></td></tr></table></figure><p>简而言之，如果你有一个结构体变量名，就用.；如果你有一个指向结构体的指针，就用-&gt;。</p><h4 id="结构指针"><a href="#结构指针" class="headerlink" title="结构指针"></a>结构指针</h4><p>和数组不同，结构变量的名字不是结构变量的地址，必须使用&amp;运算符</p><h4 id="结构与函数"><a href="#结构与函数" class="headerlink" title="结构与函数"></a>结构与函数</h4><p>向函数传递结构体的信息：1.传递结构体成员  2.传递结构体地址  3.传递结构</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  GPIO_PIN_RESET = <span class="number">0</span>,</span><br><span class="line">  GPIO_PIN_SET</span><br><span class="line">&#125;GPIO_PinState;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> MODER;    <span class="comment">/*!&lt; GPIO port mode register,               Address offset: 0x00      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> OTYPER;   <span class="comment">/*!&lt; GPIO port output type register,        Address offset: 0x04      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> OSPEEDR;  <span class="comment">/*!&lt; GPIO port output speed register,       Address offset: 0x08      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> PUPDR;    <span class="comment">/*!&lt; GPIO port pull-up/pull-down register,  Address offset: 0x0C      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> IDR;      <span class="comment">/*!&lt; GPIO port input data register,         Address offset: 0x10      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> ODR;      <span class="comment">/*!&lt; GPIO port output data register,        Address offset: 0x14      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> BSRR;     <span class="comment">/*!&lt; GPIO port bit set/reset register,      Address offset: 0x18      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> LCKR;     <span class="comment">/*!&lt; GPIO port configuration lock register, Address offset: 0x1C      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> AFR[<span class="number">2</span>];   <span class="comment">/*!&lt; GPIO alternate function registers,     Address offset: 0x20-0x24 */</span></span><br><span class="line">&#125; GPIO_TypeDef;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*传递结构体地址*/</span></span><br><span class="line">GPIO_PinState <span class="title function_">HAL_GPIO_ReadPin</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pin)</span><span class="comment">//第一位GPIO_TypeDef* GPIOx是传入结构体的地址，以便在这个函数中使用这个结构体</span></span><br><span class="line">&#123;</span><br><span class="line">  GPIO_PinState bitstatus;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Check the parameters */</span></span><br><span class="line">  assert_param(IS_GPIO_PIN(GPIO_Pin));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>((GPIOx-&gt;IDR &amp; GPIO_Pin) != (<span class="type">uint32_t</span>)GPIO_PIN_RESET)<span class="comment">//操作对象是指向结构体的指针，访问该结构体成员时用-&gt;</span></span><br><span class="line">  &#123;</span><br><span class="line">    bitstatus = GPIO_PIN_SET;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    bitstatus = GPIO_PIN_RESET;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> bitstatus;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="typedef"><a href="#typedef" class="headerlink" title="typedef"></a>typedef</h3><p><em><strong>typedef 在 MDK 用得最多的就是定义结构体的类型别名和枚举类型了。</strong></em>(typedef struct, typedef enum)</p><p>利用typedef可以为某一类型自定义名称(为现有类型创建一个名称)，它没有创建任何新类型，只是为某个已存在的类型增加了一个方便使用的标签。</p><p>1.为经常出现的类型创建一个方便，易识别的类型名。</p><p>2.常用于给复杂的类型命名。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用BYTE表示1字节的数组</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> BYTE</span><br><span class="line"><span class="comment">//随后可以用BYTE来定义变量</span></span><br><span class="line">BYTE x,y[<span class="number">10</span>],*z;</span><br><span class="line"><span class="comment">//#define也可发挥上面同样的功能</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYTE unsigned char</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以把typedef用于结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">complex</span>&#123;</span></span><br><span class="line">    <span class="type">float</span> real;</span><br><span class="line">    <span class="type">float</span> imag;</span><br><span class="line">&#125;COMPLEX;</span><br><span class="line"><span class="comment">//然后可用COMPLEX类型代替complex结构</span></span><br><span class="line">用<span class="keyword">typedef</span>来命名一个结构类型时，可以省略该结构的标签。（见例odrive&amp;stm32驱动代码）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以为结体定义一个别名 GPIO_TypeDef，这样我们就可以在其他地方通过别名 GPIO_TypeDef 来定义结构体变量了。</p><p>方法如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> __IO <span class="type">uint32_t</span> CRL;</span><br><span class="line"> __IO <span class="type">uint32_t</span> CRH;</span><br><span class="line">…</span><br><span class="line">&#125; GPIO_TypeDef;</span><br></pre></td></tr></table></figure><p>Typedef 为结构体定义一个别名 GPIO_TypeDef。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GPIO_TypeDef _GPIOA,_GPIOB;</span><br></pre></td></tr></table></figure><p>GPIO_TypeDef 就跟 struct _GPIO 是等同的作用了</p><h3 id="enum枚举"><a href="#enum枚举" class="headerlink" title="enum枚举"></a>enum枚举</h3><p>enum枚举是 C 语言中的一种基本数据类型，它可以让数据更简洁，更易读。（一个被命名的整形常数的集合 ）</p><p>枚举类型通常用于为程序中的一组相关的常量取名字，以便于程序的可读性和维护性。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span>　枚举名　&#123;</span>枚举元素<span class="number">1</span>,枚举元素<span class="number">2</span>,……&#125;;</span><br></pre></td></tr></table></figure><p>我们举个例子，比如：一星期有 7 天，如果不用枚举，我们需要使用 #define 来为每个整数定义一个别名：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MON  1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TUE  2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WED  3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> THU  4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FRI  5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAT  6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUN  7</span></span><br></pre></td></tr></table></figure><h4 id="声明枚举类型"><a href="#声明枚举类型" class="headerlink" title="声明枚举类型"></a>声明枚举类型</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="枚举变量的定义"><a href="#枚举变量的定义" class="headerlink" title="枚举变量的定义"></a>枚举变量的定义</h4><p>我们可以通过以下三种方式来定义枚举变量</p><p><strong>1、先定义枚举类型，再定义枚举变量</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span> <span class="title">day</span>;</span></span><br></pre></td></tr></table></figure><p><strong>2、定义枚举类型的同时定义枚举变量</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125; day;</span><br></pre></td></tr></table></figure><p><strong>3、省略枚举名称，直接定义枚举变量</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125; day;</span><br></pre></td></tr></table></figure><h4 id="typedef-enum"><a href="#typedef-enum" class="headerlink" title="typedef enum"></a>typedef enum</h4><p>是不是感觉和enum没什么区别，确实在一般的使用中两个的结果是差不多的。</p><p>但是如果你想定义一个和DAY类型一样的集合的情况下，使用typedef enum更方便</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">举例子：</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span> &#123;</span> MON, TUE=<span class="number">2</span>, WED, THU, FRI, SAT, SUN  &#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span> <span class="title">workday</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span> <span class="title">restday</span>;</span></span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> <span class="title">DAY</span> &#123;</span> MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN  &#125;DAY_TYPE; </span><br><span class="line"></span><br><span class="line">DAY_TYPE workday,restday;</span><br></pre></td></tr></table></figure><p>（此处用法与typedef struct一样）</p><p>枚举（enum）成员的值默认是整型，并且从0开始递增。虽然枚举类型本身不直接支持十六进制的声明方式，但你可以手动为枚举成员赋值，这个值可以是任何整数常量，当然包括十六进制表示的整数</p><p>例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  MSG_CO_NMT_CTRL = <span class="number">0x000</span>,      <span class="comment">// CANOpen NMT Message REC</span></span><br><span class="line">  MSG_SET_INPUT_POS = <span class="number">0x00C</span>,    <span class="comment">// 输入的电机目标位置</span></span><br><span class="line">  MSG_SET_INPUT_VEL = <span class="number">0x00D</span>,    <span class="comment">// 输入的电机目标转速-------###</span></span><br><span class="line">  MSG_CLEAR_ERRORS = <span class="number">0x018</span>,     <span class="comment">// 清除错误</span></span><br><span class="line">  MSG_CO_HEARTBEAT_CMD = <span class="number">0x700</span>, <span class="comment">// CANOpen NMT Heartbeat SEND</span></span><br><span class="line">&#125; Odrive_Commond;</span><br><span class="line"></span><br><span class="line"><span class="comment">//应用于switch case中：</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">odrv_write_msg</span><span class="params">(Axis_t axis, Odrive_Commond cmd)</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">switch</span>(cmd)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> MSG_GET_ENCODER_COUNT:</span><br><span class="line">        header.RTR = CAN_RTR_REMOTE;  <span class="comment">//数据帧的优先级大于远程帧，当有多个设备向一个ID同时发送数据时，用远程帧可以有效地避免总线冲突，即ID收到消息后会先回发数据帧，再处理远程帧</span></span><br><span class="line">        header.DLC = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> MSG_SET_CONTROLLER_MODES:</span><br><span class="line">        data[<span class="number">0</span>] = odrive_set-&gt;control_mode;</span><br><span class="line">        data[<span class="number">4</span>] = odrive_set-&gt;input_mode;</span><br><span class="line">        header.RTR = CAN_RTR_DATA;</span><br><span class="line">        header.DLC = <span class="number">8</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> MSG_SET_TRAJ_ACCEL_LIMITS:</span><br><span class="line">        <span class="built_in">memcpy</span>(data, &amp;(odrive_set-&gt;traj_accel_limit), <span class="number">4</span>);</span><br><span class="line">        <span class="built_in">memcpy</span>(tmp_word, &amp;(odrive_set-&gt;traj_decel_limit), <span class="number">4</span>);</span><br><span class="line">        data[<span class="number">4</span>] = tmp_word[<span class="number">0</span>];</span><br><span class="line">        data[<span class="number">5</span>] = tmp_word[<span class="number">1</span>];</span><br><span class="line">        data[<span class="number">6</span>] = tmp_word[<span class="number">2</span>];</span><br><span class="line">        data[<span class="number">7</span>] = tmp_word[<span class="number">3</span>];</span><br><span class="line">        header.RTR = CAN_RTR_DATA;</span><br><span class="line">        header.DLC = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//enum枚举常用于状态表示</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    NORMAL,</span><br><span class="line">    CHANGE,</span><br><span class="line">&#125; FSMMode_e;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    PASSIVE = <span class="number">1</span>,    <span class="comment">// 阻尼</span></span><br><span class="line">    FALL = <span class="number">2</span>,       <span class="comment">// 卧倒</span></span><br><span class="line">    FIXEDSTAND = <span class="number">3</span>, <span class="comment">// 固定站立</span></span><br><span class="line">    FREESTAND = <span class="number">4</span>,  <span class="comment">// 自由站立</span></span><br><span class="line">    TROTING = <span class="number">5</span>,    <span class="comment">// 对角步态</span></span><br><span class="line">    WALKING = <span class="number">6</span>,    <span class="comment">// 行走步态</span></span><br><span class="line">    JUMP = <span class="number">7</span>,       <span class="comment">// 跳跃</span></span><br><span class="line">    JUMP2 = <span class="number">8</span>,      <span class="comment">// 跳跃2</span></span><br><span class="line">    JUMPL = <span class="number">9</span>,</span><br><span class="line">    JUMPL2 = <span class="number">10</span>,</span><br><span class="line">    JUMPR = <span class="number">11</span>,</span><br><span class="line">    JUMPR2 = <span class="number">12</span>,</span><br><span class="line">    catJUMP = <span class="number">13</span>,</span><br><span class="line">    catJUMP2 = <span class="number">14</span>,</span><br><span class="line">&#125; FSMState_e;</span><br></pre></td></tr></table></figure><h2 id="5-指针"><a href="#5-指针" class="headerlink" title="5.指针"></a>5.指针</h2><h3 id="指针偏移"><a href="#指针偏移" class="headerlink" title="指针偏移"></a>指针偏移</h3><p>指针可以作为数组用，数组号表示指针基地址偏移，很多代码都这么用的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="type">void</span>  <span class="title function_">test</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *buffer)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">buffer[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第16行，memcpy函数从packet[1]的地址开始复制，数据依次复制到packet[1],packet[2],packet[3],packet[4]中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">floatToBytes</span><span class="params">(<span class="type">float</span> val, <span class="type">uint8_t</span>* bytes)</span> &#123;</span><br><span class="line">  <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">    <span class="type">float</span> floatVal;</span><br><span class="line">    <span class="type">uint8_t</span> byteVal[<span class="keyword">sizeof</span>(<span class="type">float</span>)];</span><br><span class="line">  &#125; data;</span><br><span class="line"></span><br><span class="line">  data.floatVal = val;<span class="comment">//共同体 val给共同体的data.floatVal后 如果用data.byteVal 共同体内data.floatVal中的数据会转变为byteVal[sizeof(float)]类型</span></span><br><span class="line">  <span class="built_in">memcpy</span>(bytes, data.byteVal, <span class="keyword">sizeof</span>(<span class="type">float</span>));<span class="comment">//共同体</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sendPacket</span><span class="params">(<span class="type">float</span> angle, <span class="type">float</span> x, <span class="type">float</span> y)</span> &#123;<span class="comment">//float有4个字节，32位</span></span><br><span class="line">  <span class="type">uint8_t</span> packet[<span class="number">14</span>];   <span class="comment">// 数据包共14个字节</span></span><br><span class="line">  <span class="comment">// 填充帧头</span></span><br><span class="line">  packet[<span class="number">0</span>] = FRAME_HEADER;</span><br><span class="line">  <span class="comment">// 填充数据</span></span><br><span class="line">  floatToBytes(angle, &amp;packet[<span class="number">1</span>]);</span><br><span class="line">  floatToBytes(x, &amp;packet[<span class="number">5</span>]);</span><br><span class="line">  floatToBytes(y, &amp;packet[<span class="number">9</span>]);</span><br><span class="line">  <span class="comment">// 填充帧尾</span></span><br><span class="line">  packet[<span class="number">13</span>] = FRAME_TAIL;</span><br><span class="line">  <span class="comment">// 使用串口发送数据包</span></span><br><span class="line">  HAL_UART_Transmit(&amp;huart1, packet, <span class="keyword">sizeof</span>(packet), HAL_MAX_DELAY);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h3><p>所谓函数指针即定义一个<em><strong>指向函数的指针变量</strong></em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> (*p)(<span class="type">int</span> x, <span class="type">int</span>  y);  <span class="comment">//注意：这里的括号不能掉，因为括号()的运算优先级比解引用运算符*高</span></span><br></pre></td></tr></table></figure><p>这个函数的类型是有两个整型参数，返回值是个整型。对应的函数指针类型：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> (*) (<span class="type">int</span> a, <span class="type">int</span> b);  </span><br></pre></td></tr></table></figure><p>对应的函数指针<strong>定义</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> (*p)(<span class="type">int</span> x, <span class="type">int</span>  y);  <span class="comment">//参数名可以去掉，并且通常都是去掉的。这样指针p就可以保存函数类型为两个整型参数，返回值是整型的函数地址了。</span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> (*p)(<span class="type">int</span>, <span class="type">int</span>);</span><br></pre></td></tr></table></figure><p>我们一般可以这么使用，通过函数指针调用函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">maxValue</span> <span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;    </span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> (*p)(<span class="type">int</span>, <span class="type">int</span>) = <span class="literal">NULL</span>;  <span class="comment">//定义一个与maxValue兼容的指针</span></span><br><span class="line">p = maxValue;<span class="comment">//将这个指针指向maxValue函数</span></span><br><span class="line">p(<span class="number">20</span>, <span class="number">45</span>);  <span class="comment">//通过指针调用</span></span><br></pre></td></tr></table></figure><p><strong>应用案例</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    FSMMode_e mode;</span><br><span class="line">    FSMState_e currentState;</span><br><span class="line">    FSMState_e nextState;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//回调函数</span></span><br><span class="line">    <span class="type">void</span> (*enter)(<span class="type">void</span>);<span class="comment">/*函数指针*/</span>  </span><br><span class="line">    <span class="type">void</span> (*run)(<span class="type">void</span>);</span><br><span class="line">    <span class="type">void</span> (*<span class="built_in">exit</span>)(<span class="type">void</span>);</span><br><span class="line">&#125; FSM_t;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">FSM_t FSM ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (FSM.nextState)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> FIXEDSTAND:</span><br><span class="line">        FSM.enter = FixedStand_Enter;<span class="comment">//将FSM.enter这个指针指向FixedStand_Enter函数</span></span><br><span class="line">        FSM.run = FixedStand_Run;</span><br><span class="line">        FSM.<span class="built_in">exit</span> = FixedStand_Exit;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">case</span> TROTING:</span><br><span class="line">        FSM.enter = Troting_Enter;</span><br><span class="line">        FSM.run = Troting_Run;</span><br><span class="line">        FSM.<span class="built_in">exit</span> = Troting_Exit;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">case</span> WALKING:</span><br><span class="line">        FSM.enter = Walking_Enter;</span><br><span class="line">        FSM.run = Walking_Run;</span><br><span class="line">        FSM.<span class="built_in">exit</span> = Walking_Exit;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> JUMP:</span><br><span class="line">        FSM.enter = Jump_Enter;</span><br><span class="line">        FSM.run = Jump_Run;</span><br><span class="line">        FSM.<span class="built_in">exit</span> = Jump_Exit;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在C语言中，void (*enter)(void);、void (*run)(void); 和 void (*exit)(void); 这三个成员是函数指针类型。</p><p>具体解释如下：</p><ol><li><pre><code class="c">void (*enter)(void);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这是一个指向无参数且返回值为 void 的函数的指针。在结构体 FSM_t 中，它表示一个函数指针，当 FSM（有限状态机）进入某个状态时，可以通过调用这个函数指针指向的函数来执行相应的“进入”动作。</span><br><span class="line"></span><br><span class="line"> 2. ```c</span><br><span class="line">    void (*run)(void);</span><br></pre></td></tr></table></figure></code></pre></li></ol><p>同样是一个指向无参数且返回值为 void 的函数的指针。在状态机中，当处于某个状态并需要运行该状态的行为或处理逻辑时，可以调用这个“run”函数指针指向的函数。</p><ol start="3"><li><pre><code class="c">void (*exit)(void);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">依然是一个函数指针，指向无参数且返回值为 void 的函数。当 FSM 状态机从当前状态退出时，会调用这个“exit”函数指针指向的函数，用于执行离开状态时所需的动作或清理工作。</span><br><span class="line"></span><br><span class="line">因此，在实现一个基于此结构体的状态机时，你需要为每个状态分别定义对应的 enter、run 和 exit 函数，并将它们的地址赋给相应状态的 FSM_t 结构体实例中的这三个函数指针成员。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在C语言中，结构体（struct）可以包含各种数据类型，包括**基本数据类型、指针类型**等。在这个特定的FSM_t（有限状态机）结构体定义中，使用函数指针的主要原因是为了实现灵活且可扩展的设计。</span><br><span class="line"></span><br><span class="line">​1.灵活性：***通过将函数作为成员变量（以指针形式存在），可以在不同的实例中为这些函数赋予不同的具体实现，使得状态机的行为可以根据需求动态改变。***</span><br><span class="line"></span><br><span class="line">​2.扩展性：在设计模式上，这种方式符合面向对象编程中的“多态”思想。***每个状态可以有自己的enter、run和exit行为，只需要提供相应的函数实现即可。***</span><br><span class="line"></span><br><span class="line">​3.解耦合：函数指针将函数的具体实现与结构体（状态机）的定义解耦合，使得状态机的定义更简洁，逻辑更清晰，也方便后期维护和扩展。</span><br><span class="line"></span><br><span class="line">​4.高效性：虽然使用函数指针调用会引入一次间接寻址，但在很多情况下，这并不会对性能造成显著影响，而带来的设计优势远大于此微小的性能损耗。总结一下，这里使用函数指针而非直接定义函数，主要是为了构建一个更加灵活、可扩展、高内聚低耦合的状态机模型。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在C语言中，结构体（struct）不能直接包含函数。函数在C语言中不是一种数据类型，因此无法像变量那样存储在结构体中。但是，可以通过存储函数的指针来达到类似的效果，就像上述FSM_t结构体中的enter、run和exit成员那样。</span><br><span class="line"></span><br><span class="line">所以，准确地说，结构体内不能直接定义函数，但可以存储函数的地址，即函数指针，间接实现调用关联函数的功能。</span><br><span class="line"></span><br><span class="line">#### 回调函数</span><br><span class="line"></span><br><span class="line">应用：</span><br><span class="line">1.*送餐机器人：底盘移动到目标位置后，通知应用程序*</span><br><span class="line"></span><br><span class="line">2.*智能音箱：网络状态改变后，通知应用程序*</span><br><span class="line"></span><br><span class="line">3.*四足机器人项目FSM状态机也有用到回调函数的思想*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line">//工具代码</span><br><span class="line">typedef struct&#123;</span><br><span class="line">int status;</span><br><span class="line">void (*statusChange)(); //存储后续要调用的回调函数地址</span><br><span class="line">&#125;T_Device;</span><br><span class="line"></span><br><span class="line">T_Device g_ Device;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">名称：回调函数</span><br><span class="line">作用：将传入的用户函数的地址赋给g_Device.statusChange,当满足条件时，执行该用户函数</span><br><span class="line">*/</span><br><span class="line">//void (*pstatusChange)(int status) 定义了一个指向函数的指针变量 pstatusChange，该函数没有返回值，并且接受一个整型参数 status。</span><br><span class="line">void addCallbackFunc(void (*pstatusChange)(int status))&#123;//将函数的地址传入并赋给g_Device.statusChange，这样g_Device.statusChange指向函数的入口地址</span><br><span class="line">g_Device.statusChange = pstatusChange ; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void run()&#123;</span><br><span class="line">g_Device.status = 10;</span><br><span class="line">    if(g_Device.status == 10)&#123;</span><br><span class="line">        if(g_Device . statusChange != NULL)&#123;</span><br><span class="line">        g_Device.statusChange(g_Device.status);//callBack(10);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//用户代码</span><br><span class="line">void callBack(int status )&#123;&#125;</span><br><span class="line">    printf(&quot;callBack\n&quot;);</span><br><span class="line">    printf(&quot;status = %d\n&quot; ,status);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">    addCallbackFunc(callBack);//将 `callBack` 函数的地址作为参数传递给了 `addCallbackFunc` 函数，</span><br><span class="line">    run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ol><p>在 <code>main</code> 函数中调用 <code>addCallbackFunc(callBack);</code> 时，发生了以下事件：</p><ol><li><code>callBack</code> 是用户定义的一个函数，其原型为 <code>void callBack(int status)</code>。</li><li>当调用 <code>addCallbackFunc(callBack)</code> 时，将 <code>callBack</code> 函数的地址作为参数传递给了 <code>addCallbackFunc</code> 函数。</li><li>在 <code>addCallbackFunc</code> 函数内部，这个传入的参数 <code>pstatusChange</code> 被赋值给全局变量 <code>g_Device</code> 的成员 <code>statusChange</code>，即 <code>g_Device.statusChange = pstatusChange;</code>。因此，现在 <code>g_Device.statusChange</code> 指向了 <code>callBack</code> 函数的入口地址。</li><li>这样一来，就实现了回调函数的注册。当设备状态改变且满足触发条件时（如在 <code>run</code> 函数中），可以通过调用 <code>g_Device.statusChange(g_Device.status);</code> 来执行 <code>callBack</code> 函数，<strong>并将设备状态作为参数传递进去，从而实现对状态变化的响应和处理。</strong></li></ol><p>提问：为什么不能直接用if(g_Device.status&#x3D;&#x3D;10)，而非要用回调函数，这是多此一举吗</p><p>使用回调函数并不一定是在做无用功，它在某些情况下具有以下优点：</p><ol><li><strong>解耦合</strong>：通过回调函数，我们可以将处理状态变化的逻辑从设备状态管理代码中分离出来。这样可以使代码结构更加清晰，也<strong>更容易维护和扩展</strong>。例如，在本例中，具体的设备状态改变后的处理行为（即<code>callBack</code>函数中的内容）可以由用户自定义，而不是硬编码在<code>run</code>函数里。</li><li><strong>灵活性</strong>：当设备状态改变时，不同的应用程序可能需要执行不同的操作。使用回调函数允许我们在运行时动态地根据需要来指定要执行的操作，增加了程序的灵活性。</li><li><strong>事件驱动编程</strong>：回调函数是事件驱动编程模型的重要组成部分。在这种模式下，当某个特定事件（如设备状态改变）发生时，系统调用预先注册好的回调函数，<strong>而非直接在触发事件的地方编写处理逻辑。</strong></li></ol><p>所以，并不是多此一举，而是为了实现更灵活、解耦的软件设计和开发。当然，在简单场景下，如果状态改变后的处理逻辑固定且无需复用，直接写在<code>if(g_Device.status==10)</code>判断后也是可行的，但在复杂项目或者需要扩展性的情况下，回调函数就显得尤为重要了。</p><h3 id="void-修饰指针使用规则"><a href="#void-修饰指针使用规则" class="headerlink" title="void 修饰指针使用规则"></a>void 修饰指针使用规则</h3><p>void *</p><p>void 指针可以指向任意类型的数据，就是说可以用任意类型的指针对 void 指针对 void <a href="https://so.csdn.net/so/search?q=%E6%8C%87%E9%92%88%E8%B5%8B%E5%80%BC&spm=1001.2101.3001.7020">指针赋值</a>。例如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *a；</span><br><span class="line"><span class="type">void</span> *p；</span><br><span class="line">p=a；</span><br></pre></td></tr></table></figure><p>void 指针可以任意类型的数据，可以在程序中给我们带来一些好处，函数中形为指针类型时，我们可以将其定义为 void 指针，这样函数就可以接受任意类型的指针。如：</p><pre><code>void * memcpy(void *dest, const void *src, size_t len);void * memset ( void * buffer, int c, size_t num );</code></pre><p>这样，任何类型的指针都可以传入 memcpy 和 memset 中，这也真实地体现了内存操作函数的意义，因为它操作的对象仅仅是一片内存，而不论这片内存是什么类型。</p><h2 id="6-常见关键词"><a href="#6-常见关键词" class="headerlink" title="6.常见关键词"></a>6.常见关键词</h2><h3 id="define宏定义关键词"><a href="#define宏定义关键词" class="headerlink" title="define宏定义关键词"></a>define宏定义关键词</h3><p>语法：<code>#define 标识符 字符串</code></p><ul><li><p>“标识符”为所定义的<strong>宏名</strong></p></li><li><p>“字符串”可以是<strong>常数</strong>、<strong>表达式</strong>、<strong>格式串</strong>等</p><p>#define SYSCLK_FREQ_72MHz 72000000</p></li></ul><h3 id="ifdef-条件编译"><a href="#ifdef-条件编译" class="headerlink" title="ifdef 条件编译"></a>ifdef 条件编译</h3><p>当满足某条件时对一组语句进行编译，而当条件不满足时则编译另一组语句。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifdef</span> 标识符</span></span><br><span class="line">程序段 <span class="number">1</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">程序段 <span class="number">2</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>作用是：当标识符已经被定义过(一般是用#define 命令定义)，则对程序段 1 进行编译，否则编译程序段 2。 其中#else 部分也可以没有，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifdef</span></span></span><br><span class="line">程序段 <span class="number">1</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="extern变量声明"><a href="#extern变量声明" class="headerlink" title="extern变量声明"></a>extern变量声明</h3><p>在一个文件中定义的全局变量，如果在其它文件里想使用，需要在前面加上extern</p><h3 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h3><p>有时候，我们希望函数中局部变量的值在<strong>函数调用结束之后不会消失，而仍然保留其原值</strong>。即它所占用的存储单元不释放，在<strong>下一次调用该函数时，其局部变量的值仍然存在，也就是上一次函数调用结束时的值</strong>。这时候，我们就应该将该局部变量用关键字 static 声明为“<strong>静态局部变量</strong>”。</p><p>静态变量的作用：<strong>保持变量内容的持久性</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">count</span><span class="params">()</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt;= <span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">            count();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">count</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*声明一个静态局部变量*/</span></span><br><span class="line">    <span class="type">static</span> num = <span class="number">0</span>;</span><br><span class="line">    num++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在该代码中，我们通过在 count() 函数里声明一个静态局部变量 num 来作为计数器。因为静态局部变量是在编译时赋初值的，且只赋初值一次，在程序运行时它已有初值。以后在每次调用函数时就<em><strong>不再重新赋初值，而是保留上次函数调用结束时的值</strong></em>。这样，count() 函数每次被调用的时候，静态局部变量 num 就会保持上一次调用的值，然后再执行自增运算，这样就实现了计数功能。同时，它又避免了使用全局变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span> <span class="title function_">FSM_ChangeState</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">xxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在C语言中，当一个函数前加上 static 关键字时，意味着该函数具有内部链接性（internal linkage），即该函数的作用范围被限制在当前编译单元内。对于这个函数而言，这意味着只有定义它的源文件以及包含它所在的头文件的其他源文件可以访问此函数，不会成为外部全局符号，从而避免不同编译单元之间产生符号冲突。</p><h3 id="const关键字"><a href="#const关键字" class="headerlink" title="const关键字"></a>const关键字</h3><p>程序开发人员可以在变量定义后，在程序的其他位置引用和修改变量。但程序中定义的一些变量，如圆周率PI&#x3D;3.14，黄金分割比例 g&#x3D;0.618，<em><strong>这些变量只需要被引用，不应该被修改</strong></em>。C语言中可以使用 const关键字修饰变量。</p><figure class="highlight cc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">float</span> pi = <span class="number">3.141592612</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f&quot;</span>,pi);</span><br></pre></td></tr></table></figure><h3 id="IO-volatile"><a href="#IO-volatile" class="headerlink" title="__IO(volatile)"></a>__IO(<strong>volatile</strong>)</h3><p><strong>volatile</strong>的含义为 <code>允许硬件改变变量的数值</code> 。告诉编译器不要优化这些代码</p><p><a href="https://blog.csdn.net/QWQ_DIODA/article/details/116712401">volatile 形变量可以被硬件改变</a>，在需要<strong>硬件</strong>改变变量的场合中不可或缺！！</p><p><img src="/2024/01/26/Embedded-C-language/image-20240114110255039.png" alt="image-20240114110255039"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">__IO <span class="type">uint16_t</span> ADC_ConvertedValue;  <span class="comment">// 用于保存转换后的ADC值 </span></span><br><span class="line"><span class="comment">// 中断服务函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ADC_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (ADC_GetITStatus(ADCx,ADC_IT_EOC)==SET) </span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 读取ADC的转换值</span></span><br><span class="line">ADC_ConvertedValue = ADC_GetConversionValue(ADCx);</span><br><span class="line">&#125;</span><br><span class="line">ADC_ClearITPendingBit(ADCx,ADC_IT_EOC);<span class="comment">//清除ADCx的中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">TaskPrintInfo</span> <span class="title">g_Task1Info</span> =</span> &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Task1&quot;</span>&#125;;</span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">TaskPrintInfo</span> <span class="title">g_Task2Info</span> =</span> &#123;<span class="number">0</span>, <span class="number">3</span>, <span class="string">&quot;Task2&quot;</span>&#125;;</span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">TaskPrintInfo</span> <span class="title">g_Task3Info</span> =</span> &#123;<span class="number">0</span>, <span class="number">6</span>, <span class="string">&quot;Task3&quot;</span>&#125;;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> g_LCDCanUse = <span class="number">1</span>;</span><br><span class="line"><span class="type">static</span> <span class="keyword">volatile</span> <span class="type">int</span> g_calc_end = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">uint64_t</span> g_time = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> g_sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//任务1 计算加法，并计算加法运算的时间，然后删除任务</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">CalcTask</span><span class="params">(<span class="type">void</span> *params)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">uint32_t</span> i = <span class="number">0</span>;</span><br><span class="line">  g_time = system_get_ns();</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10000000</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    g_sum += i;</span><br><span class="line">  &#125;</span><br><span class="line">  g_calc_end = <span class="number">1</span>;</span><br><span class="line">  g_time = system_get_ns() - g_time;</span><br><span class="line">  vTaskDelete(<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//任务2 当计算任务没有结束时，一直执行while循环，直到计算任务结束,g_cal_end变为1，则可进行后面的打印信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LcdPrintTask</span><span class="params">(<span class="type">void</span> *params)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> len;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    LCD_PrintString(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;waiting&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (g_calc_end == <span class="number">0</span>)</span><br><span class="line">      ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 打印信息 */</span></span><br><span class="line">    <span class="keyword">if</span> (g_LCDCanUse)</span><br><span class="line">    &#123;</span><br><span class="line">      g_LCDCanUse = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      LCD_ClearLine(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">      len = LCD_PrintString(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Sum:&quot;</span>);</span><br><span class="line">      LCD_PrintHex(len, <span class="number">0</span>, g_sum,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">      LCD_ClearLine(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">      len = LCD_PrintString(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&quot;Time(ms):&quot;</span>);</span><br><span class="line">      LCD_PrintSignedVal(len, <span class="number">2</span>, g_time/<span class="number">1000000</span>);</span><br><span class="line">      g_LCDCanUse = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vTaskDelete(<span class="literal">NULL</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  xTaskCreate(CalcTask, <span class="string">&quot;task1&quot;</span>, <span class="number">128</span>, <span class="literal">NULL</span>, osPriorityNormal, <span class="literal">NULL</span>);</span><br><span class="line">  xTaskCreate(LcdPrintTask, <span class="string">&quot;task2&quot;</span>, <span class="number">128</span>, &amp;g_Task2Info, osPriorityNormal, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><p>没有加volatile时，经过<strong>debug</strong>，发现程序一直会卡LcdPrintTask的while (g_calc_end &#x3D;&#x3D; 0);处，<strong>尽管在debug时显示g_calc_end为1还是一直卡在那里</strong>。这是因为在编译器做了一些优化，第一次使用这个变量时，它会去读内存，把这个变量的值读进CPU的某个寄存器，以后在任务2的那个while循环里，它一直都是去判断那个<strong>寄存器</strong>，但是那个寄存器得到的是这个变量原始的，老的值，它并<strong>没有每次都去内存里面读这个变量，更新那个寄存器</strong>，这是不对的，因为这个变量，是在其他任务里面被修改了，你去使用这个变量时，每次都应该去读内存，怎么办呢，<strong>在变量前加一个volatile就好了，告诉编译器，不要去优化它</strong>。</p><p>​“在多任务环境下，编译器通常会对变量进行优化以提高代码执行效率。当一个变量被标记为 volatile 时，它告诉编译器这个变量的值可能在程序控制范围之外发生变化（例如由中断服务程序、硬件操作或者其他并发任务修改），因此每次访问该变量时都会从内存中重新读取。<em>编译器对变量的优化通常基于以下几种情况</em>：</p><ol><li><p><strong>局部性原理</strong>：编译器假设在一段连续执行的代码中，如果一个变量没有被显示地修改（比如通过赋值、函数调用或指针间接访问），其值就不会改变。因此，在循环内多次读取同一变量时，编译器可能会将该变量从内存加载到寄存器中，并在整个循环期间使用寄存器中的值，以减少对内存的访问。</p></li><li><p><strong>数据流分析</strong>：编译器会进行数据依赖性分析，如果它能确定某个变量在当前作用域内不会受外部因素影响而改变，即使这个变量是全局的，也可能对其进行优化。</p></li><li><p><strong>跨函数优化</strong>：编译器还可能进行跨函数优化，例如当函数没有明确的副作用或者编译器能够推断出函数内部对全局变量的修改不会影响到当前上下文时，也会选择不重新加载变量。”</p><p>应当在以下情况下考虑使用 <code>volatile</code> 关键字来修饰变量：</p><ul><li>变量可能被<strong>中断服务程序修改</strong>。</li><li>变量位于<strong>多线程环境且不同线程间共享并修改该变量</strong>。</li><li>变量与硬件寄存器映射相关，硬件可能会在软件不可见的情况下更改它们的值。</li><li>变量用于信号量、事件标志或其他同步机制。</li></ul></li></ol><h3 id="union共同体（联合体）"><a href="#union共同体（联合体）" class="headerlink" title="union共同体（联合体）"></a>union共同体（联合体）</h3><h4 id="实现不同类型数据的转换"><a href="#实现不同类型数据的转换" class="headerlink" title="实现不同类型数据的转换"></a>实现不同类型数据的转换</h4><p><strong>C语言的union联合体，可实现不同类型数据的转换</strong></p><p>结构体和共用体的区别在于：结构体的各个成员会占用不同的内存，互相之间没有影响；而共用体的所有成员占用同一段内存，修改一个成员会影响其余所有成员。联合体占用的内存等于最长的成员占用的内存。共用体使用了内存覆盖技术，同一时刻只能保存一个成员的值，如果对新的成员赋值，就会把原来成员的值覆盖掉。</p><p><em>简单说就是你给联合体的一个变量赋值，然后表示联合体其中的另一个变量，之前那个赋值了的变量会自动赋给你要表示的这个量，从而实现不同类型数据的转换。</em></p><p><img src="/2024/01/26/Embedded-C-language/image-20240114200704804.png" alt="image-20240114200704804"></p><p><img src="/2024/01/26/Embedded-C-language/image-20240114192714039.png" alt="image-20240114192714039"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//memcpy函数有三个参数，第一个是目标地址（通常是数组的某一位的地址，即将数据从数组的这一位开始复制），第二个是源地址，第三个是数据长度。</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">floatToBytes</span><span class="params">(<span class="type">float</span> val, <span class="type">uint8_t</span>* bytes)</span> &#123;</span><br><span class="line">  <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">    <span class="type">float</span> floatVal;</span><br><span class="line">    <span class="type">uint8_t</span> byteVal[<span class="keyword">sizeof</span>(<span class="type">float</span>)];</span><br><span class="line">  &#125; data;</span><br><span class="line"></span><br><span class="line">  data.floatVal = val;<span class="comment">//共同体 val给共同体的data.floatVal后 如果用data.byteVal 共同体内data.floatVal中的数据会转变为byteVal[sizeof(float)]类型</span></span><br><span class="line">  <span class="built_in">memcpy</span>(bytes, data.byteVal, <span class="keyword">sizeof</span>(<span class="type">float</span>));<span class="comment">//共同体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="memcpy"><a href="#memcpy" class="headerlink" title="memcpy"></a>memcpy</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> *<span class="title function_">memcpy</span><span class="params">(<span class="type">void</span> *destin, <span class="type">void</span> *source, <span class="type">unsigned</span> n)</span>;</span><br></pre></td></tr></table></figure><p><strong>以source指向的地址为起点，将连续的n个字节数据，复制到以destin指向的地址为起点的内存中。</strong><br>函数有三个参数，第一个是目标地址（通常是数组的某一位的地址，即将数据从数组的这一位开始复制），第二个是源地址，第三个是数据长度。<br>数据长度（第三个参数）的单位是字节（1byte &#x3D; 8bit）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">floatToBytes</span><span class="params">(<span class="type">float</span> val, <span class="type">uint8_t</span>* bytes)</span> &#123;</span><br><span class="line">  <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">    <span class="type">float</span> floatVal;</span><br><span class="line">    <span class="type">uint8_t</span> byteVal[<span class="keyword">sizeof</span>(<span class="type">float</span>)];</span><br><span class="line">  &#125; data;</span><br><span class="line"></span><br><span class="line">  data.floatVal = val;<span class="comment">//共同体 val给共同体的data.floatVal后 如果用data.byteVal 共同体内data.floatVal中的数据会转变为byteVal[sizeof(float)]类型</span></span><br><span class="line">  <span class="built_in">memcpy</span>(bytes, data.byteVal, <span class="keyword">sizeof</span>(<span class="type">float</span>));<span class="comment">//共同体</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sendPacket</span><span class="params">(<span class="type">float</span> angle, <span class="type">float</span> x, <span class="type">float</span> y)</span> &#123;<span class="comment">//float有4个字节，32位</span></span><br><span class="line">  <span class="type">uint8_t</span> packet[<span class="number">14</span>];   <span class="comment">// 数据包共14个字节</span></span><br><span class="line">  <span class="comment">// 填充帧头</span></span><br><span class="line">  packet[<span class="number">0</span>] = FRAME_HEADER;</span><br><span class="line">  <span class="comment">// 填充数据</span></span><br><span class="line">  floatToBytes(angle, &amp;packet[<span class="number">1</span>]);<span class="comment">//从packet[1]的地址开始复制，数据依次复制到packet[1],packet[2],packet[3],packet[4]中</span></span><br><span class="line">  floatToBytes(x, &amp;packet[<span class="number">5</span>]);</span><br><span class="line">  floatToBytes(y, &amp;packet[<span class="number">9</span>]);</span><br><span class="line">  <span class="comment">// 填充帧尾</span></span><br><span class="line">  packet[<span class="number">13</span>] = FRAME_TAIL;</span><br><span class="line">  <span class="comment">// 使用串口发送数据包</span></span><br><span class="line">  HAL_UART_Transmit(&amp;huart1, packet, <span class="keyword">sizeof</span>(packet), HAL_MAX_DELAY);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="inline"><a href="#inline" class="headerlink" title="inline"></a>inline</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span> <span class="title function_">FSM_ChangeState</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">xxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​1.static：</p><p>​在C语言中，当一个函数前加上 static 关键字时，意味着该函数具有内部链接性（internal linkage），即该函数的作用范围被限制在当前编译单元内。对于这个函数而言，这意味着只有定义它的源文件以及包含它所在的头文件的其他源文件可以访问此函数，不会成为外部全局符号，从而避免不同编译单元之间产生符号冲突。</p><p>​2.inline：</p><p>​inline 关键字提示编译器尝试将函数体直接插入到每个调用该函数的地方（即“内联”），而不是通过正常的函数调用机制（如压栈、跳转等）。这样做的目的是减少函数调用的开销，尤其是当<em><strong>函数体较小且频繁调用时，能够提高程序运行效率。</strong></em><br>​注意，尽管有 inline 关键字，但是否真正进行内联处理由编译器决定，编译器会根据实际情况判断是否采纳程序员的建议。</p><p>综合上述解释，在状态机的上下文中，static inline void FSM_ChangeState() 函数可能用于快速切换状态，由于其内联特性，编译器可能会将状态切换的相关操作直接嵌入到调用处，以提升代码执行速度，并且由于是静态函数，其使用和实现细节被隐藏在当前编译单元内，不对外部模块可见，有助于封装和管理复杂度。</p><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><p><img src="/2024/01/26/Embedded-C-language/image-20240114192455610.png" alt="image-20240114192455610"></p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><h2 id="串口数据包通讯协议"><a href="#串口数据包通讯协议" class="headerlink" title="串口数据包通讯协议"></a>串口数据包通讯协议</h2><p>uint8_t packet[14];  &#x2F;&#x2F;packet数组的一位是一个字节,此packet含14个字节</p><p>串口接收鲁棒性高，采用校验帧头、帧尾以及数据长度的方式，确保接收数据的稳定性。</p><p>之前一直没用过帧头帧尾，主要是之前用串口传输的数据量都不大，如果要传输多种数据，就需要用帧头帧尾确保数据传输的准确性</p><p>(STM32通讯系列–串口通讯】使用标准库、HAL库实现任意长度数据的收发（包含帧头、帧尾校验，配套完整开源程序）</p><p><a href="https://blog.csdn.net/qq_44343584/article/details/125654421?ops_request_misc=%7B%22request_id%22:%22166299541816800182785614%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=166299541816800182785614&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-4-125654421-null-null.142">https://blog.csdn.net/qq_44343584/article/details/125654421?ops_request_misc=%7B%22request%5Fid%22%3A%22166299541816800182785614%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fall.%22%7D&amp;request_id=166299541816800182785614&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-4-125654421-null-null.142</a> )</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//packet.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;packet.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> host 1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> host<span class="comment">//发送数据包</span></span></span><br><span class="line"><span class="keyword">volatile</span> <span class="type">bool</span> packet_received = <span class="literal">false</span>;<span class="comment">//是否收到完整的数据包</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//转换单精度浮点数为字节</span></span><br><span class="line"><span class="comment">//@param1:浮点数</span></span><br><span class="line"><span class="comment">//@param2:字节</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">floatToBytes</span><span class="params">(<span class="type">float</span> val, <span class="type">uint8_t</span>* bytes)</span> &#123;</span><br><span class="line">  <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">    <span class="type">float</span> floatVal;</span><br><span class="line">    <span class="type">uint8_t</span> byteVal[<span class="keyword">sizeof</span>(<span class="type">float</span>)];</span><br><span class="line">  &#125; data;</span><br><span class="line"></span><br><span class="line">  data.floatVal = val;<span class="comment">//共同体 val给共同体的data.floatVal后 如果用data.byteVal 共同体内data.floatVal中的数据会转变为byteVal[sizeof(float)]类型</span></span><br><span class="line">  <span class="built_in">memcpy</span>(bytes, data.byteVal, <span class="keyword">sizeof</span>(<span class="type">float</span>));<span class="comment">//共同体</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* memcpy用法:</span></span><br><span class="line"><span class="comment">void *memcpy(void *destin, void *source, unsigned n);</span></span><br><span class="line"><span class="comment">以source指向的地址为起点，将连续的n个字节数据，复制到以destin指向的地址为起点的内存中。</span></span><br><span class="line"><span class="comment">函数有三个参数，第一个是目标地址，第二个是源地址，第三个是数据长度。</span></span><br><span class="line"><span class="comment">数据长度（第三个参数）的单位是字节（1byte = 8bit）。</span></span><br><span class="line"><span class="comment">一个float类型的函数有4个字节</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sendPacket</span><span class="params">(<span class="type">float</span> angle, <span class="type">float</span> x, <span class="type">float</span> y)</span> &#123;</span><br><span class="line">  <span class="type">uint8_t</span> packet[<span class="number">14</span>];   <span class="comment">// 数据包共14个字节</span></span><br><span class="line">  <span class="comment">// 填充帧头</span></span><br><span class="line">  packet[<span class="number">0</span>] = FRAME_HEADER;</span><br><span class="line">  <span class="comment">// 填充数据</span></span><br><span class="line">  floatToBytes(angle, &amp;packet[<span class="number">1</span>]);</span><br><span class="line">  floatToBytes(x, &amp;packet[<span class="number">5</span>]);</span><br><span class="line">  floatToBytes(y, &amp;packet[<span class="number">9</span>]);</span><br><span class="line">  <span class="comment">// 填充帧尾</span></span><br><span class="line">  packet[<span class="number">13</span>] = FRAME_TAIL;</span><br><span class="line">  <span class="comment">// 使用串口发送数据包</span></span><br><span class="line">  HAL_UART_Transmit(&amp;huart1, packet, <span class="keyword">sizeof</span>(packet), HAL_MAX_DELAY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//解析数据包</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="comment">// 定义缓冲区大小  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BUFFER_SIZE 64</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义缓冲区和指针</span></span><br><span class="line"><span class="type">uint8_t</span> buffer[BUFFER_SIZE];</span><br><span class="line"><span class="type">uint8_t</span>* p_buffer = buffer;<span class="comment">//指向buffer缓冲区首地址的指针</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义标志位，表示是否接收到完整的数据包</span></span><br><span class="line"><span class="keyword">volatile</span> <span class="type">bool</span> packet_received = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析数据包的函数 将数据包中数据赋给 angle x y</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ParseDataPacket</span><span class="params">(DataPacket* packet)</span> &#123;</span><br><span class="line">  <span class="type">uint8_t</span>* p = buffer + <span class="number">1</span>; <span class="comment">// 跳过帧头</span></span><br><span class="line">  <span class="built_in">memcpy</span>(&amp;packet-&gt;angle, p, <span class="keyword">sizeof</span>(<span class="type">float</span>)); <span class="comment">//buffer[1] buffer[2] buffer[3] buffer[4]</span></span><br><span class="line">  p += <span class="keyword">sizeof</span>(<span class="type">float</span>);<span class="comment">//指向buffer[5]</span></span><br><span class="line">  <span class="built_in">memcpy</span>(&amp;packet-&gt;x, p, <span class="keyword">sizeof</span>(<span class="type">float</span>));<span class="comment">//buffer[5] buffer[6] buffer[7] buffer[8]</span></span><br><span class="line">  p += <span class="keyword">sizeof</span>(<span class="type">float</span>);<span class="comment">//指向buffer[9]</span></span><br><span class="line">  <span class="built_in">memcpy</span>(&amp;packet-&gt;y, p, <span class="keyword">sizeof</span>(<span class="type">float</span>));<span class="comment">//buffer[9] buffer[10] buffer[11] buffer[12]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在串口接收中断中调用此函数，将接收到的数据存入缓冲区</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HandleReceivedData</span><span class="params">(<span class="type">uint8_t</span> data)</span> &#123;</span><br><span class="line">  <span class="comment">// 如果缓冲区已满，清空缓冲区</span></span><br><span class="line">  <span class="keyword">if</span> (p_buffer &gt;= buffer + BUFFER_SIZE) &#123;</span><br><span class="line">    p_buffer = buffer;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将数据存入缓冲区</span></span><br><span class="line">  *p_buffer++ = data;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 判断是否接收到完整的数据包</span></span><br><span class="line">  <span class="keyword">if</span> (p_buffer - buffer &gt;= <span class="keyword">sizeof</span>(DataPacket) + <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="comment">// 检查帧头和帧尾是否正确</span></span><br><span class="line">    <span class="keyword">if</span> (buffer[<span class="number">0</span>] ==FRAME_HEADER &amp;&amp; buffer[<span class="keyword">sizeof</span>(DataPacket) + <span class="number">1</span>] == FRAME_TAIL) &#123;</span><br><span class="line">      <span class="comment">// 接收到完整的数据包</span></span><br><span class="line">      packet_received = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 清空缓冲区</span></span><br><span class="line">    p_buffer = buffer;<span class="comment">//指针重新指向buffer数组首地址</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在主函数中调用此函数，处理接收到的数据包</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ProcessReceivedData</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// 如果接收到完整的数据包，则解析数据包</span></span><br><span class="line">  <span class="keyword">if</span> (packet_received) &#123;</span><br><span class="line">    DataPacket packet;</span><br><span class="line">    ParseDataPacket(&amp;packet);<span class="comment">//处理之后定义的packet中angle x y就有数据了 可以直接调用 eg: packet.angle</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理解析后的数据包，例如将数据包的内容显示到LCD屏幕上</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清除标志位</span></span><br><span class="line">    packet_received = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//**********************************************</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//// 在主函数中循环调用此函数，以处理接收到的数据</span></span><br><span class="line"><span class="comment">//void Loop() &#123;</span></span><br><span class="line"><span class="comment">//  // 处理接收到的数据包</span></span><br><span class="line"><span class="comment">//  ProcessReceivedData();</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  // 继续执行其他任务</span></span><br><span class="line"><span class="comment">//  // ...</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在中断中</span></span><br><span class="line"><span class="comment">//void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//    // 读取接收数据寄存器</span></span><br><span class="line"><span class="comment">//    uint8_t data = (uint8_t)(huart-&gt;Instance-&gt;RDR &amp; 0xFF);</span></span><br><span class="line"><span class="comment">//    </span></span><br><span class="line"><span class="comment">//    // 处理接收到的数据</span></span><br><span class="line"><span class="comment">//    HandleReceivedData(data);</span></span><br><span class="line"><span class="comment">//    </span></span><br><span class="line"><span class="comment">//    // 继续启动接收中断</span></span><br><span class="line"><span class="comment">//    HAL_UART_Receive_IT(huart, &amp;data, 1);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> PACKET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PACKET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f1xx_hal.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdbool.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FRAME_HEADER 0x7E   <span class="comment">// 帧头</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FRAME_TAIL 0x7F     <span class="comment">// 帧尾</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">  <span class="type">float</span> angle;</span><br><span class="line">  <span class="type">float</span> x;</span><br><span class="line">  <span class="type">float</span> y;</span><br><span class="line">&#125; DataPacket;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">floatToBytes</span><span class="params">(<span class="type">float</span> val, <span class="type">uint8_t</span>* bytes)</span>;<span class="comment">//转换单精度浮点数为字节</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sendPacket</span><span class="params">(<span class="type">float</span> angle, <span class="type">float</span> x, <span class="type">float</span> y)</span>;<span class="comment">//发送数据包</span></span><br><span class="line"><span class="comment">//bool parsePacket(uint8_t* packet, float* angle, float* x, float* y);//解析数据包</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ParseDataPacket</span><span class="params">(DataPacket* packet)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ProcessReceivedData</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/*PACKET_H*/</span></span></span><br></pre></td></tr></table></figure><h2 id="环形缓冲区"><a href="#环形缓冲区" class="headerlink" title="环形缓冲区"></a>环形缓冲区</h2><p><strong>环形缓冲区</strong>是<a href="https://so.csdn.net/so/search?q=%E5%B5%8C%E5%85%A5%E5%BC%8F&spm=1001.2101.3001.7020">嵌入式</a>系统中十分重要的一种数据结构，比如在<strong>串口</strong>处理中，串口中断接收数据直接往环形缓冲区丢数据，而应用可以从环形缓冲区取数据进行处理，这样数据在读取和写入的时候都可以在这个缓冲区里循环进行，程序员可以根据自己需要的数据大小来决定自己使用的缓冲区大小，<strong>不用担心数组越界</strong>。</p><p><strong>队列</strong>的基本概念：队列 (Queue)：是一种先进先出(First In First Out ,简称 FIFO)的线性表，只允许在一端插入（入队），在另一端进行删除（出队）。</p><p>队列头就是指向已经存储的数据，并且这个数据是待处理的。下一个CPU处理的数据就是1；而队列尾则指向可以进行写数据的地址。</p><p><strong>队列是什么</strong></p><p>队列是一种很常见的数据结构，满足先进先出的方式，如果我们设定队列的最大长度，那就意味着进队列和出队列的元素的数量实则满足一种动态平衡。</p><p>如果我们把首次添加入队列的元素作为一个一维坐标的原点，那么随着队列中元素的添加，坐标原点到队尾元素的长度会无穷无尽的增大，随这之前添入的元素不断出列，对头对应的下标点也在不断增大。这样，进队列和出队列的元素的数量就对应到对头和队尾下标点的移动</p><p>因此我们评判一个队列长度是否溢出原先约定的最大长度，实则就是在评判队尾坐标点与队头坐标点之间的差值，无论是出队列还是入队列，队头和队尾的坐标都在不断增大</p><p><img src="/2024/01/26/Embedded-C-language/84497721b6c4413c8558e4266b886ddc.png" alt="img"></p><p><strong>front指针和rear指针的引入</strong></p><p>虽然队尾和队头的下标在不断增大，但是我们对于队列的研究只需要局限在队头与队尾之间的元素，坐标原点到队头之间的元素已经算作出列元素，并不需要研究。因此我们不妨将队列在逻辑上放入一个事先设定容量的一维数组中，只要这个数组的容量是队列中元素的个数+1就行，为什么要这么设定待会再讲。我们想要达到的目的是，无论出列还是入列，本质上是通过修改数组中元素的值，那些已经出列的元素所在的下标位需要放置新入列的元素，并在逻辑上保证新入列元素位于队尾就行。</p><p>因此，我们不得不得引入头指针front和尾指针rear，对指针指向的数组下标对应空间进行操作，来修改数组中元素的值。</p><p><strong>front指针和rear指针的理解</strong></p><p>front：初始值为0，对应索引位待出列，若当前指向的数组下标的元素要出列，则先执行出列动作(实际上不用操作，出列的索引位可以被新入队的元素覆盖)，随后front指针就要向后一位，即front++</p><p>rear：初始值为0，对应索引位待入列，若当前指向的数组下标有元素要入列，则先执行入列动作（索引位元素赋值），随后front指针就要向后一位，即rear++</p><p><strong>队列最大长度匹配数组容量导致一种错误的解决方案</strong></p><p>这就会有一个问题，随着队列中元素的不断更迭，front和rear很快就会超过数组容量，造成数组索引越界</p><p><img src="/2024/01/26/Embedded-C-language/dd50472cf4ba4aad8fe5e565ccfe39de.png" alt="img"></p><p>比如上图所示，front&#x3D;2，也就是说已经有两个元素出列了，因此rear&#x3D;5与rear&#x3D;6对应的两个元素理应可以入列，但是我们发现数组maxsize&#x3D;5，不存在索引位5和6，强行对这两个下标赋值会造成索引越界异常indexOutException 。但是我们发现此时数组中索引位0和1都空着，完全可以将这两个位置利用起来，因此我们可以想办法让实际的rear值转化为等效的rear值，也就是是让rear&#x3D;5转化为rear&#x3D;0，同理rear6转化为rear&#x3D;1。怎么做到呢？无疑是通过取余！</p><p>每次新元素入队后， 执行rear&#x3D;(rear)%maxSize操作，随后执行rear++操作右移rear指针</p><p>像上图中的rear&#x3D;rear%5乍一看好像没问题，但实际上这种取余方式是有问题的，出现这种取余方式的根源在于我们想让队列最大长度与数组容量保持一致，下文会详细说明这种解决方案的错误之处。</p><p><strong>指针的往复移动：逻辑上的环形</strong></p><p>出队和入队的方向是从右向左，而front与rear指针的移动方向却是从左到右循环往复（指向数组末尾后按照取余算法又重置为数组开头），因此我们可以把单向数组在逻辑上理解成环形数组，指针的循环往复移动理解成按照顺时针或逆时针（只要规定某一方向就好）单向移动</p><p>  环形队列小知识：</p><p>  环形队列是在实际编程极为有用的数据结构,它有如下特点。</p><p>  它是一个首尾相连的FIFO的数据结构，采用数组的线性空间,数据组织简单。能很快知道队列是否满为空。能以很快速度的来存取数据。</p><p>   因为有简单高效的原因，甚至在硬件都实现了环形队列。 </p><p>   环形队列广泛用于网络数据收发，和不同程序间数据交换（比如内核与应用程序大量交换数据,从硬件接收大量数据）均使用了环形队列。</p><p><strong>队列为空的判别</strong></p><p>我们怎么判断队列为空呢？</p><p>如果我们按照指针从左到右的方向移动，当front指针和rear指针重合时，front指针对应的索引位之前的索引位都已经出列完毕，而rear指针对应的索引位以及之后的所有索引位还未有元素入列。</p><p>所以队列是否为空的判别：front&#x3D;&#x3D;rear</p><p><img src="/2024/01/26/Embedded-C-language/a053efb0385e4714b8889ecd98ba2d31.png" alt="img"></p><p><strong>rear&#x3D;rear%maxSize解决方案的问题</strong></p><p> 入队图示<br>下图展示了maxSize&#x3D;5的数组中，front&#x3D;0保持不变，元素依次入列直到满载，rear指针的移动情况：</p><p><img src="/2024/01/26/Embedded-C-language/42a1d7c1976b4e7db62cd01c7b7c2fdc.png" alt="img"></p><p> front&#x3D;rear&#x3D;0的歧义<br> 可以看到，如果我们认为队列容量与数组容量应该持平，那么当第五个元素50入列后，本来rear&#x3D;4执行了rear++的操作后，rear&#x3D;5，随后rear将会通过取余算法rear&#x3D;rear%maxSize重置为0，这是我们解决方案的核心！</p><p>但关键点就在这里，我们发现空载时front&#x3D;rear&#x3D;0，满载时依然有front&#x3D;rear&#x3D;0！这样子我们就无法判断front&#x3D;rear时，队列是空还是满，因此rear&#x3D;rear%maxSize这种解决方案是不被允许的</p><p><strong>新的解决方案：置空位的引入</strong></p><p>新的解决方案<br>       每次新元素入队后， 执行rear&#x3D;(rear+1)%maxSize操作，该操作包含rear++操作</p><p>置空位的引入<br>       并且我们人为规定，数组中必须留有一个索引位不得放置元素，必须置空！！！如何实现我们的人为规定呢？那就要先探索当数组满载后front和rear指针之间有啥关系</p><p> 入队图示<br>下图展示了maxSize&#x3D;5的数组中，front&#x3D;0保持不变，元素依次入列直到满载，rear指针的移动情况：</p><p><img src="/2024/01/26/Embedded-C-language/fc276df1cfb14836b200b9ab1791347a.png" alt="img"></p><pre><code>   人为的让最后一位置空，所以当元素40入列后，数组已经满载   满载后数据之间的关系：</code></pre><p>front&#x3D;0<br>rear&#x3D;(rear+1)%maxSize&#x3D;(3+1)%5&#x3D;4  (注： 执行完arr[rear]&#x3D;40，再执行  rear&#x3D;(rear+1)%maxSize)<br>(rear+1)%maxSize&#x3D;(4+1)%5&#x3D;0&#x3D;front<br>       当我们认为的满载发生后，最后一位置空，发现此时rear和front之间的关系为(rear+1)%maxSize&#x3D;(4+1)%5&#x3D;0&#x3D;front，因此这个关系可以作为满载的条件</p><pre><code>   因为处于满载状态，我们无法再往队列添加元素，只能从队列取出元素，也就是进行出列的操作，而一旦我们执行了出列的操作，比如将索引位i=0上的元素10出列后，则front右移，即执行front=(front+1)%maxSize操作，最终front=1。   若随后又添加元素入列，即在索引位i=4上添加元素50，随后又会执行rear=(rear+1)%maxSize操作，最终rear=0。   rear=0≠front=1，此时就不会出现之前那种错误方案中 rear=front=0导致歧义的情况，而一旦 rear=front=0，必然表示队列为空，因此这种解决方案是行得通的</code></pre><p><strong>队列为满的判别</strong></p><p>​      当我们认为的满载发生后，最后一位置空，发现此时rear和front之间的关系为(rear+1)%maxSize&#x3D;(4+1)%5&#x3D;0&#x3D;front，因此这个关系可以作为满载的条件</p><p><strong>队列中元素的个数</strong></p><p>​      numValid&#x3D;(rear+maxSize-front)%maxSize，大家可以带入数据验证一下</p><pre><code> 实际上：   当rear在front之后(这里指的是数组中索引位的前后，并非逻辑上的前后)，有效数据个数=rear-front=(rear+maxSize-front)%maxSize   当rear在front之前(这里指的是数组中索引位的前后，并非逻辑上的前后)，有效数据个数=(rear+maxSize-front)%maxSize</code></pre><p><strong>值得注意的一些细节</strong></p><p>细节1<br>      置空位虽然是人为引入的，但这不意味这置空位的位置是随意的，实际上，只有队列满后才会将剩下的位置作为置空位，一旦置空位出现，rear和front永远不可能指向同一个索引位，因为你会惊奇的发现置空位恰号将rear和front隔开了.</p><pre><code> 置空位就像一把锁，一旦上锁就只能通过出队列操作解锁</code></pre><p>继续执行获取元素操作出队列（解锁）：</p><p><img src="/2024/01/26/Embedded-C-language/bda71bd117674644bbe8c8c44c782aa3.png" alt="img"></p><p>上图中60入列后满载，可以看到置空位再次出现，但30➡40➡50➡60➡置空位 形成了逻辑上的闭环</p><p>细节2<br>从闭环的角度理解，front永远不可能在循环中超过rear，最多只能和rear相遇。</p><p>因为置空位的出现，rear不可能拉front一圈，也就避免了rear在超过front的情况下主动与front相遇</p><p>下图中的maxSize-1对应的就是置空位，rear是无法越过置空位的。只有front主动顺时针追赶上rear，它俩才会相遇，而此时队列内就没有元素，为空</p><p><img src="/2024/01/26/Embedded-C-language/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Mjk2NDE3,size_16,color_FFFFFF,t_70.png" alt="img"></p><p> 细节3<br>队列的最大长度queueMaxsize&#x3D;数组容量arrayMaxSize-1  （由于置空位要占一位）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> RINGBUFF_LEN 256;</span></span><br><span class="line"><span class="comment">//定义一个缓冲区结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    u16 Head;           </span><br><span class="line">    u16 Tail;</span><br><span class="line">    u8 Ring_Buff[RINGBUFF_LEN];</span><br><span class="line">&#125;RingBuff_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*若想更灵活，可以用动态内存分配方式（如使用指针）来实现可变长度的缓冲区</span></span><br><span class="line"><span class="comment">typedef struct</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">u16 Head;</span></span><br><span class="line"><span class="comment">u16 Tail;</span></span><br><span class="line"><span class="comment">u8* Ring_Buff;</span></span><br><span class="line"><span class="comment">&#125;RingBuff_t;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">// 初始化函数，传入所需长度</span></span><br><span class="line"><span class="comment">void RingBuff_Init(RingBuff_t rbuff, size_t len)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    rbuff-&gt;Head = 0;</span></span><br><span class="line"><span class="comment">    rbuff-&gt;Tail = 0;</span></span><br><span class="line"><span class="comment">    rbuff-&gt;Ring_Buff = (u8)malloc(len * sizeof(u8));</span></span><br><span class="line"><span class="comment">    if (!rbuff-&gt;Ring_Buff) &#123;</span></span><br><span class="line"><span class="comment">    // 处理内存分配失败的情况...</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">在C语言中，u8* Ring_Buff; 是一个指向无符号8位整型（通常代表字节）的指针。它本身并不是一个数组，但可以用来指向一块内存区域，这块内存可以被当作数组来处理。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">当你通过 malloc 函数为 Ring_Buff 分配了足够长度的内存后，你就可以像操作数组那样对这块内存进行读写</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个ringBuff的缓冲区</span></span><br><span class="line">RingBuff_t ringBuff;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化环形缓冲区</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RingBuff_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//初始化相关信息</span></span><br><span class="line">   ringBuff.Head = <span class="number">0</span>;</span><br><span class="line">   ringBuff.Tail = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line">u8 <span class="title function_">Write_RingBuff</span><span class="params">(u8 data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(ringBuff.Head=(ringBuff.Tail+<span class="number">1</span>)%maxSize) <span class="comment">//缓冲区满</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> FLASE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ringBuff.Ring_Buff[ringBuff.Tail]=data;<span class="comment">//在Tail对应索引位写入数据</span></span><br><span class="line">    ringBuff.Tail=(ringBuff.Tail+<span class="number">1</span>)%RINGBUFF_LEN; <span class="comment">//ringBuff.Tail++; 防止越界非法访问</span></span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读数据</span></span><br><span class="line"><span class="number">10u</span>8 Read_RingBuff(u8 *rData)</span><br><span class="line"><span class="number">11</span>&#123;</span><br><span class="line"><span class="number">12</span>   <span class="keyword">if</span>(ringBuff.Head==ringBuff.Tail)<span class="comment">//判断非空</span></span><br><span class="line"><span class="number">13</span>    &#123;</span><br><span class="line"><span class="number">14</span>       <span class="keyword">return</span> FLASE;</span><br><span class="line"><span class="number">15</span>    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="number">16</span>   *rData = ringBuff.Ring_Buff[ringBuff.Head];<span class="comment">//先进先出FIFO，从缓冲区头出</span></span><br><span class="line"></span><br><span class="line"><span class="number">18</span>   ringBuff.Head = (ringBuff.Head+<span class="number">1</span>)%RINGBUFF_LEN;<span class="comment">// ringBuff.Head++;防止越界非法访问</span></span><br><span class="line">    </span><br><span class="line"><span class="number">20</span>   <span class="keyword">return</span> TRUE;</span><br><span class="line"><span class="number">21</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="基于状态机"><a href="#基于状态机" class="headerlink" title="基于状态机"></a>基于状态机</h2><p>当“喂一口饭”、“回一个信息”都需要花很长的时间，无论使用前面的哪种设计模式，都会退化到轮询模式的缺点：函数相互之间有影响。可以使用状态机来解决这个缺点，示例代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 状态机</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        喂一口饭();</span><br><span class="line">        回一个信息();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在main函数里，还是使用轮询模式依次调用2个函数。</p><p>关键在于这2个函数的内部实现：<strong>使用状态机，每次只执行一个状态的代码，减少每次执行的时间</strong>，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> 喂一口饭(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> state = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">switch</span> (state)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 舀饭 */</span></span><br><span class="line">            <span class="comment">/* 进入下一个状态 */</span></span><br><span class="line">            state++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 喂饭 */</span></span><br><span class="line">            <span class="comment">/* 进入下一个状态 */</span></span><br><span class="line">            state++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 舀菜 */</span></span><br><span class="line">            <span class="comment">/* 进入下一个状态 */</span></span><br><span class="line">            state++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 喂菜 */</span></span><br><span class="line">            <span class="comment">/* 恢复到初始状态 */</span></span><br><span class="line">            state = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 回一个信息(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> state = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (state)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 查看信息 */</span></span><br><span class="line">            <span class="comment">/* 进入下一个状态 */</span></span><br><span class="line">            state++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 打字 */</span></span><br><span class="line">            <span class="comment">/* 进入下一个状态 */</span></span><br><span class="line">            state++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 发送 */</span></span><br><span class="line">            <span class="comment">/* 恢复到初始状态 */</span></span><br><span class="line">            state = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以“喂一口饭”为例，函数内部拆分为4个状态：舀饭、喂饭、舀菜、喂菜。每次执行“喂一口饭”函数时，都只会执行其中的某一状态对应的代码。以前执行一次“喂一口饭”函数可能需要4秒钟，现在可能只需要1秒钟，就<strong>降低了对后面“回一个信息”的影响。</strong></p><p>同样的，“回一个信息”函数内部也被拆分为3个状态：查看信息、打字、发送。每次执行这个函数时，都只是执行其中一小部分代码，降低了对“喂一口饭”的影响。</p><p><strong>使用状态机模式，可以解决裸机程序的难题：假设有A、B两个都很耗时的函数，怎样降低它们相互之间的影响。但是很多场景里，函数A、B并不容易拆分为多个状态，并且这些状态执行的时间并不好控制。所以这并不是最优的解决方法，需要使用多任务系统。</strong></p><h2 id="FSM状态机"><a href="#FSM状态机" class="headerlink" title="FSM状态机"></a>FSM状态机</h2><p>首先初始化FSM状态机，FSM_Init(PASSIVE);</p><p>在一个while(1)中运行FSM_Run();</p><p>在外部触发条件下使用FSM_SetState( )来设置想切换的模式;此过程中FSM模式变为CHANGE模式（FSM.mode &#x3D; CHANGE;）</p><p>FSM的下一个状态变为FSM.nextState &#x3D; state；  </p><p>这样在FSM_Run();中 首先运行FSM.exit();  即当前的状态的exit函数，然后使用FSM_ChangeState();函数将FSM的进入，运行，退出函数改成要切换的状态所对应的  （每一个状态写一个单独的.c.h文件，然后所有.h文件放到FSM.h中，FSM.c文件直接用FSM.h就行）</p><p>​    </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FSM.enter = Passive_Enter;</span><br><span class="line"></span><br><span class="line">FSM.run = Passive_Run;</span><br><span class="line"></span><br><span class="line">FSM.<span class="built_in">exit</span> = Passive_Exit;</span><br></pre></td></tr></table></figure><p>然后就是该状态的进入函数，此时切换状态这一过程已经结束了，FSM模式变为NOMARL模式，然后运行该状态的运行函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*FSM.c*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;FSM.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">FSM_t FSM;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 状态切换 */</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span> <span class="title function_">FSM_ChangeState</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 当前状态为下一个状态 */</span></span><br><span class="line">    FSM.currentState = FSM.nextState;</span><br><span class="line">    <span class="comment">/* 设置当前函数指针 */</span></span><br><span class="line">    <span class="keyword">switch</span> (FSM.nextState)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> FIXEDSTAND:</span><br><span class="line">        FSM.enter = FixedStand_Enter;</span><br><span class="line">        FSM.run = FixedStand_Run;</span><br><span class="line">        FSM.<span class="built_in">exit</span> = FixedStand_Exit;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">case</span> TROTING:</span><br><span class="line">        FSM.enter = Troting_Enter;</span><br><span class="line">        FSM.run = Troting_Run;</span><br><span class="line">        FSM.<span class="built_in">exit</span> = Troting_Exit;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WALKING:</span><br><span class="line">        FSM.enter = Walking_Enter;</span><br><span class="line">        FSM.run = Walking_Run;</span><br><span class="line">        FSM.<span class="built_in">exit</span> = Walking_Exit;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> JUMP:</span><br><span class="line">        FSM.enter = Jump_Enter;</span><br><span class="line">        FSM.run = Jump_Run;</span><br><span class="line">        FSM.<span class="built_in">exit</span> = Jump_Exit;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 有限状态机初始化 */</span></span><br><span class="line"><span class="keyword">inline</span> <span class="type">void</span> <span class="title function_">FSM_Init</span><span class="params">(FSMState_e state)</span></span><br><span class="line">&#123;</span><br><span class="line">    FSM.currentState = state;</span><br><span class="line">    FSM.nextState = state;</span><br><span class="line">    FSM_ChangeState();</span><br><span class="line">    FSM.enter();</span><br><span class="line">    FSM.mode = NORMAL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 有限状态机运行 */</span></span><br><span class="line"><span class="keyword">inline</span> <span class="type">void</span> <span class="title function_">FSM_Run</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (FSM.mode == NORMAL)</span><br><span class="line">    &#123;</span><br><span class="line">        FSM.run(); <span class="comment">// In normal mode, run current state.</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (FSM.mode == CHANGE)</span><br><span class="line">    &#123;</span><br><span class="line">        FSM.<span class="built_in">exit</span>(); <span class="comment">// In changing mode, run the exit function for previous state,</span></span><br><span class="line">        FSM_ChangeState();</span><br><span class="line">        </span><br><span class="line">        FSM.enter(); <span class="comment">// and run the enter function for next state.</span></span><br><span class="line">        FSM.mode = NORMAL;</span><br><span class="line">        FSM.run(); <span class="comment">// then run the run function for current state.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 有限状态机设置状态 */</span></span><br><span class="line"><span class="keyword">inline</span> <span class="type">void</span> <span class="title function_">FSM_SetState</span><span class="params">(FSMState_e state)</span></span><br><span class="line">&#123;</span><br><span class="line">    FSM.mode = CHANGE;</span><br><span class="line">    FSM.nextState = state;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*FSM.h*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> FSM_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FSM_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Global.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_FixedStand.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_Passive.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_Troting.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_Fall.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_Walking.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_Jump.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_Jump2.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_JumpL.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_JumpL2.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_JumpR.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_JumpR2.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_catJump.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;State_catJump2.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    NORMAL,</span><br><span class="line">    CHANGE,</span><br><span class="line">&#125; FSMMode_e;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    PASSIVE = <span class="number">1</span>,    <span class="comment">// 阻尼</span></span><br><span class="line">    FALL = <span class="number">2</span>,       <span class="comment">// 卧倒</span></span><br><span class="line">    FIXEDSTAND = <span class="number">3</span>, <span class="comment">// 固定站立</span></span><br><span class="line">    FREESTAND = <span class="number">4</span>,  <span class="comment">// 自由站立</span></span><br><span class="line">    TROTING = <span class="number">5</span>,    <span class="comment">// 对角步态</span></span><br><span class="line">    WALKING = <span class="number">6</span>,    <span class="comment">// 行走步态</span></span><br><span class="line">    JUMP = <span class="number">7</span>,       <span class="comment">// 跳跃</span></span><br><span class="line">    JUMP2 = <span class="number">8</span>,      <span class="comment">// 跳跃2</span></span><br><span class="line">    JUMPL = <span class="number">9</span>,</span><br><span class="line">    JUMPL2 = <span class="number">10</span>,</span><br><span class="line">    JUMPR = <span class="number">11</span>,</span><br><span class="line">    JUMPR2 = <span class="number">12</span>,</span><br><span class="line">    catJUMP = <span class="number">13</span>,</span><br><span class="line">    catJUMP2 = <span class="number">14</span>,</span><br><span class="line">&#125; FSMState_e;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    FSMMode_e mode;</span><br><span class="line">    FSMState_e currentState;</span><br><span class="line">    FSMState_e nextState;</span><br><span class="line"></span><br><span class="line">    <span class="type">void</span> (*enter)(<span class="type">void</span>); <span class="comment">//函数指针，见前面章节</span></span><br><span class="line">    <span class="type">void</span> (*run)(<span class="type">void</span>);</span><br><span class="line">    <span class="type">void</span> (*<span class="built_in">exit</span>)(<span class="type">void</span>);</span><br><span class="line">&#125; FSM_t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> FSM_t FSM;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">FSM_Init</span><span class="params">(FSMState_e state)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">FSM_Run</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">FSM_SetState</span><span class="params">(FSMState_e state)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p><img src="/2024/01/26/Embedded-C-language/image-20240116005300807.png" alt="image-20240116005300807"></p><h2 id="PID算法"><a href="#PID算法" class="headerlink" title="PID算法"></a>PID算法</h2><p><em><strong>概念</strong></em></p><p>PID，就是“比例（proportional）、积分（integral）、微分（derivative）</p><p>它可以将需要控制的物理量带到目标附近</p><p>它可以“预见”这个量的变化趋势</p><p>它也可以消除因为散热、阻力等因素造成的静态误差</p><p><strong>kP</strong></p><p>实际写程序时，<strong>就让偏差（目标减去当前）与调节装置的“调节力度”，建立一个一次函数的关系</strong>，就可以实现最基本的“比例”控制了~<br>kP越大，调节作用越激进，kP调小会让调节作用更保守。</p><p>刚才我们有了P的作用。你不难发现，只有P好像不能让平衡车站起来，水温也控制得晃晃悠悠，好像整个系统不是特别稳定，总是在“抖动”。</p><p><strong>kD</strong> </p><p><em><strong>阻尼</strong></em>， kD参数越大，向速度相反方向刹车的力道就越强。</p><p><strong>KI</strong> </p><p>设置一个积分量。只要偏差存在，就不断地对偏差进行积分（累加），并反应在调节力度上。</p><p>I的作用就是，减小静态情况下的误差（消除稳态误差），让受控物理量尽可能接近目标值。</p><p>在使用时还有个问题：需要设定积分限制。防止在刚开始加热时，就把积分量积得太大，难以控制。</p><p><em><strong>使用</strong></em></p><p><em><strong>需要及时更新数据，一般是写个while循环使用pid_calc，延时几毫秒更新1次</strong></em></p><p>1.DJ</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PID.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PID初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PID_Init</span><span class="params">(PID_t *pid, <span class="type">float</span> kp, <span class="type">float</span> ki, <span class="type">float</span> kd, <span class="type">float</span> max_out, <span class="type">float</span> max_iout)</span></span><br><span class="line">&#123;</span><br><span class="line">    pid-&gt;Kp = kp;</span><br><span class="line">    pid-&gt;Ki = ki;</span><br><span class="line">    pid-&gt;Kd = kd;</span><br><span class="line">    pid-&gt;max_out = max_out;</span><br><span class="line">    pid-&gt;max_iout = max_iout;</span><br><span class="line">    pid-&gt;err[<span class="number">0</span>] = pid-&gt;err[<span class="number">1</span>] = <span class="number">0.0f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PID计算, 输入反馈值和预期值</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">PID_Calc</span><span class="params">(PID_t *pid, <span class="type">float</span> fdb, <span class="type">float</span> <span class="built_in">set</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    pid-&gt;<span class="built_in">set</span> = <span class="built_in">set</span>;</span><br><span class="line">    pid-&gt;fdb = fdb;</span><br><span class="line">    pid-&gt;err[<span class="number">1</span>] = pid-&gt;err[<span class="number">0</span>];</span><br><span class="line">    pid-&gt;err[<span class="number">0</span>] = pid-&gt;<span class="built_in">set</span> - pid-&gt;fdb;</span><br><span class="line"></span><br><span class="line">    pid-&gt;Pout = pid-&gt;Kp * pid-&gt;err[<span class="number">0</span>];</span><br><span class="line">    pid-&gt;Iout += pid-&gt;Ki * pid-&gt;err[<span class="number">0</span>];</span><br><span class="line">    pid-&gt;Dout = pid-&gt;Kd * pid-&gt;err[<span class="number">0</span>] - pid-&gt;err[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pid-&gt;Iout &gt; pid-&gt;max_iout)</span><br><span class="line">    &#123;</span><br><span class="line">        pid-&gt;Iout = pid-&gt;max_iout;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pid-&gt;Iout &lt; -pid-&gt;max_iout)</span><br><span class="line">    &#123;</span><br><span class="line">        pid-&gt;Iout = -pid-&gt;max_iout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pid-&gt;out = pid-&gt;Pout + pid-&gt;Iout + pid-&gt;Dout;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pid-&gt;out &gt; pid-&gt;max_out)</span><br><span class="line">    &#123;</span><br><span class="line">        pid-&gt;out = pid-&gt;max_out;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pid-&gt;out &lt; -pid-&gt;max_out)</span><br><span class="line">    &#123;</span><br><span class="line">        pid-&gt;out = -pid-&gt;max_out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pid-&gt;out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PID_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PID_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdint.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">float</span> Kp;</span><br><span class="line">    <span class="type">float</span> Ki;</span><br><span class="line">    <span class="type">float</span> Kd;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> max_out;  <span class="comment">// 最大输出</span></span><br><span class="line">    <span class="type">float</span> max_iout; <span class="comment">// 最大积分输出</span></span><br><span class="line">    <span class="type">float</span> err[<span class="number">2</span>];   <span class="comment">// 误差及上一次误差</span></span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> <span class="built_in">set</span>;</span><br><span class="line">    <span class="type">float</span> fdb;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> out;</span><br><span class="line">    <span class="type">float</span> Pout;</span><br><span class="line">    <span class="type">float</span> Iout;</span><br><span class="line">    <span class="type">float</span> Dout;</span><br><span class="line">&#125; PID_t;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PID_Init</span><span class="params">(PID_t *pid, <span class="type">float</span> kp, <span class="type">float</span> ki, <span class="type">float</span> kd, <span class="type">float</span> max_out, <span class="type">float</span> max_iout)</span>;</span><br><span class="line"><span class="type">float</span> <span class="title function_">PID_Calc</span><span class="params">(PID_t *pid, <span class="type">float</span> fdb, <span class="type">float</span> <span class="built_in">set</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.电机位置环</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*pid.c*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bsp_pid.h&quot;</span></span></span><br><span class="line"><span class="comment">//1 0.10 0.1</span></span><br><span class="line"><span class="type">float</span> Position_KP=<span class="number">0.5</span>,Position_KI=<span class="number">0.00</span>,Position_KD=<span class="number">0.09</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Position_PID</span><span class="params">(<span class="type">int</span> reality,<span class="type">int</span> target)</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">static</span> <span class="type">float</span> Bias,Pwm,Last_Bias,Integral_bias;</span><br><span class="line">     </span><br><span class="line">    Bias=target-reality;                            <span class="comment">/* 计算偏差 */</span></span><br><span class="line">    Integral_bias+=Bias;                        <span class="comment">/* 偏差累积 */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(Integral_bias&gt; <span class="number">3000</span>) Integral_bias = <span class="number">3000</span>;   <span class="comment">/* 积分限幅 */</span></span><br><span class="line">    <span class="keyword">if</span>(Integral_bias&lt;<span class="number">-3000</span>) Integral_bias =<span class="number">-3000</span>;</span><br><span class="line">    </span><br><span class="line">    Pwm = (Position_KP*Bias)                        <span class="comment">/* 比例环节 */</span></span><br><span class="line">         +(Position_KI*Integral_bias)               <span class="comment">/* 积分环节 */</span></span><br><span class="line">         +Position_KD*(Bias-Last_Bias);             <span class="comment">/* 微分环节 */</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(Pwm&gt;<span class="number">4000</span>) Pwm=<span class="number">4000</span>;</span><br><span class="line"><span class="keyword">if</span>(Pwm&lt;<span class="number">-4000</span>) Pwm=<span class="number">-4000</span>;</span><br><span class="line"><span class="comment">/*if(Pwm&gt;0&amp;&amp;Pwm&lt;1000)</span></span><br><span class="line"><span class="comment">Pwm=1000;</span></span><br><span class="line"><span class="comment">if(Pwm&lt;0&amp;&amp;Pwm&gt;-1000)</span></span><br><span class="line"><span class="comment">Pwm=-1000;*/</span></span><br><span class="line"></span><br><span class="line">    Last_Bias=Bias;                                 <span class="comment">/* 保存上次偏差 */</span></span><br><span class="line">    <span class="keyword">return</span> Pwm;                                     <span class="comment">/* 输出结果 */</span>              </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>应用案例</strong></em></p><p><strong>循迹</strong>（写的不太好，看看就行）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">app_linewalking2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">bsp_GetLineWalking1(&amp;SADC1);</span><br><span class="line"><span class="keyword">if</span>(SADC1)</span><br><span class="line">&#123;</span><br><span class="line">Systick_Delay_ms(<span class="number">5</span>);</span><br><span class="line">bsp_GetLineWalking1(&amp;SADC1);</span><br><span class="line"><span class="keyword">if</span>(SADC1)</span><br><span class="line">&#123;</span><br><span class="line">car_STOP();</span><br><span class="line">Systick_Delay_ms(<span class="number">5</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Car_Run(<span class="number">10</span>,<span class="number">0.5</span>,<span class="number">3000</span>,<span class="number">3000</span>,<span class="number">3000</span>,<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Car_Run</span><span class="params">(<span class="type">float</span> kp,<span class="type">float</span> kd, <span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c, <span class="type">int</span> d)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">MOTOR1_state(GO);       </span><br><span class="line">MOTOR2_state(GO);</span><br><span class="line">MOTOR4_state(GO);</span><br><span class="line">MOTOR3_state(GO);       </span><br><span class="line"></span><br><span class="line">Speed_1(PWMA(kp,kd,a));Speed_2(PWMB(kp,kd,b));Speed_3(PWMC(kp,kd,c));Speed_4(PWMD(kp,kd,d));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">PWMA</span> <span class="params">(u16 kp,u16 kd, u16 basic)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">double</span> error;</span><br><span class="line"><span class="type">double</span> mistake;</span><br><span class="line"><span class="type">double</span> fix1speed;</span><br><span class="line">u16 fix2speed;</span><br><span class="line">u16 olderror;</span><br><span class="line">u16 der;</span><br><span class="line"><span class="type">int</span> PWM;</span><br><span class="line"><span class="type">int</span> P;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  mistake= Get_Adc(ADC_CHANNE_ML) - Get_Adc(ADC_CHANNE_MR);<span class="comment">//左-右 F7-F9</span></span><br><span class="line">mistake=mistake/<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (mistake&gt;<span class="number">200</span>) error=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mistake==<span class="number">200</span>) error=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mistake&gt;<span class="number">0</span>&amp;&amp;mistake&lt;<span class="number">200</span>)error = mistake;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mistake&lt;<span class="number">0</span>&amp;&amp;mistake&gt;<span class="number">-200</span>) error=-mistake;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mistake==<span class="number">-200</span>) error=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mistake&lt;<span class="number">-200</span>) error=<span class="number">200</span>;</span><br><span class="line">  fix1speed = kp*error;</span><br><span class="line">olderror=error;</span><br><span class="line">der=error-olderror;</span><br><span class="line">fix2speed= kd*der;</span><br><span class="line"><span class="keyword">if</span> (Get_Adc(ADC_CHANNE_ML)&gt;Get_Adc(ADC_CHANNE_MR)) PWM = basic + fix1speed+fix2speed;  <span class="comment">//左边大于右边 说明黑线靠右  左轮应加速</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Get_Adc(ADC_CHANNE_ML)&lt;Get_Adc(ADC_CHANNE_MR)) PWM = basic - <span class="number">1</span>* (fix1speed+fix2speed);<span class="comment">//   黑线偏左   左轮应减速    3是电机正转和反转在相同pwm下速度不同</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Get_Adc(ADC_CHANNE_ML)== Get_Adc(ADC_CHANNE_MR)) PWM =basic;</span><br><span class="line"><span class="keyword">if</span> (PWM&lt;<span class="number">0</span>) PWM=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> PWM=PWM;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> PWM;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>电机位置环</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Pos_ctrl_ML</span><span class="params">(<span class="type">float</span> rotationNum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Moto = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Target_Position=Num_Encoder_Cnt(rotationNum,ENCODER_RESOLUTION,MOTOR_REDUCTION_RATIO);</span><br><span class="line">Read_Encoder(<span class="number">5</span>);</span><br><span class="line">Encoder_Cnt+=Encoder_cnt;<span class="comment">//每次读完清空是为了累加从每次起始点开始的脉冲数</span></span><br><span class="line">    </span><br><span class="line">     <span class="keyword">if</span>(Encoder_Cnt==Target_Position)</span><br><span class="line">    &#123;</span><br><span class="line">      Set_PWM_ML(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      Moto = Position_PID(Encoder_Cnt,Target_Position); </span><br><span class="line">      Set_PWM_ML(Moto);</span><br><span class="line">      Set_PWM_MR(Moto);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf(&quot;Encoder_Cnt=%d\tTarget_Position=%d\tccr=%d\t\r\n&quot;,Encoder_Cnt,Target_Position,Moto);</span></span><br><span class="line">HAL_Delay(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*pid.c*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bsp_pid.h&quot;</span></span></span><br><span class="line"><span class="comment">//1 0.10 0.1</span></span><br><span class="line"><span class="type">float</span> Position_KP=<span class="number">0.5</span>,Position_KI=<span class="number">0.00</span>,Position_KD=<span class="number">0.09</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Position_PID</span><span class="params">(<span class="type">int</span> reality,<span class="type">int</span> target)</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">static</span> <span class="type">float</span> Bias,Pwm,Last_Bias,Integral_bias;</span><br><span class="line">     </span><br><span class="line">    Bias=target-reality;                            <span class="comment">/* 计算偏差 */</span></span><br><span class="line">    Integral_bias+=Bias;                        <span class="comment">/* 偏差累积 */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(Integral_bias&gt; <span class="number">3000</span>) Integral_bias = <span class="number">3000</span>;   <span class="comment">/* 积分限幅 */</span></span><br><span class="line">    <span class="keyword">if</span>(Integral_bias&lt;<span class="number">-3000</span>) Integral_bias =<span class="number">-3000</span>;</span><br><span class="line">    </span><br><span class="line">    Pwm = (Position_KP*Bias)                        <span class="comment">/* 比例环节 */</span></span><br><span class="line">         +(Position_KI*Integral_bias)               <span class="comment">/* 积分环节 */</span></span><br><span class="line">         +Position_KD*(Bias-Last_Bias);             <span class="comment">/* 微分环节 */</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(Pwm&gt;<span class="number">4000</span>) Pwm=<span class="number">4000</span>;</span><br><span class="line"><span class="keyword">if</span>(Pwm&lt;<span class="number">-4000</span>) Pwm=<span class="number">-4000</span>;</span><br><span class="line"><span class="comment">/*if(Pwm&gt;0&amp;&amp;Pwm&lt;1000)</span></span><br><span class="line"><span class="comment">Pwm=1000;</span></span><br><span class="line"><span class="comment">if(Pwm&lt;0&amp;&amp;Pwm&gt;-1000)</span></span><br><span class="line"><span class="comment">Pwm=-1000;*/</span></span><br><span class="line"></span><br><span class="line">    Last_Bias=Bias;                                 <span class="comment">/* 保存上次偏差 */</span></span><br><span class="line">    <span class="keyword">return</span> Pwm;                                     <span class="comment">/* 输出结果 */</span>              </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C language programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/01/22/hello-world/"/>
      <url>/2024/01/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Hello World!</p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>前路漫漫亦灿灿</title>
      <link href="/gallery/college.html"/>
      <url>/gallery/college.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-container" data-type="data" data-button>      <div class="gallery-data">[{"url":"./college/49-1706344694822-120.jpg","alt":"49"},{"url":"./college/48-1706344708682-122.jpg","alt":"48"},{"url":"./college/47-1706344716685-124.jpg","alt":"47"},{"url":"./college/46-1706344721866-126.jpg","alt":"46"},{"url":"./college/45-1706344637895-118.jpg","alt":"45"},{"url":"./college/39-1706345196130-209.jpg","alt":"39"},{"url":"./college/37-1706345211163-211.jpg","alt":"37"},{"url":"./college/33-1706345229054-213.jpg","alt":"33"},{"url":"./college/29-1706345235414-215.jpg","alt":"29"},{"url":"./college/19-1706345257443-217.jpg","alt":"19"},{"url":"./college/12-1706345274915-219.jpg","alt":"12"},{"url":"./college/13-1706345280346-221.jpg","alt":"13"},{"url":"./college/14-1706345293624-223.jpg","alt":"14"},{"url":"./college/31-1706345317371-225.jpg","alt":"31"},{"url":"./college/43-1706345325834-227.jpg","alt":"43"},{"url":"./college/41-1706345332395-229.jpg","alt":"41"},{"url":"./college/38-1706345344631-231.jpg","alt":"38"},{"url":"./college/30-1706345352332-233.jpg","alt":"30"},{"url":"./college/32-1706345365438-235.jpg","alt":"32"},{"url":"./college/50.jpg","alt":"50"},{"url":"./college/34-1706345374354-237.jpg","alt":"34"},{"url":"./college/51.jpg","alt":"51"},{"url":"./college/52.jpg","alt":"52"},{"url":"./college/35-1706345381156-239.jpg","alt":"35"},{"url":"./college/20-1706345398048-241.jpg","alt":"20"},{"url":"./college/25-1706345411044-243.jpg","alt":"25"},{"url":"./college/24-1706345419521-245.jpg","alt":"24"},{"url":"./college/23-1706345425445-247.jpg","alt":"23"},{"url":"./college/17-1706345438446-249.jpg","alt":"17"},{"url":"./college/9-1706345445647-251.jpg","alt":"9"},{"url":"./college/8-1706345461721-257.jpg","alt":"8"},{"url":"./college/26-1706345477181-259.jpg","alt":"26"},{"url":"./college/16-1706345482816-261.jpg","alt":"16"},{"url":"./college/7-1706345489413-263.jpg","alt":"7"},{"url":"./college/6-1706345496102-265.jpg","alt":"6"},{"url":"./college/4-1706345502454-267.jpg","alt":"4"},{"url":"./college/3-1706345507417-269.jpg","alt":"3"},{"url":"./college/2-1706345515116-271.jpg","alt":"2"},{"url":"./college/1-1706345519911-273.jpg","alt":"1"}]</div>      <div class="gallery-items">      </div>    </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>尽吾志也而不能至者，可以无悔矣</title>
      <link href="/gallery/crane.html"/>
      <url>/gallery/crane.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-container" data-type="data" data-button>      <div class="gallery-data">[{"url":"./crane/19-1706339747403-43.jpg","alt":"19"},{"url":"./crane/18-1706339819893-45.jpg","alt":"18"},{"url":"./crane/17-1706339835479-47.jpg","alt":"17"},{"url":"./crane/16-1706339842391-49.jpg","alt":"16"},{"url":"./crane/4-1706339853690-51.jpg","alt":"4"},{"url":"./crane/6-1706339861221-53.jpg","alt":"6"},{"url":"./crane/12-1706339867143-55.jpg","alt":"12"},{"url":"./crane/7-1706339875488-57.jpg","alt":"7"},{"url":"./crane/13.jpg","alt":"13"},{"url":"./crane/15-1706339890044-60.jpg","alt":"15"},{"url":"./crane/9-1706339896866-62.jpg","alt":"9"},{"url":"./crane/3-1706339904800-64.jpg","alt":"3"},{"url":"./crane/5-1706339910791-66.jpg","alt":"5"}]</div>      <div class="gallery-items">      </div>    </div><div id="music-page"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>路虽远行则将至，事虽难做则必成</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>欲买桂花同载酒，终不似，少年游</title>
      <link href="/gallery/robocon.html"/>
      <url>/gallery/robocon.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-container" data-type="data" data-button>      <div class="gallery-data">[{"url":"./robocon/5.jpg","alt":"5"},{"url":"./robocon/4.jpg","alt":"4"},{"url":"./robocon/IMG_20221026_171356.jpg","alt":"IMG_20221026_171356"},{"url":"./robocon/IMG_20230226_160022.jpg","alt":"IMG_20230226_160022"},{"url":"./robocon/IMG_20230226_181211.jpg","alt":"IMG_20230226_181211"},{"url":"./robocon/IMG_20230522_191254.jpg","alt":"IMG_20230522_191254"},{"url":"./robocon/IMG_20230614_211620.jpg","alt":"IMG_20230614_211620"},{"url":"./robocon/IMG_20230707_132558.jpg","alt":"IMG_20230707_132558"},{"url":"./robocon/IMG_20230707_184452.jpg","alt":"IMG_20230707_184452"},{"url":"./robocon/IMG_20230707_205101.jpg","alt":"IMG_20230707_205101"},{"url":"./robocon/mmexport98bdd9d9588b4cdaa855aa0ae3d7dce5_1688707161464.jpeg","alt":"mmexport98bdd9d9588b4cdaa855aa0ae3d7dce5_1688707161464"},{"url":"./robocon/Screenshot_20230413_121149.jpg","alt":"Screenshot_20230413_121149"},{"url":"./robocon/Screenshot_20230708_105442.jpg","alt":"Screenshot_20230708_105442"},{"url":"./robocon/1f808d0f5874cda9.jpg","alt":"1f808d0f5874cda9"},{"url":"./robocon/62ed118391dafe0a.jpg","alt":"62ed118391dafe0a"},{"url":"./robocon/274a1c04a632f15c.jpg","alt":"274a1c04a632f15c"},{"url":"./robocon/-757c3e143b47490f.jpg","alt":"-757c3e143b47490f"}]</div>      <div class="gallery-items">      </div>    </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="/./images/7.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">我的大学</div>  <p>我的奋斗</p>  <a href="/gallery/college"></a>  </figcaption>  </figure>      <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="/./images/6.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Robocon</div>  <p>WUST ROBOCON 2023</p>  <a href="/gallery/robocon"></a>  </figcaption>  </figure>      <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="/./images/8.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">起重机</div>  <p>命运的齿轮开始转动</p>  <a href="/gallery/crane"></a>  </figcaption>  </figure>  </div>    ]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/message/index.html"/>
      <url>/message/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>zhixiong&#39;s page</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Vscode&amp;Keil</title>
      <link href="/vscode-keil/index-1.html"/>
      <url>/vscode-keil/index-1.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>vscode&amp;keil</title>
      <link href="/vscode-keil/index.html"/>
      <url>/vscode-keil/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
